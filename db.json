{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/asset/Snip20180503_1.png","path":"asset/Snip20180503_1.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180504_7.png","path":"asset/Snip20180504_7.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180701_4.png","path":"asset/Snip20180701_4.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180701_6.png","path":"asset/Snip20180701_6.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180701_8.png","path":"asset/Snip20180701_8.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181007_3.png","path":"asset/Snip20181007_3.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181007_4.png","path":"asset/Snip20181007_4.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181028_2.png","path":"asset/Snip20181028_2.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181028_1.png","path":"asset/Snip20181028_1.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190226_3.png","path":"asset/Snip20190226_3.png","modified":1,"renderable":0},{"_id":"source/asset/WechatIMG289.jpeg","path":"asset/WechatIMG289.jpeg","modified":1,"renderable":0},{"_id":"source/asset/mp4info.txt","path":"asset/mp4info.txt","modified":1,"renderable":0},{"_id":"source/asset/mp4box.txt","path":"asset/mp4box.txt","modified":1,"renderable":0},{"_id":"source/asset/qrcode_for_gh_24ff9e178d2c_258.jpg","path":"asset/qrcode_for_gh_24ff9e178d2c_258.jpg","modified":1,"renderable":0},{"_id":"source/asset/Snip20180504_4.png","path":"asset/Snip20180504_4.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180503_2.png","path":"asset/Snip20180503_2.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180504_6.png","path":"asset/Snip20180504_6.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180701_13.png","path":"asset/Snip20180701_13.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180701_5.png","path":"asset/Snip20180701_5.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180701_7.png","path":"asset/Snip20180701_7.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180703_24.png","path":"asset/Snip20180703_24.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181009_28.png","path":"asset/Snip20181009_28.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181012_31.png","path":"asset/Snip20181012_31.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190215_15.png","path":"asset/Snip20190215_15.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190215_9.png","path":"asset/Snip20190215_9.png","modified":1,"renderable":0},{"_id":"source/asset/WechatIMG621.jpeg","path":"asset/WechatIMG621.jpeg","modified":1,"renderable":0},{"_id":"source/asset/WechatIMG290.jpeg","path":"asset/WechatIMG290.jpeg","modified":1,"renderable":0},{"_id":"source/asset/WechatIMG622.jpeg","path":"asset/WechatIMG622.jpeg","modified":1,"renderable":0},{"_id":"source/asset/Snip20180701_11.png","path":"asset/Snip20180701_11.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180701_15.png","path":"asset/Snip20180701_15.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180928_95.png","path":"asset/Snip20180928_95.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181008_23.png","path":"asset/Snip20181008_23.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181008_27.png","path":"asset/Snip20181008_27.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181009_29.png","path":"asset/Snip20181009_29.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181010_10.png","path":"asset/Snip20181010_10.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181012_38.png","path":"asset/Snip20181012_38.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190215_13.png","path":"asset/Snip20190215_13.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190215_16.png","path":"asset/Snip20190215_16.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190215_17.png","path":"asset/Snip20190215_17.png","modified":1,"renderable":0},{"_id":"source/asset/qrcode_for_gh_24ff9e178d2c_1280.jpg","path":"asset/qrcode_for_gh_24ff9e178d2c_1280.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/asset/Snip20181007_2.png","path":"asset/Snip20181007_2.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180703_23.png","path":"asset/Snip20180703_23.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181010_9.png","path":"asset/Snip20181010_9.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181012_33.png","path":"asset/Snip20181012_33.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190215_10.png","path":"asset/Snip20190215_10.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190215_14.png","path":"asset/Snip20190215_14.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190215_11.png","path":"asset/Snip20190215_11.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180701_9.png","path":"asset/Snip20180701_9.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181012_32.png","path":"asset/Snip20181012_32.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190215_6.png","path":"asset/Snip20190215_6.png","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/CMakeLists.txt","path":"codesource/oc_workspace/libdispatch-1008.200.78/CMakeLists.txt","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/LICENSE","path":"codesource/oc_workspace/libdispatch-1008.200.78/LICENSE","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/Makefile.am","path":"codesource/oc_workspace/libdispatch-1008.200.78/Makefile.am","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/PATCHES","path":"codesource/oc_workspace/libdispatch-1008.200.78/PATCHES","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autogen.sh","path":"codesource/oc_workspace/libdispatch-1008.200.78/autogen.sh","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/aclocal.m4","path":"codesource/oc_workspace/libdispatch-1008.200.78/aclocal.m4","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/configure.ac","path":"codesource/oc_workspace/libdispatch-1008.200.78/configure.ac","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFApplicationPreferences.c","path":"codesource/oc_workspace/CF-1151.16/CFApplicationPreferences.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFArray.h","path":"codesource/oc_workspace/CF-1151.16/CFArray.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/APPLE_LICENSE","path":"codesource/oc_workspace/CF-1151.16/APPLE_LICENSE","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFArray.c","path":"codesource/oc_workspace/CF-1151.16/CFArray.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFAvailability.h","path":"codesource/oc_workspace/CF-1151.16/CFAvailability.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBag.h","path":"codesource/oc_workspace/CF-1151.16/CFBag.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBag.c","path":"codesource/oc_workspace/CF-1151.16/CFBag.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBase.c","path":"codesource/oc_workspace/CF-1151.16/CFBase.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBase.h","path":"codesource/oc_workspace/CF-1151.16/CFBase.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBasicHash.h","path":"codesource/oc_workspace/CF-1151.16/CFBasicHash.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBasicHashFindBucket.m","path":"codesource/oc_workspace/CF-1151.16/CFBasicHashFindBucket.m","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBigNumber.h","path":"codesource/oc_workspace/CF-1151.16/CFBigNumber.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBigNumber.c","path":"codesource/oc_workspace/CF-1151.16/CFBigNumber.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBinaryHeap.c","path":"codesource/oc_workspace/CF-1151.16/CFBinaryHeap.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBitVector.c","path":"codesource/oc_workspace/CF-1151.16/CFBitVector.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBitVector.h","path":"codesource/oc_workspace/CF-1151.16/CFBitVector.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBinaryHeap.h","path":"codesource/oc_workspace/CF-1151.16/CFBinaryHeap.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBuiltinConverters.c","path":"codesource/oc_workspace/CF-1151.16/CFBuiltinConverters.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundlePriv.h","path":"codesource/oc_workspace/CF-1151.16/CFBundlePriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle.h","path":"codesource/oc_workspace/CF-1151.16/CFBundle.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_BinaryTypes.h","path":"codesource/oc_workspace/CF-1151.16/CFBundle_BinaryTypes.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Binary.c","path":"codesource/oc_workspace/CF-1151.16/CFBundle_Binary.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_InfoPlist.c","path":"codesource/oc_workspace/CF-1151.16/CFBundle_InfoPlist.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Internal.h","path":"codesource/oc_workspace/CF-1151.16/CFBundle_Internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Locale.c","path":"codesource/oc_workspace/CF-1151.16/CFBundle_Locale.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Strings.c","path":"codesource/oc_workspace/CF-1151.16/CFBundle_Strings.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBurstTrie.h","path":"codesource/oc_workspace/CF-1151.16/CFBurstTrie.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Resources.c","path":"codesource/oc_workspace/CF-1151.16/CFBundle_Resources.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFByteOrder.h","path":"codesource/oc_workspace/CF-1151.16/CFByteOrder.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCalendar.h","path":"codesource/oc_workspace/CF-1151.16/CFCalendar.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCalendar.c","path":"codesource/oc_workspace/CF-1151.16/CFCalendar.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCharacterSet.h","path":"codesource/oc_workspace/CF-1151.16/CFCharacterSet.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCharacterSetPriv.h","path":"codesource/oc_workspace/CF-1151.16/CFCharacterSetPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFData.h","path":"codesource/oc_workspace/CF-1151.16/CFData.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFConcreteStreams.c","path":"codesource/oc_workspace/CF-1151.16/CFConcreteStreams.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFData.c","path":"codesource/oc_workspace/CF-1151.16/CFData.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDate.h","path":"codesource/oc_workspace/CF-1151.16/CFDate.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDate.c","path":"codesource/oc_workspace/CF-1151.16/CFDate.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDateFormatter.h","path":"codesource/oc_workspace/CF-1151.16/CFDateFormatter.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDictionary.c","path":"codesource/oc_workspace/CF-1151.16/CFDictionary.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDictionary.h","path":"codesource/oc_workspace/CF-1151.16/CFDictionary.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFError.c","path":"codesource/oc_workspace/CF-1151.16/CFError.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFFileUtilities.c","path":"codesource/oc_workspace/CF-1151.16/CFFileUtilities.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFError_Private.h","path":"codesource/oc_workspace/CF-1151.16/CFError_Private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFError.h","path":"codesource/oc_workspace/CF-1151.16/CFError.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFICUConverters.c","path":"codesource/oc_workspace/CF-1151.16/CFICUConverters.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFICUConverters.h","path":"codesource/oc_workspace/CF-1151.16/CFICUConverters.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFICULogging.h","path":"codesource/oc_workspace/CF-1151.16/CFICULogging.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFInternal.h","path":"codesource/oc_workspace/CF-1151.16/CFInternal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLocale.c","path":"codesource/oc_workspace/CF-1151.16/CFLocale.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLocale.h","path":"codesource/oc_workspace/CF-1151.16/CFLocale.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLocaleInternal.h","path":"codesource/oc_workspace/CF-1151.16/CFLocaleInternal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLogUtilities.h","path":"codesource/oc_workspace/CF-1151.16/CFLogUtilities.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLocaleKeys.c","path":"codesource/oc_workspace/CF-1151.16/CFLocaleKeys.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFMachPort.h","path":"codesource/oc_workspace/CF-1151.16/CFMachPort.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFMachPort.c","path":"codesource/oc_workspace/CF-1151.16/CFMachPort.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFMessagePort.h","path":"codesource/oc_workspace/CF-1151.16/CFMessagePort.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFNumber.h","path":"codesource/oc_workspace/CF-1151.16/CFNumber.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFMessagePort.c","path":"codesource/oc_workspace/CF-1151.16/CFMessagePort.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFNumberFormatter.c","path":"codesource/oc_workspace/CF-1151.16/CFNumberFormatter.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFNumberFormatter.h","path":"codesource/oc_workspace/CF-1151.16/CFNumberFormatter.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFOldStylePList.c","path":"codesource/oc_workspace/CF-1151.16/CFOldStylePList.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlatform.c","path":"codesource/oc_workspace/CF-1151.16/CFPlatform.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlatformConverters.c","path":"codesource/oc_workspace/CF-1151.16/CFPlatformConverters.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn.h","path":"codesource/oc_workspace/CF-1151.16/CFPlugIn.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn.c","path":"codesource/oc_workspace/CF-1151.16/CFPlugIn.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugInCOM.h","path":"codesource/oc_workspace/CF-1151.16/CFPlugInCOM.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn_Factory.h","path":"codesource/oc_workspace/CF-1151.16/CFPlugIn_Factory.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn_Factory.c","path":"codesource/oc_workspace/CF-1151.16/CFPlugIn_Factory.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn_Instance.c","path":"codesource/oc_workspace/CF-1151.16/CFPlugIn_Instance.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn_PlugIn.c","path":"codesource/oc_workspace/CF-1151.16/CFPlugIn_PlugIn.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPreferences.h","path":"codesource/oc_workspace/CF-1151.16/CFPreferences.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPreferences.c","path":"codesource/oc_workspace/CF-1151.16/CFPreferences.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPriv.h","path":"codesource/oc_workspace/CF-1151.16/CFPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPropertyList.h","path":"codesource/oc_workspace/CF-1151.16/CFPropertyList.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFRunLoop.h","path":"codesource/oc_workspace/CF-1151.16/CFRunLoop.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFRuntime.c","path":"codesource/oc_workspace/CF-1151.16/CFRuntime.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFRuntime.h","path":"codesource/oc_workspace/CF-1151.16/CFRuntime.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSocket.h","path":"codesource/oc_workspace/CF-1151.16/CFSocket.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSet.h","path":"codesource/oc_workspace/CF-1151.16/CFSet.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSet.c","path":"codesource/oc_workspace/CF-1151.16/CFSet.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSocketStream.c","path":"codesource/oc_workspace/CF-1151.16/CFSocketStream.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSortFunctions.c","path":"codesource/oc_workspace/CF-1151.16/CFSortFunctions.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStorage.h","path":"codesource/oc_workspace/CF-1151.16/CFStorage.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStream.h","path":"codesource/oc_workspace/CF-1151.16/CFStream.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStreamInternal.h","path":"codesource/oc_workspace/CF-1151.16/CFStreamInternal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStreamAbstract.h","path":"codesource/oc_workspace/CF-1151.16/CFStreamAbstract.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStreamPriv.h","path":"codesource/oc_workspace/CF-1151.16/CFStreamPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringDefaultEncoding.h","path":"codesource/oc_workspace/CF-1151.16/CFStringDefaultEncoding.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFString.h","path":"codesource/oc_workspace/CF-1151.16/CFString.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingConverter.c","path":"codesource/oc_workspace/CF-1151.16/CFStringEncodingConverter.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingConverter.h","path":"codesource/oc_workspace/CF-1151.16/CFStringEncodingConverter.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingConverterPriv.h","path":"codesource/oc_workspace/CF-1151.16/CFStringEncodingConverterPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingConverterExt.h","path":"codesource/oc_workspace/CF-1151.16/CFStringEncodingConverterExt.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingDatabase.h","path":"codesource/oc_workspace/CF-1151.16/CFStringEncodingDatabase.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingDatabase.c","path":"codesource/oc_workspace/CF-1151.16/CFStringEncodingDatabase.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingExt.h","path":"codesource/oc_workspace/CF-1151.16/CFStringEncodingExt.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSystemDirectories.c","path":"codesource/oc_workspace/CF-1151.16/CFSystemDirectories.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringUtilities.c","path":"codesource/oc_workspace/CF-1151.16/CFStringUtilities.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodings.c","path":"codesource/oc_workspace/CF-1151.16/CFStringEncodings.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringScanner.c","path":"codesource/oc_workspace/CF-1151.16/CFStringScanner.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFTree.h","path":"codesource/oc_workspace/CF-1151.16/CFTree.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFTimeZone.h","path":"codesource/oc_workspace/CF-1151.16/CFTimeZone.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFTimeZone.c","path":"codesource/oc_workspace/CF-1151.16/CFTimeZone.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFTree.c","path":"codesource/oc_workspace/CF-1151.16/CFTree.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURLAccess.c","path":"codesource/oc_workspace/CF-1151.16/CFURLAccess.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURL.inc.h","path":"codesource/oc_workspace/CF-1151.16/CFURL.inc.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURL.h","path":"codesource/oc_workspace/CF-1151.16/CFURL.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURLAccess.h","path":"codesource/oc_workspace/CF-1151.16/CFURLAccess.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUUID.h","path":"codesource/oc_workspace/CF-1151.16/CFUUID.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUUID.c","path":"codesource/oc_workspace/CF-1151.16/CFUUID.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURLPriv.h","path":"codesource/oc_workspace/CF-1151.16/CFURLPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUniChar.h","path":"codesource/oc_workspace/CF-1151.16/CFUniChar.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUniChar.c","path":"codesource/oc_workspace/CF-1151.16/CFUniChar.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUniCharPriv.h","path":"codesource/oc_workspace/CF-1151.16/CFUniCharPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUniCharPropertyDatabase.data","path":"codesource/oc_workspace/CF-1151.16/CFUniCharPropertyDatabase.data","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodeDecomposition.h","path":"codesource/oc_workspace/CF-1151.16/CFUnicodeDecomposition.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodeDecomposition.c","path":"codesource/oc_workspace/CF-1151.16/CFUnicodeDecomposition.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodePrecomposition.h","path":"codesource/oc_workspace/CF-1151.16/CFUnicodePrecomposition.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodePrecomposition.c","path":"codesource/oc_workspace/CF-1151.16/CFUnicodePrecomposition.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUserNotification.c","path":"codesource/oc_workspace/CF-1151.16/CFUserNotification.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUserNotification.h","path":"codesource/oc_workspace/CF-1151.16/CFUserNotification.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUtilities.h","path":"codesource/oc_workspace/CF-1151.16/CFUtilities.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFVersion.c","path":"codesource/oc_workspace/CF-1151.16/CFVersion.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUtilities.c","path":"codesource/oc_workspace/CF-1151.16/CFUtilities.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFWindowsUtilities.c","path":"codesource/oc_workspace/CF-1151.16/CFWindowsUtilities.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLInputStream.h","path":"codesource/oc_workspace/CF-1151.16/CFXMLInputStream.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLNode.h","path":"codesource/oc_workspace/CF-1151.16/CFXMLNode.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLInputStream.c","path":"codesource/oc_workspace/CF-1151.16/CFXMLInputStream.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLNode.c","path":"codesource/oc_workspace/CF-1151.16/CFXMLNode.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLTree.c","path":"codesource/oc_workspace/CF-1151.16/CFXMLTree.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLPreferencesDomain.c","path":"codesource/oc_workspace/CF-1151.16/CFXMLPreferencesDomain.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLParser.h","path":"codesource/oc_workspace/CF-1151.16/CFXMLParser.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CoreFoundation.h","path":"codesource/oc_workspace/CF-1151.16/CoreFoundation.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CoreFoundation_Prefix.h","path":"codesource/oc_workspace/CF-1151.16/CoreFoundation_Prefix.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/ForFoundationOnly.h","path":"codesource/oc_workspace/CF-1151.16/ForFoundationOnly.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/Info.plist","path":"codesource/oc_workspace/CF-1151.16/Info.plist","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/Makefile","path":"codesource/oc_workspace/CF-1151.16/Makefile","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/MakefileLinux","path":"codesource/oc_workspace/CF-1151.16/MakefileLinux","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/MakefileVersion","path":"codesource/oc_workspace/CF-1151.16/MakefileVersion","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/PropertyList.dtd","path":"codesource/oc_workspace/CF-1151.16/PropertyList.dtd","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/SymbolAliases","path":"codesource/oc_workspace/CF-1151.16/SymbolAliases","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/README_CFLITE","path":"codesource/oc_workspace/CF-1151.16/README_CFLITE","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/TargetConditionals.h","path":"codesource/oc_workspace/CF-1151.16/TargetConditionals.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/plconvert.c","path":"codesource/oc_workspace/CF-1151.16/plconvert.c","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"source/asset/Snip20180504_10.png","path":"asset/Snip20180504_10.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20180701_12.png","path":"asset/Snip20180701_12.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181012_34.png","path":"asset/Snip20181012_34.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190217_1.png","path":"asset/Snip20190217_1.png","modified":1,"renderable":0},{"_id":"source/books/CMake Practice.pdf","path":"books/CMake Practice.pdf","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBasicHash.c","path":"codesource/oc_workspace/CF-1151.16/CFBasicHash.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBinaryPList.c","path":"codesource/oc_workspace/CF-1151.16/CFBinaryPList.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle.c","path":"codesource/oc_workspace/CF-1151.16/CFBundle.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Grok.c","path":"codesource/oc_workspace/CF-1151.16/CFBundle_Grok.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBurstTrie.c","path":"codesource/oc_workspace/CF-1151.16/CFBurstTrie.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDateFormatter.c","path":"codesource/oc_workspace/CF-1151.16/CFDateFormatter.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFNumber.c","path":"codesource/oc_workspace/CF-1151.16/CFNumber.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStorage.c","path":"codesource/oc_workspace/CF-1151.16/CFStorage.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStream.c","path":"codesource/oc_workspace/CF-1151.16/CFStream.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodeData-B.mapping","path":"codesource/oc_workspace/CF-1151.16/CFUnicodeData-B.mapping","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodeData-L.mapping","path":"codesource/oc_workspace/CF-1151.16/CFUnicodeData-L.mapping","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLParser.c","path":"codesource/oc_workspace/CF-1151.16/CFXMLParser.c","modified":1,"renderable":0},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"source/asset/Snip20181010_4.png","path":"asset/Snip20181010_4.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181012_30.png","path":"asset/Snip20181012_30.png","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/AppDelegate.h","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/AppDelegate.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/AppDelegate.m","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/AppDelegate.m","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Info.plist","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Info.plist","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/ViewController.h","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/ViewController.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/ViewController.m","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/ViewController.m","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/main.m","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/main.m","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceTests/Info.plist","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceTests/Info.plist","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceTests/RunloopWorkspaceTests.m","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceTests/RunloopWorkspaceTests.m","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.pbxproj","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.pbxproj","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/APPLE_LICENSE","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/APPLE_LICENSE","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFArray.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFArray.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFArray.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFArray.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFApplicationPreferences.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFApplicationPreferences.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBag.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBag.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFAvailability.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFAvailability.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBag.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBag.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBase.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBase.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBase.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBase.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBasicHashFindBucket.m","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBasicHashFindBucket.m","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBasicHash.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBasicHash.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBigNumber.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBigNumber.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBigNumber.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBigNumber.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBinaryHeap.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBinaryHeap.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBinaryHeap.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBinaryHeap.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBitVector.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBitVector.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBitVector.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBitVector.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBuiltinConverters.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBuiltinConverters.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_BinaryTypes.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_BinaryTypes.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundlePriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundlePriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Binary.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Binary.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Internal.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_InfoPlist.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_InfoPlist.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Locale.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Locale.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Strings.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Strings.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Resources.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Resources.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBurstTrie.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBurstTrie.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCalendar.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCalendar.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFByteOrder.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFByteOrder.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCalendar.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCalendar.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSetPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSetPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSet.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSet.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFConcreteStreams.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFConcreteStreams.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFData.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFData.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFData.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFData.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDate.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDate.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDate.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDate.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDateFormatter.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDateFormatter.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDictionary.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDictionary.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDictionary.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDictionary.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFError.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFError.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFError.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFError.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFError_Private.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFError_Private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFFileUtilities.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFFileUtilities.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFICULogging.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFICULogging.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFICUConverters.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFICUConverters.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFICUConverters.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFICUConverters.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocale.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocale.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFInternal.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFInternal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocale.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocale.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocaleKeys.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocaleKeys.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocaleInternal.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocaleInternal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLogUtilities.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLogUtilities.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMachPort.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMachPort.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMachPort.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMachPort.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMessagePort.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMessagePort.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMessagePort.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMessagePort.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumber.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumber.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumberFormatter.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumberFormatter.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumberFormatter.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumberFormatter.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFOldStylePList.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFOldStylePList.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlatform.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlatform.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlatformConverters.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlatformConverters.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugInCOM.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugInCOM.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_Factory.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_Factory.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_PlugIn.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_PlugIn.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_Instance.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_Instance.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_Factory.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_Factory.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPreferences.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPreferences.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPreferences.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPreferences.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPropertyList.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPropertyList.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRuntime.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRuntime.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRunLoop.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRunLoop.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRuntime.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRuntime.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSet.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSet.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSocket.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSocket.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSet.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSet.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSocketStream.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSocketStream.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStorage.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStorage.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSortFunctions.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSortFunctions.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStream.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStream.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStreamAbstract.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStreamAbstract.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStreamInternal.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStreamInternal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStreamPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStreamPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringDefaultEncoding.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringDefaultEncoding.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFString.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFString.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverter.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverter.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverterPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverterPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverter.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverter.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverterExt.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverterExt.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingDatabase.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingDatabase.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingDatabase.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingDatabase.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingExt.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingExt.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringScanner.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringScanner.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodings.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodings.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSystemDirectories.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSystemDirectories.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringUtilities.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringUtilities.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTimeZone.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTimeZone.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTree.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTree.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTimeZone.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTimeZone.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTree.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTree.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURL.inc.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURL.inc.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURLAccess.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURLAccess.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURL.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURL.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURLAccess.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURLAccess.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUUID.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUUID.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURLPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURLPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUUID.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUUID.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniCharPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniCharPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniChar.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniChar.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniChar.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniChar.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniCharPropertyDatabase.data","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniCharPropertyDatabase.data","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeDecomposition.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeDecomposition.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeDecomposition.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeDecomposition.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodePrecomposition.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodePrecomposition.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUserNotification.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUserNotification.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodePrecomposition.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodePrecomposition.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUserNotification.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUserNotification.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFVersion.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFVersion.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUtilities.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUtilities.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUtilities.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUtilities.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLInputStream.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLInputStream.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLNode.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLNode.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFWindowsUtilities.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFWindowsUtilities.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLInputStream.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLInputStream.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLNode.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLNode.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLParser.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLParser.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLTree.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLTree.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLPreferencesDomain.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLPreferencesDomain.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CoreFoundation.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CoreFoundation.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CoreFoundation_Prefix.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CoreFoundation_Prefix.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/Info.plist","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/Info.plist","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/ForFoundationOnly.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/ForFoundationOnly.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/Makefile","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/Makefile","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/MakefileLinux","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/MakefileLinux","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/MakefileVersion","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/MakefileVersion","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/PropertyList.dtd","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/PropertyList.dtd","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/README_CFLITE","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/README_CFLITE","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/SymbolAliases","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/SymbolAliases","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/TargetConditionals.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/TargetConditionals.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/plconvert.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/plconvert.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceUITests/Info.plist","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceUITests/Info.plist","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceUITests/RunloopWorkspaceUITests.m","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceUITests/RunloopWorkspaceUITests.m","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/requests","path":"codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/requests","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/config.h.in","path":"codesource/oc_workspace/libdispatch-1008.200.78/cmake/config.h.in","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/compile","path":"codesource/oc_workspace/libdispatch-1008.200.78/config/compile","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/config_ac.h.in","path":"codesource/oc_workspace/libdispatch-1008.200.78/config/config_ac.h.in","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/config.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/config/config.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/config.guess","path":"codesource/oc_workspace/libdispatch-1008.200.78/config/config.guess","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/config.sub","path":"codesource/oc_workspace/libdispatch-1008.200.78/config/config.sub","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/install-sh","path":"codesource/oc_workspace/libdispatch-1008.200.78/config/install-sh","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/missing","path":"codesource/oc_workspace/libdispatch-1008.200.78/config/missing","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/CMakeLists.txt","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/CMakeLists.txt","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/Makefile.am","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/Makefile.am","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/base.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/base.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/dispatch.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/dispatch.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/block.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/block.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/data.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/data.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/io.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/io.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/introspection.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/introspection.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/group.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/group.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/object.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/object.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/once.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/once.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/semaphore.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/semaphore.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/queue.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/queue.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/time.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/time.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/source.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/source.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/atomic.m4","path":"codesource/oc_workspace/libdispatch-1008.200.78/m4/atomic.m4","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/ltsugar.m4","path":"codesource/oc_workspace/libdispatch-1008.200.78/m4/ltsugar.m4","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/blocks.m4","path":"codesource/oc_workspace/libdispatch-1008.200.78/m4/blocks.m4","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/ltoptions.m4","path":"codesource/oc_workspace/libdispatch-1008.200.78/m4/ltoptions.m4","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/ltversion.m4","path":"codesource/oc_workspace/libdispatch-1008.200.78/m4/ltversion.m4","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/lt~obsolete.m4","path":"codesource/oc_workspace/libdispatch-1008.200.78/m4/lt~obsolete.m4","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/pkg.m4","path":"codesource/oc_workspace/libdispatch-1008.200.78/m4/pkg.m4","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/CMakeLists.txt","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/CMakeLists.txt","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/Makefile.am","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/Makefile.am","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_after.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_after.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_api.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_api.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_apply.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_apply.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_async.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_async.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_benchmark.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_benchmark.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_data_create.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_data_create.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_group_create.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_group_create.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_io_read.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_io_read.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_io_create.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_io_create.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_object.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_object.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_once.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_once.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_read.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_read.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_queue_create.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_queue_create.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_semaphore_create.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_semaphore_create.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_time.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_time.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/Makefile.am","path":"codesource/oc_workspace/libdispatch-1008.200.78/os/Makefile.am","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/CMakeLists.txt","path":"codesource/oc_workspace/libdispatch-1008.200.78/os/CMakeLists.txt","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_source_create.3","path":"codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_source_create.3","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/linux_base.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/os/linux_base.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/firehose_buffer_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/os/firehose_buffer_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/firehose_server_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/os/firehose_server_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/object.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/os/object.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/object_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/os/object_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/voucher_activity_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/os/voucher_activity_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/CMakeLists.txt","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/CMakeLists.txt","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/Makefile.am","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/Makefile.am","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/voucher_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/os/voucher_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/benchmark.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/benchmark.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/data_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/data_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/layout_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/layout_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/io_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/io_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/introspection_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/introspection_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/mach_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/mach_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/queue_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/queue_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/source_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/source_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/time_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/time_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/resolver/resolved.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/resolver/resolved.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/workloop_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/workloop_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/resolver/resolver.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/resolver/resolver.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/resolver/resolver.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/resolver/resolver.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/CMakeLists.txt","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/CMakeLists.txt","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/allocator.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/allocator.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/allocator_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/allocator_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/Makefile.am","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/Makefile.am","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/apply.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/apply.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/benchmark.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/benchmark.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/block.cpp","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/block.cpp","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/data.m","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/data.m","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/data.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/data.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/data_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/data_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/init.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/init.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/introspection.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/introspection.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/introspection_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/introspection_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/io_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/io_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/libdispatch.codes","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/libdispatch.codes","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/libdispatch.plist","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/libdispatch.plist","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/mach_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/mach_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/object.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/object.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/object.m","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/object.m","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/protocol.defs","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/protocol.defs","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/once.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/once.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/object_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/object_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/provider.d","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/provider.d","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/semaphore_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/semaphore_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/semaphore.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/semaphore.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/queue_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/queue_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/source_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/source_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/time.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/time.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/trace.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/trace.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/source.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/source.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/transform.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/transform.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/tools/dispatch_timers.d","path":"codesource/oc_workspace/libdispatch-1008.200.78/tools/dispatch_timers.d","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/voucher_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/voucher_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/tools/dispatch_trace.d","path":"codesource/oc_workspace/libdispatch-1008.200.78/tools/dispatch_trace.d","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/voucher.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/voucher.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/tools/firehose_trace.lua","path":"codesource/oc_workspace/libdispatch-1008.200.78/tools/firehose_trace.lua","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/tools/voucher_trace.d","path":"codesource/oc_workspace/libdispatch-1008.200.78/tools/voucher_trace.d","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-dyld-stub.xcconfig","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-dyld-stub.xcconfig","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-introspection.xcconfig","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-introspection.xcconfig","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-mp-static.xcconfig","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-mp-static.xcconfig","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-resolved.xcconfig","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-resolved.xcconfig","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-resolver.xcconfig","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-resolver.xcconfig","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.aliases","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.aliases","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.clean","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.clean","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.dirty","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.dirty","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.interposable","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.interposable","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.order","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.order","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libfirehose.xcconfig","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libfirehose.xcconfig","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.xcconfig","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.xcconfig","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/check-order.sh","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/check-order.sh","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/install-headers.sh","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/install-headers.sh","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/install-dtrace.sh","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/install-dtrace.sh","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libfirehose_kernel.xcconfig","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libfirehose_kernel.xcconfig","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/install-manpages.sh","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/install-manpages.sh","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/run-on-install.sh","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/run-on-install.sh","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/mig-headers.sh","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/mig-headers.sh","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/postprocess-headers.sh","path":"codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/postprocess-headers.sh","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCharacterSet.c","path":"codesource/oc_workspace/CF-1151.16/CFCharacterSet.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLocaleIdentifier.c","path":"codesource/oc_workspace/CF-1151.16/CFLocaleIdentifier.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPropertyList.c","path":"codesource/oc_workspace/CF-1151.16/CFPropertyList.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFRunLoop.c","path":"codesource/oc_workspace/CF-1151.16/CFRunLoop.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSocket.c","path":"codesource/oc_workspace/CF-1151.16/CFSocket.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/Examples/plconvert.c","path":"codesource/oc_workspace/CF-1151.16/Examples/plconvert.c","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"source/asset/Snip20181008_24.png","path":"asset/Snip20181008_24.png","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBasicHash.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBasicHash.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBinaryPList.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBinaryPList.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Grok.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Grok.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBurstTrie.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBurstTrie.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDateFormatter.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDateFormatter.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumber.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumber.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStorage.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStorage.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStream.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStream.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeData-B.mapping","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeData-B.mapping","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeData-L.mapping","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeData-L.mapping","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLParser.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLParser.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/traces.1","path":"codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/traces.1","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/io.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/io.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/inline_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/inline_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/mach.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/mach.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURL.c","path":"codesource/oc_workspace/CF-1151.16/CFURL.c","modified":1,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"source/asset/Snip20181012_35.png","path":"asset/Snip20181012_35.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20181012_36.png","path":"asset/Snip20181012_36.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190215_7.png","path":"asset/Snip20190215_7.png","modified":1,"renderable":0},{"_id":"source/asset/Snip20190217_2.png","path":"asset/Snip20190217_2.png","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Base.lproj/LaunchScreen.storyboard","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Base.lproj/LaunchScreen.storyboard","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Base.lproj/Main.storyboard","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Base.lproj/Main.storyboard","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.xcworkspace/contents.xcworkspacedata","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.xcworkspace/contents.xcworkspacedata","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-1151.16 2.xcodeproj/project.pbxproj","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-1151.16 2.xcodeproj/project.pbxproj","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-1151.16.xcodeproj/project.pbxproj","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-1151.16.xcodeproj/project.pbxproj","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSet.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSet.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocaleIdentifier.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocaleIdentifier.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPropertyList.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPropertyList.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRunLoop.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRunLoop.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSocket.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSocket.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/Examples/plconvert.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/Examples/plconvert.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DTrace.cmake","path":"codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DTrace.cmake","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DispatchAppleOptions.cmake","path":"codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DispatchAppleOptions.cmake","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/FindLibRT.cmake","path":"codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/FindLibRT.cmake","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DispatchSanitization.cmake","path":"codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DispatchSanitization.cmake","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DispatchCompilerWarnings.cmake","path":"codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DispatchCompilerWarnings.cmake","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/SwiftSupport.cmake","path":"codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/SwiftSupport.cmake","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/traces.2","path":"codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/traces.2","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/traces.0","path":"codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/traces.0","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/darwin/module.modulemap","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/darwin/module.modulemap","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/generic/module.modulemap","path":"codesource/oc_workspace/libdispatch-1008.200.78/dispatch/generic/module.modulemap","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.xcworkspace/contents.xcworkspacedata","path":"codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.xcworkspace/contents.xcworkspacedata","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.pbxproj","path":"codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.pbxproj","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/darwin/module.modulemap","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/darwin/module.modulemap","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/generic/module.modulemap","path":"codesource/oc_workspace/libdispatch-1008.200.78/private/generic/module.modulemap","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/Block.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/Block.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/data.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/data.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/Block_private.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/Block_private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/runtime.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/runtime.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/event.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/event/event.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_config.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_config.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_epoll.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_epoll.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose.defs","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose.defs","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/workqueue_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/event/workqueue_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/workqueue.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/event/workqueue.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_inline_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_inline_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_buffer.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_buffer.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_buffer_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_buffer_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_reply.defs","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_reply.defs","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_server_internal.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_server_internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_types.defs","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_types.defs","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_server_object.m","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_server_object.m","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_server.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_server.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/atomic.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/atomic.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/android_stubs.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/android_stubs.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/atomic_sfb.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/atomic_sfb.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/linux_stubs.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/linux_stubs.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/getprogname.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/getprogname.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/hw_config.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/hw_config.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/linux_stubs.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/linux_stubs.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/perfmon.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/perfmon.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/lock.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/lock.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/lock.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/lock.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/target.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/target.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/time.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/time.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/priority.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/priority.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/yield.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/yield.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Block.swift","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Block.swift","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Data.swift","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Data.swift","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/tsd.h","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/shims/tsd.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Dispatch.apinotes","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Dispatch.apinotes","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Dispatch.swift","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Dispatch.swift","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/IO.swift","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/IO.swift","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/DispatchStubs.cc","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/DispatchStubs.cc","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Queue.swift","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Queue.swift","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Private.swift","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Private.swift","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Time.swift","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Time.swift","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Source.swift","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Source.swift","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Wrapper.swift","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Wrapper.swift","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFString.c","path":"codesource/oc_workspace/CF-1151.16/CFString.c","modified":1,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURL.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURL.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_kevent.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_kevent.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/queue.c","path":"codesource/oc_workspace/libdispatch-1008.200.78/src/queue.c","modified":1,"renderable":0},{"_id":"source/asset/Snip20181012_29.png","path":"asset/Snip20181012_29.png","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFString.c","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFString.c","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/ltmain.sh","path":"codesource/oc_workspace/libdispatch-1008.200.78/config/ltmain.sh","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","path":"codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/libtool.m4","path":"codesource/oc_workspace/libdispatch-1008.200.78/m4/libtool.m4","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCharacterSetBitmaps.bitmap","path":"codesource/oc_workspace/CF-1151.16/CFCharacterSetBitmaps.bitmap","modified":1,"renderable":0},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"source/codesource/oc_workspace/gz_dir/libdispatch-1008.200.78.tar.gz","path":"codesource/oc_workspace/gz_dir/libdispatch-1008.200.78.tar.gz","modified":1,"renderable":0},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/xcuserdata/Aka.xcuserdatad/xcschemes/xcschememanagement.plist","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/xcuserdata/Aka.xcuserdatad/xcschemes/xcschememanagement.plist","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBag.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBag.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.xcworkspace/xcuserdata/Aka.xcuserdatad/UserInterfaceState.xcuserstate","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.xcworkspace/xcuserdata/Aka.xcuserdatad/UserInterfaceState.xcuserstate","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFArray.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFArray.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFAvailability.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFAvailability.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBigNumber.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBigNumber.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBasicHash.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBasicHash.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBitVector.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBitVector.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBinaryHeap.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBinaryHeap.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBase.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBase.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundle_BinaryTypes.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundle_BinaryTypes.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundlePriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundlePriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFByteOrder.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFByteOrder.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundle.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundle.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFCharacterSet.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFCharacterSet.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundle_Internal.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundle_Internal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFData.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFData.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBurstTrie.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBurstTrie.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFDateFormatter.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFDateFormatter.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFCalendar.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFCalendar.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFCharacterSetPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFCharacterSetPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFDate.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFDate.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFError.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFError.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFDictionary.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFDictionary.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFInternal.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFInternal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFError_Private.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFError_Private.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFICUConverters.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFICUConverters.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFLogUtilities.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFLogUtilities.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFICULogging.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFICULogging.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFLocaleInternal.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFLocaleInternal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFLocale.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFLocale.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFNumberFormatter.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFNumberFormatter.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFMachPort.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFMachPort.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFMessagePort.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFMessagePort.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFNumber.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFNumber.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPreferences.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPreferences.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPlugIn.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPlugIn.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPropertyList.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPropertyList.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPlugInCOM.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPlugInCOM.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFRuntime.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFRuntime.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPlugIn_Factory.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPlugIn_Factory.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFSocket.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFSocket.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFRunLoop.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFRunLoop.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFSet.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFSet.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStorage.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStorage.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStream.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStream.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFString.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFString.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStreamAbstract.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStreamAbstract.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStreamInternal.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStreamInternal.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStreamPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStreamPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingConverterPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingConverterPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringDefaultEncoding.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringDefaultEncoding.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingConverter.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingConverter.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingConverterExt.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingConverterExt.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingDatabase.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingDatabase.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFTree.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFTree.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURL.inc.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURL.inc.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingExt.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingExt.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFTimeZone.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFTimeZone.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURL.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURL.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUniChar.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUniChar.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURLAccess.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURLAccess.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURLPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURLPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUUID.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUUID.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUniCharPriv.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUniCharPriv.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUnicodeDecomposition.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUnicodeDecomposition.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUnicodePrecomposition.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUnicodePrecomposition.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUserNotification.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUserNotification.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFXMLInputStream.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFXMLInputStream.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFXMLParser.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFXMLParser.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUtilities.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUtilities.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFXMLNode.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFXMLNode.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CoreFoundation.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CoreFoundation.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CoreFoundation_Prefix.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CoreFoundation_Prefix.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSetBitmaps.bitmap","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSetBitmaps.bitmap","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/ForFoundationOnly.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/ForFoundationOnly.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/TargetConditionals.h","path":"codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/TargetConditionals.h","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/xcuserdata/Aka.xcuserdatad/xcschemes/xcschememanagement.plist","path":"codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/xcuserdata/Aka.xcuserdatad/xcschemes/xcschememanagement.plist","modified":1,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.xcworkspace/xcuserdata/Aka.xcuserdatad/UserInterfaceState.xcuserstate","path":"codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.xcworkspace/xcuserdata/Aka.xcuserdatad/UserInterfaceState.xcuserstate","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/configure","path":"codesource/oc_workspace/libdispatch-1008.200.78/configure","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/output.2","path":"codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/output.2","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/output.0","path":"codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/output.0","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/output.1","path":"codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/output.1","modified":1,"renderable":0},{"_id":"source/asset/Snip20181012_37.png","path":"asset/Snip20181012_37.png","modified":1,"renderable":0},{"_id":"source/codesource/oc_workspace/gz_dir/CF-1151.16.tar.gz","path":"codesource/oc_workspace/gz_dir/CF-1151.16.tar.gz","modified":1,"renderable":0},{"_id":"source/asset/WechatIMG6.png","path":"asset/WechatIMG6.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"46a519f517b8163e092239d6e153b1b43cd2c2b6","modified":1550652896286},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1537243694114},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1537243694115},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1537243694115},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1537243694116},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1537243694117},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1537243694117},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1537243694117},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1537243694117},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1537243694117},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1537243694118},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1537243694118},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1537243694118},{"_id":"themes/next/_config.yml","hash":"aa29089a9a41027adc125cf4fc18dd6d839ec27c","modified":1551553628231},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1537243694119},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1537243694119},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1537243694148},{"_id":"source/_posts/#显示相关.sh","hash":"13798ddb1d25066c0a987cbfeb94dc1482119ef1","modified":1551097918818},{"_id":"source/_posts/AR.md","hash":"444f18ee8f681d537062622ddd3066052b3c6c0b","modified":1550219408195},{"_id":"source/_posts/ARKit.md","hash":"870c79d66c2a8db9dc7f8a6e4a1f7537038574c2","modified":1550240173194},{"_id":"source/_posts/C-预处理.md","hash":"574fb2e75fe86951e5c0b55ca368f95678d2b145","modified":1550329626602},{"_id":"source/_posts/C语言标准库等.md","hash":"1226c2683f9d270c55db5fc23f876401b8befd5d","modified":1550506453226},{"_id":"source/_posts/LLImageEditor.md","hash":"e4421292108060c1b9afde4d3d4aeace24b664c0","modified":1538055456933},{"_id":"source/_posts/M3U8.md","hash":"ba053066bdca49207be84c14d68433f37fa99f51","modified":1540919383133},{"_id":"source/_posts/TCP和UDP.md","hash":"6c1548fe90c8f0fec4eed9cb33fc42228996b220","modified":1550660992701},{"_id":"source/_posts/Unity-入门.md","hash":"41d444b6c2c48d552816e433a051a2321f077f14","modified":1550241741143},{"_id":"source/_posts/ModelCreation.md","hash":"9e1f84c15b9baa61a72fd9414c182cd328fccd46","modified":1539184078511},{"_id":"source/_posts/cmake-以及衍生.md","hash":"9ebc5007a57887f130506efcee1c1970724e2582","modified":1551120261787},{"_id":"source/_posts/ffmpeg-了解.md","hash":"28ab0beb1d53b17372d2e7692ed13b1301550d70","modified":1539096673760},{"_id":"source/_posts/ffmpeg转封装【ffmpeg-从入门到精通】.md","hash":"1e79ba03260c5d5c4e78bdee5c82e679a3d6d335","modified":1539186374457},{"_id":"source/_posts/hello-world.md","hash":"1680a8991163152443b51b8327d3146bb74b55f9","modified":1537249567505},{"_id":"source/_posts/git.md","hash":"c04494ed727a19b8d0ffc3c187f1cf2b432566ed","modified":1545726379284},{"_id":"source/_posts/iOS-基础.md","hash":"7e154fba2d599acd7eb5c147231cf156135da193","modified":1537247074427},{"_id":"source/_posts/iOS-杂烩.md","hash":"f431f7bfedb116aaa6742f02c9a43e5a7334983f","modified":1537247068372},{"_id":"source/_posts/iOS启动页面以及开屏广告.md","hash":"1523e244b48fed90122a0bbe967e5b66ff5ce3f8","modified":1537247108567},{"_id":"source/_posts/ios-知识体系以及架构图.md","hash":"3e87ae0fb98d7b85760ef7f3242cdc62f8d0ce12","modified":1550673429104},{"_id":"source/_posts/public final static String[] EMOJI_TEXTS = {","hash":"b81182b06c3bd6e58592b78ca9adb6deb3f53831","modified":1540788768291},{"_id":"source/_posts/ios-之oc面试.md","hash":"50d7bd7e7101ac7d35c994b2e14a541584bcf47f","modified":1550404302660},{"_id":"source/_posts/ios-unit-test.md","hash":"8574a8ad431fde6cef194bc7014b33c2da7220a6","modified":1538136935714},{"_id":"source/_posts/ruby-语言基础.md","hash":"4efa9942a4decb6c193cef4dec235344cee90224","modified":1551847104158},{"_id":"source/_posts/ruby-on-rails-项目.md","hash":"8458fd172dd0fad075825bd17c144cc20feb4725","modified":1551633707060},{"_id":"source/_posts/runloop-自解.md","hash":"0884c016ec10f3ebcf6c3c94e9411b2cc927c742","modified":1550660964749},{"_id":"source/_posts/untitled.sh","hash":"47ad54e3627d4089e4e38bb365b98bfe48199ec7","modified":1551097744083},{"_id":"source/_posts/有待研究的内容集合.md","hash":"6d1bd8cce81017e7a0bf07dd64d184ce91fd9fa6","modified":1551710790428},{"_id":"source/_posts/swift-开源代码.md","hash":"3c8d247520220bf29613c8b5b246a6fcaefa393d","modified":1551553130599},{"_id":"source/_posts/编译器以及编译语言-01.md","hash":"4cb5c0ac1bdf2c2f066966608c73a5e102ea18ce","modified":1551556048798},{"_id":"source/_posts/图像处理.md","hash":"eac94fe0c14aae2ad74f58008c6c14765b37242c","modified":1537247061083},{"_id":"source/_posts/视频文件转FLV.md","hash":"7c4889527d7d85e37690058121dd9e6df546ce22","modified":1540715700475},{"_id":"source/asset/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1540716532296},{"_id":"source/asset/Snip20180503_1.png","hash":"2bc4b039b463ed09ccc6fff7ad0a7f1a063ebf59","modified":1525361393547},{"_id":"source/asset/Snip20180504_7.png","hash":"54bd0895b03a9ad6ac804772a9de9e55d42a369f","modified":1525366600678},{"_id":"source/asset/Snip20180701_4.png","hash":"e55ef1a5886125dd47b2ed3010ff21cc11dc339b","modified":1530437233969},{"_id":"source/asset/Snip20180701_6.png","hash":"daa998fc46748e2ee54a7c4bf6ecce13dd5720cb","modified":1530438080035},{"_id":"source/asset/Snip20180701_8.png","hash":"d50675738247470466d7b9157658bc5ca477d53a","modified":1530455459293},{"_id":"source/asset/Snip20181007_3.png","hash":"156f82cd8b8581a021bbfb5ce9c4665f113bc5bc","modified":1538927531395},{"_id":"source/asset/Snip20181007_4.png","hash":"d486c1f0a88613385ff8e8589bfd13f725ecf925","modified":1538927638430},{"_id":"source/asset/Snip20181028_2.png","hash":"63e9c14636ea5edf22cbf97eeffa47fd7fa08874","modified":1540716470425},{"_id":"source/asset/Snip20181028_1.png","hash":"eb6ef68cbc76d137c2b317ad823dae560d4b082a","modified":1540716463326},{"_id":"source/asset/Snip20190226_3.png","hash":"2535cc1a03ddb50963fa14fd1a89f80bce594b95","modified":1551119156827},{"_id":"source/asset/WechatIMG289.jpeg","hash":"f3b60a65b67eae19a4af273cd02bd7f427295876","modified":1537248770012},{"_id":"source/asset/mp4info.txt","hash":"d20734967720461debcf4bddc97131b23391b3d3","modified":1539015081834},{"_id":"source/asset/mp4box.txt","hash":"355e850a32033da20f568cc171841612b6bf9f90","modified":1539013657295},{"_id":"source/asset/qrcode_for_gh_24ff9e178d2c_258.jpg","hash":"168be4572783739926ff554303a2357a2bb11afe","modified":1537245558681},{"_id":"source/categories/index.md","hash":"921265447c7e6965d73537bb5062c60e95aa940d","modified":1550653096748},{"_id":"source/codesource/.DS_Store","hash":"857cba583f475d0b10347253c8c09a1f3019b66b","modified":1550652933086},{"_id":"source/resume/index.md","hash":"f0405d9fcdc4f10468cddea3827c23e38c8a9e9d","modified":1551554922201},{"_id":"source/tags/index.md","hash":"0aff247b6d1063302e952d6a8c68a05f2a4f0da1","modified":1537248246867},{"_id":"source/about/index.md","hash":"eca074b6334dae71fbaba2286d9c4a246d359064","modified":1551556119259},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1537243694115},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1537243694115},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1537243694116},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1537243694116},{"_id":"themes/next/layout/_layout.swig","hash":"cdb9ce0dbe0acf04d8d3d3ffbafecf7d90a51f5b","modified":1542271700094},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1537243694146},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1537243694147},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1537243694146},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1537243694147},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1537243694147},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1537243694147},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1537243694147},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1537243694120},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1537243694121},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1537243694120},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1537243694121},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1537243694122},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1537243694122},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1537243694122},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1537243694123},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1537243694123},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1537243694123},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1537243694123},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1537243694123},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1537243694124},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1537243694124},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1537243694148},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1537243694124},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1537243694148},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1537243694125},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1537243694227},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1537243694227},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1537243694227},{"_id":"source/asset/Snip20180504_4.png","hash":"22fb2f2091d06fde805f796c15bbc7d27b8b74bc","modified":1525365218887},{"_id":"source/asset/Snip20180503_2.png","hash":"55755c71d959072d500567791fd8a130a5cec1f8","modified":1525363100128},{"_id":"source/asset/Snip20180504_6.png","hash":"2eab3b636b866e2da1bbe114a91b2ca547ca841b","modified":1525366489693},{"_id":"source/asset/Snip20180701_13.png","hash":"3665ebfd8c0fcc4dd3ef62843af59ccbc5ca40ae","modified":1530456267134},{"_id":"source/asset/Snip20180701_5.png","hash":"d02a2fe323fddb526d38a552754607a888ed5058","modified":1530437861399},{"_id":"source/asset/Snip20180701_7.png","hash":"e8b4d7ca5e3b27125650b7acb675beecb49d53d3","modified":1530438485597},{"_id":"source/asset/Snip20180703_24.png","hash":"752eb723b30d4f29b17af97d7c346d51e3c44755","modified":1530610108297},{"_id":"source/asset/Snip20181009_28.png","hash":"1517ac3c9e68295c4fe044610797da67e25d4f14","modified":1539014417057},{"_id":"source/asset/Snip20181012_31.png","hash":"1daaa5ac7de5698049bafeaf6315cb07ab046772","modified":1539277021425},{"_id":"source/asset/Snip20190215_15.png","hash":"5bd9caa3fe8b25a14902c2d2b0661cfd065d0c4a","modified":1550238329312},{"_id":"source/asset/Snip20190215_9.png","hash":"177116da4929f604e988ad83c61cfa4648a181b8","modified":1550234272832},{"_id":"source/asset/WechatIMG621.jpeg","hash":"f1825b54dce17f6cdc875ba007d5c78fcddc95a0","modified":1550235320130},{"_id":"source/asset/WechatIMG290.jpeg","hash":"b0befb7a362967f5ba7c38a2c30faea03d1efd0a","modified":1537248773914},{"_id":"source/asset/WechatIMG622.jpeg","hash":"0e9a8bc064ea476ea069d39af67254ce01911b2b","modified":1550237847340},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537243694176},{"_id":"source/asset/Snip20180701_11.png","hash":"c90d41fd14c1e0caf44c7d5e5037c272c9ec95c9","modified":1530456056542},{"_id":"source/asset/Snip20180701_15.png","hash":"3ca6f68fc046113b540ea22586025d58aad552f6","modified":1530457962659},{"_id":"source/asset/Snip20180928_95.png","hash":"89ce8f9a043df13af8833de365e26b300e16217f","modified":1538134138076},{"_id":"source/asset/Snip20181008_23.png","hash":"19cb8891b6c57b667f3bec6d3e4fc681ccda6291","modified":1539010063791},{"_id":"source/asset/Snip20181008_27.png","hash":"bc8d54fdf1a7a4d954d2685badc415ce56091b2e","modified":1539014049384},{"_id":"source/asset/Snip20181009_29.png","hash":"a066414f6f22e81f41d7a314cae8dd2afafccf2b","modified":1539015543112},{"_id":"source/asset/Snip20181010_10.png","hash":"de2c6af221524e9bc50542dcfd481ddb9543d59a","modified":1539186052140},{"_id":"source/asset/Snip20181012_38.png","hash":"d5c4e43bf8150b59fe6d4a137f75cdd3413d01e3","modified":1539279364331},{"_id":"source/asset/Snip20190215_13.png","hash":"2b0f090e04741d4531ab05d5747d6076f6d22a97","modified":1550237466232},{"_id":"source/asset/Snip20190215_16.png","hash":"044f7933270dc8fb0a385f63c61d8bae3cec5ef9","modified":1550238436739},{"_id":"source/asset/Snip20190215_17.png","hash":"c0cfd8a2126ab40648ad969a7f49cf5065b89a22","modified":1550239649536},{"_id":"source/asset/qrcode_for_gh_24ff9e178d2c_1280.jpg","hash":"64271dc3b68ead0fab8b8cdd3342d02242c43fe7","modified":1537245561679},{"_id":"source/codesource/oc_workspace/.DS_Store","hash":"4cd5108845d760586cb17907bcfd7e5f35555ebe","modified":1550654035665},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1537243694125},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1537243694126},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1537243694127},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1537243694125},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1537243694127},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1537243694128},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1537243694128},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1537243694127},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1537243694128},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4e365f49870a59f4750644a3b6da8452b51f0b34","modified":1542271736232},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1537243694129},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1537243694130},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1537243694130},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1537243694131},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1537243694131},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1537243694133},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1537243694134},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1537243694137},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1537243694143},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1537243694144},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1537243694143},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1537243694144},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1537243694144},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1537243694144},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1537243694144},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1537243694149},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1537243694149},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1537243694149},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1537243694149},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1537243694150},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1537243694150},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1537243694151},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1537243694151},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1537243694151},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1537243694176},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1537243694177},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1537243694177},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1537243694177},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1537243694177},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1537243694178},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1537243694178},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1537243694178},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1537243694178},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1537243694179},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1537243694179},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1537243694179},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1537243694179},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537243694179},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1537243694180},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537243694180},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1537243694180},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1537243694180},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1537243694180},{"_id":"source/asset/Snip20181007_2.png","hash":"cbf9b020d5821f65c511b8716278b487cf7744e7","modified":1538927303203},{"_id":"source/asset/Snip20180703_23.png","hash":"c42bec3d88e781c98218cb4b7b22ae9cca02c65a","modified":1530609512635},{"_id":"source/asset/Snip20181010_9.png","hash":"e1247a4210e052bb94007346b14c90a9c1391ac8","modified":1539186038549},{"_id":"source/asset/Snip20181012_33.png","hash":"0876eeb9bc8cbcf8005a8ec883065c485dfff439","modified":1539278189856},{"_id":"source/asset/Snip20190215_10.png","hash":"3d50eba29fdd7707f8c404f37a1bcf18398d576d","modified":1550234486870},{"_id":"source/asset/Snip20190215_14.png","hash":"4bd15fe5975020e4e8c80047ccabc3c91187741c","modified":1550238228187},{"_id":"source/asset/Snip20190215_11.png","hash":"2b266f6d807ba05911aed31946c4aa510eff7c3b","modified":1550235836858},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/.gitmodules","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1532819132000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537243694137},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537243694137},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537243694175},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537243694176},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537243694168},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537243694168},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537243694169},{"_id":"source/asset/Snip20180701_9.png","hash":"17323ecf663293277037b89d74fb31da4a858e9b","modified":1530455567274},{"_id":"source/asset/Snip20181012_32.png","hash":"3c8b9cb69a23725cb9af302e3cfc8f79bf597b10","modified":1539277044255},{"_id":"source/asset/Snip20190215_6.png","hash":"f3ef305351fe29f046aef9212db2c13049bd68e7","modified":1550199629614},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/.DS_Store","hash":"86e54a4bb82b4ced24c9b13f993f430cb2c03aea","modified":1550664737524},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/INSTALL.md","hash":"32f21811f5ddd5cc76d133de56ac2c864ffb24d4","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/CMakeLists.txt","hash":"ca215009be26d980d690627e2ac80c9330b0a042","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/LICENSE","hash":"2b8b815229aa8a61e483fb4ba0588b8b6c491890","modified":1256157816000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/Makefile.am","hash":"90161612735d1fe70c76455138dd58eeb78fb495","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/PATCHES","hash":"009b15da5c0796d14effe814bac0e42581ee4c62","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autogen.sh","hash":"c80a36932630e306da6801d0de15a1d5deed1ce7","modified":1465317001000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/aclocal.m4","hash":"fd09c41b3b4f81c51d267781314a03f7f8983f32","modified":1550652329665},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/configure.ac","hash":"1e299e12532c4f926c57c2be9d9c8dc2dfa62d3b","modified":1508380956000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFApplicationPreferences.c","hash":"cfa04e6370f61598712e64714521086ee56bafc8","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFArray.h","hash":"074e83ed291030bf9e15b3d3c96403b6a53f9063","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/APPLE_LICENSE","hash":"5b58d3443f1430a431a87aa007c52c8c8bbe95da","modified":1418059101000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFArray.c","hash":"db959ea8e0da49d6394f6123a040712b6dc198f9","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFAvailability.h","hash":"be7e48b0dc474fa019284a23ce03861f31d09d55","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBag.h","hash":"720ad889de85904288feba201f51648a991f95d1","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBag.c","hash":"a04ab19190bee1b80696611f8cb5010233e323b9","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBase.c","hash":"04faf463237bba1a341641d2d47fd2a330035f3a","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBase.h","hash":"0c2309af456d8ddf1a59d72693469a2c625a3742","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBasicHash.h","hash":"15bfd99c046979a69f98491ad1fab01018482866","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBasicHashFindBucket.m","hash":"9ad4ce92f8cfefa6635228f0a7818fb0142e01f1","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBigNumber.h","hash":"bcc176d5b89d4ee6f5f20feed9addaee7e26e102","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBigNumber.c","hash":"c3079f30b52960f7155606dc48fb8c7179a7f7aa","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBinaryHeap.c","hash":"ed8917f923821b4ab2179cf30ffba713e999a59d","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBitVector.c","hash":"dff977a87518f00c92176eb33a79c9e669b87f6d","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBitVector.h","hash":"3f4200824906b2301cdd2040d40667ad7f53e423","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBinaryHeap.h","hash":"b3f633e18b4edf39c9090b4ef6f44010ef2acb4c","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBuiltinConverters.c","hash":"21a71fe4496c51a04f2252b98deb73913231179f","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundlePriv.h","hash":"557b7751a17a5ba69bcf2e94996c1b9b154f201c","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle.h","hash":"0e35f53e5e0b3388c6843b735cfd9822a70c717c","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_BinaryTypes.h","hash":"e1394278b4d82212c00ee0d0ee09f9dfdd64cc96","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Binary.c","hash":"28738c253e79977fdeab8e97a2e17991de128868","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_InfoPlist.c","hash":"4877b96a8ab51fbb36bdf9daa14454bc32fdd5db","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Internal.h","hash":"1e09c3640b34fc5898e2d2833746757274080790","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Locale.c","hash":"066ce8fc31e6abc34c54103a567e3d445c6f5fef","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Strings.c","hash":"ef3728f9fead076821b3f2f2ebbc7778030b86a3","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBurstTrie.h","hash":"46c34e3d33bed5af496ff1641fa30d4af03307de","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Resources.c","hash":"7916385c32cb140e5364d472057c8304980281ab","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFByteOrder.h","hash":"3af7768d3db86c09d3a4634c95c28c0319a7a959","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCalendar.h","hash":"cd134f6335beb0273f341ac5a3a5473b3d331d19","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCalendar.c","hash":"34a10c934172a3fc61c9819468b94d45a95f36ab","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCharacterSet.h","hash":"6a47849eb46b31a88656e3d22d9c8ffc34e75ec1","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCharacterSetPriv.h","hash":"abcb5aa940bb8d321c4832520bfebfd9cf37b91f","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFData.h","hash":"483482bc59d508e6a00c1fc82e5888664c14a586","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFConcreteStreams.c","hash":"349065ffd4a64b2ef1780464524df3b8f9c104e0","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFData.c","hash":"2a09297a694ac4d182936541771c1e1bf6ea5179","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDate.h","hash":"efe889eabc76d73f4ec1fbd569b71dede5a7143a","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDate.c","hash":"ffb3c9e56a3dff011fa41bf09a3297511380e2b7","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDateFormatter.h","hash":"fc3d94d242af09b837a59454a525952ff7d05f05","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDictionary.c","hash":"b218dc13965cf8cbbadd06b4f6d49b23f23c92ef","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDictionary.h","hash":"9431262fd5d7bce26516e79e08b651eb62abaec0","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFError.c","hash":"21d68fdf8ec04c2d340c02ba3f36e31987d88a39","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFFileUtilities.c","hash":"cd1b56fa1570d88a326c34df1b934c39946a46c9","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFError_Private.h","hash":"0a7c41daa09c452b048d635ed89bcef3229c0f0d","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFError.h","hash":"2541016747a742fd99e1a7f595204b33289c56ce","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFICUConverters.c","hash":"83c2948f84c14331ca8e231021a3e884c9be0807","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFICUConverters.h","hash":"e01c3355640c02b7f08a423d3c92184b0e4aec4b","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFICULogging.h","hash":"2d40477c02a53db5ad9eab8124f00c54c73b2ce6","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFInternal.h","hash":"7cdb7a6247c8070ec97c571e750f6938679e91d5","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLocale.c","hash":"8a3da278d0994763d9e722c45fc4ea122e3dfea4","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLocale.h","hash":"164dcbd728ff3bbea0417ab72ae05d9064fa30fc","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLocaleInternal.h","hash":"9dd2d36bcdb6c1241f540020794aa11ef0fbae8c","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLogUtilities.h","hash":"b0959f9304ffcd3dd732a15ac2ab4db4eede767e","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLocaleKeys.c","hash":"0683544f0027e593722c3a14036a6bb7ef1e5a7a","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFMachPort.h","hash":"afc526c2edf88b14d2766ddecc694f3d75921491","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFMachPort.c","hash":"515dc0657bc1bf2a97d596dc3ac2d066abc13136","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFMessagePort.h","hash":"4686eabd02d619cdc82632f034865dc164883ef6","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFNumber.h","hash":"21282c15b115e3ebe619dec52193f1104f6a9320","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFMessagePort.c","hash":"be8094646dea58d9dfb293927e266ebbed9ce4cf","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFNumberFormatter.c","hash":"1ea72e777f3b6a0ee78939f7e94c0f7cc8cc1df2","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFNumberFormatter.h","hash":"414d9b0173c4120a88ac596393af175cea79659e","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFOldStylePList.c","hash":"b0154d0353f331cff274bc83e26608cd4cd3863b","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlatform.c","hash":"a69e612075aa9bafda1d1e8b2352500acfab158a","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlatformConverters.c","hash":"19475e828deb41a3b5a0d52ae9a991165b1f9675","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn.h","hash":"5c9faae714ee5d6d2af4926e3c1c6846ba39069d","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn.c","hash":"0bcf6e78ca2e7ec67d7fd37a3e8f0c47edf29e40","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugInCOM.h","hash":"4301c1c318208daa4688db9dbe33a8ec7204abaa","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn_Factory.h","hash":"156e57b3fa1c30ea12322dd3b311aa4231fa474a","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn_Factory.c","hash":"f4949e48b4cbaa595e4e0b9b1a7c9f4bcadd5656","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn_Instance.c","hash":"1aff36ea20c4647ed141fbb10bb7e59afebe9725","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPlugIn_PlugIn.c","hash":"46b27d7d216b93166ba46636d6d67f5b2411aa6d","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPreferences.h","hash":"3216b3f525f3a0ce35e9362d5ce63284c1bfdd2f","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPreferences.c","hash":"c1a1fa61f4b81342fa5398f60af86082f812ce8b","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPriv.h","hash":"86cdbffc4ea7d01887dfed9dce587b7b39967ca6","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPropertyList.h","hash":"045c0d466191d869fa20c7cdd08bcb699d889622","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFRunLoop.h","hash":"84280046282188d0fa8781ccc6b1cb12df4995c7","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFRuntime.c","hash":"6a76d9997bccaa38821aeffea58cd353eb136855","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFRuntime.h","hash":"54ca1ea44053a93c53d3f049c27f49db674c431f","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSocket.h","hash":"6e9eb84ef2a50483958730e3135c9e39a0b6c07b","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSet.h","hash":"7e15852ba61dd5123d1863b93c87e4b5c5c658f0","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSet.c","hash":"c3656e375c0783d10cb472d34d80f60e259694c6","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSocketStream.c","hash":"41b27c960ad5f1e153923d5b9aba655b979bb49c","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSortFunctions.c","hash":"63dad5380a42a90728f63291f08e679ce86a1e43","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStorage.h","hash":"0daa33b6103b1d64047cce99776dde88a3c343b3","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStream.h","hash":"f2cf5351883f52b245729ab5d5752f073c1a3f53","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStreamInternal.h","hash":"8c07eef05f6fc89abefc107ac8fbf1e20dc243a8","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStreamAbstract.h","hash":"90c5107c1b00dadfbc6f9674808ebc202f4ddfde","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStreamPriv.h","hash":"2a0f446b6b862c19b924eefb94a2299ff3a6b66d","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringDefaultEncoding.h","hash":"3224d10090af5e1d6aeb3273712dc52484fd2f38","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFString.h","hash":"a24970b4c3504a7cc349445918ac4071b5344723","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingConverter.c","hash":"35fccdc488be7a3370dcb3afbbf1bb624e3f88c6","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingConverter.h","hash":"83b160c474de7ec3160215666f644539d5d7e3ab","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingConverterPriv.h","hash":"fd0997059f0363e13ae834488683170decf9784c","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingConverterExt.h","hash":"49aa8645e765ab01de71a8ff29205f89b8578b48","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingDatabase.h","hash":"d904894f3a2d3400039831034bf69187ddfa4a2c","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingDatabase.c","hash":"f2a631c305f93e354871ad3ebd58f6bffd97ae33","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodingExt.h","hash":"109a41de01deb198345654115039cf2200712be7","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSystemDirectories.c","hash":"f183e14d27d9d94ced143ca4154d4329b438eb16","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringUtilities.c","hash":"786e3afc1f83e569afc5daf6c7a862142d460dca","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringEncodings.c","hash":"5893cdbb1338205ddab7fe7b816d1c0027ba4007","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStringScanner.c","hash":"362045af600c7a3266d049a06af8969239adf986","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFTree.h","hash":"9e48350fa439e2484e689d7a0583382d06bed4b5","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFTimeZone.h","hash":"cf5bfdc845259753719a02298fecdf865d2fd33e","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFTimeZone.c","hash":"ccd3126e9cf4c238bfe978e6d379250dd2bde149","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFTree.c","hash":"1e7b9c8cd31ff00313b46f8dda418d9fc7b180e8","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURLAccess.c","hash":"40cbd5a4f6f72ce422b229e789cc931ce18e7b3d","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURL.inc.h","hash":"5b1cf6926ae652cf1ae6437509834329577e2230","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURL.h","hash":"a417c00f222329c03b166f84e1b943c421978c44","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURLAccess.h","hash":"74c52e5e7357c655b8824f7ce422502ce4004297","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUUID.h","hash":"42727e1fa32598c43cbdd85475119a6b8649b261","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUUID.c","hash":"079ceb63a3f3e7433ce03cde1331b0ca91b75255","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURLPriv.h","hash":"ad15b8959b4b5bea1a1d59640855d879c5915c3b","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUniChar.h","hash":"1a0a6a54554165c884605679f591606c7ee3f41c","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUniChar.c","hash":"88b2dc449d59d52b1ad66add186ca893b2a58385","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUniCharPriv.h","hash":"33844cd4340caf3068592cc8d2a944f63edd4cce","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUniCharPropertyDatabase.data","hash":"ea3c8b9bc1d86c3173438b792c8a8329043bbf9d","modified":1418059101000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodeDecomposition.h","hash":"2d5849b9adf3b498eed8badd07c95bd88165c96a","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodeDecomposition.c","hash":"3b866a724b02eb304bfb878cf4fa919ef9fe9358","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodePrecomposition.h","hash":"cd096f76e43672538fe27aebfbb9520ae26e4675","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodePrecomposition.c","hash":"8d41f4a948d14b95fbbe4a68b34cbaa2c51d72de","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUserNotification.c","hash":"88ac75784f24b5c3371e48cfaa466c7eef6a8714","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUserNotification.h","hash":"c5fc7cd0c37307ca0e27813128d418a2712cc926","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUtilities.h","hash":"1d7667d6dd9326bc72b5be6df841e671da6421a5","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFVersion.c","hash":"cb19967f348a66a2a8cfe5de7e199ee599a9914b","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUtilities.c","hash":"bff784c97e317b924ec09763de56b636a21044c3","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFWindowsUtilities.c","hash":"2e5c7cb2c1473d8fea2d85c7cff25d97ee601391","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLInputStream.h","hash":"f1ed50d6bcdb7b061415cbb82e8b0ab81704761a","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLNode.h","hash":"fbe3c87b662de4e2769212b97e9ccbb06bcfb39b","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLInputStream.c","hash":"15b6d453069ad969d5156f8da603f975ca18d75e","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLNode.c","hash":"c033f1ab2537bab95e2ef8cc0a8e8ed8d4606d28","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLTree.c","hash":"c0cac8acbbcfbd007825a16c7183976391482fb3","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLPreferencesDomain.c","hash":"c990ce2fea9b926f12635cd93cb36a451333fcef","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLParser.h","hash":"fc632a9f1dba23bde78b6e45ed0f214c0d78ff6c","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CoreFoundation.h","hash":"d3b6772243683273a73940ab5d0a2866cace0165","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CoreFoundation_Prefix.h","hash":"b05d852686f15f8e69e5606ca81f310ee067e9ab","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/ForFoundationOnly.h","hash":"63fc4ed1a0e4a4e64e24f7300d91bb7e3957386f","modified":1418059108000},{"_id":"source/codesource/oc_workspace/CF-1151.16/Info.plist","hash":"ee7ebd725acbc6b002bd6adb416787b743810ecf","modified":1418059101000},{"_id":"source/codesource/oc_workspace/CF-1151.16/Makefile","hash":"5a3e9aec09333a14b9816abde712a71583323501","modified":1418059100000},{"_id":"source/codesource/oc_workspace/CF-1151.16/MakefileLinux","hash":"e2696637ab2360791d868d913221de961d30a87d","modified":1418059100000},{"_id":"source/codesource/oc_workspace/CF-1151.16/MakefileVersion","hash":"ce1b1b2eff3b158d1e491cc96d6dcd44f4d9aec6","modified":1418059100000},{"_id":"source/codesource/oc_workspace/CF-1151.16/PropertyList.dtd","hash":"59c6a2b45bddbccbe1e599da612527caf7ad76f7","modified":1418059101000},{"_id":"source/codesource/oc_workspace/CF-1151.16/SymbolAliases","hash":"e9d0aabfc8f1c49c7a475bc400e40ff4015db544","modified":1418059100000},{"_id":"source/codesource/oc_workspace/CF-1151.16/README_CFLITE","hash":"90cc31ea57d463c32773b93f8a22f63c0b0e6b6d","modified":1418059101000},{"_id":"source/codesource/oc_workspace/CF-1151.16/TargetConditionals.h","hash":"1d3badf3df763fdde8424b38b78a20d2d4f1d635","modified":1418059100000},{"_id":"source/codesource/oc_workspace/CF-1151.16/plconvert.c","hash":"2c60edbffa7aea24b74aed5bd0ac5abf15575cdd","modified":1418059112000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1537243694129},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1537243694131},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1537243694130},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1537243694131},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1537243694132},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1537243694132},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1537243694132},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1537243694133},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1537243694133},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1537243694134},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1537243694136},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1537243694137},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1537243694138},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1537243694138},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1537243694139},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1537243694139},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1537243694140},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1537243694139},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1537243694140},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1537243694140},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1537243694140},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1537243694141},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1537243694141},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1537243694141},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1537243694141},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1537243694141},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1537243694142},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1537243694142},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1537243694142},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1537243694142},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1537243694143},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1537243694143},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1537243694143},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1537243694143},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1537243694145},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1537243694146},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1537243694146},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1537243694145},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1537243694175},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1537243694175},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1537243694176},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1537243694176},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1537243694168},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1537243694169},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1537243694169},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1537243694168},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1537243694181},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1537243694181},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1537243694181},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1537243694181},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1537243694181},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1537243694182},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1537243694182},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1537243694182},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1537243694182},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1537243694183},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1537243694183},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1537243694189},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1537243694193},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1537243694192},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1537243694192},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1537243694193},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1537243694211},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1537243694212},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1537243694212},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1537243694213},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1537243694213},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1537243694213},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1537243694213},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1537243694198},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1537243694198},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1537243694198},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1537243694198},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1537243694214},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1537243694215},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1537243694215},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1537243694215},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1537243694215},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1537243694216},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1537243694215},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1537243694216},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1537243694216},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1537243694216},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1537243694216},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1537243694217},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1537243694217},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1537243694217},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1537243694214},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1537243694214},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1537243694214},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1537243694222},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1537243694223},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1537243694225},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1537243694226},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1537243694226},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1537243694200},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1537243694199},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1537243694199},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1537243694200},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1537243694200},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1537243694218},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1537243694217},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1537243694218},{"_id":"source/asset/Snip20180504_10.png","hash":"90bc02a64932755db3bdf32371c054016a4514a1","modified":1525366624681},{"_id":"source/asset/Snip20180701_12.png","hash":"01f774bf57994448cb4d203753edca7d491f4ce4","modified":1530456207603},{"_id":"source/asset/Snip20181012_34.png","hash":"cb3517311b8d8039804d837f17841a3d9b47dbba","modified":1539278210994},{"_id":"source/asset/Snip20190217_1.png","hash":"a59461bb02bc721a18563ab1c46a4dacb664d198","modified":1550373690471},{"_id":"source/books/CMake Practice.pdf","hash":"6b5159782ca27f7b50ae8ead55b9fcf336fc4d4b","modified":1551073862449},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBasicHash.c","hash":"2f5d970510c36b806c9c108fd8a2ba69621d8435","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBinaryPList.c","hash":"9928aea98ca08939f3c92810a565d1c49d9c2ec6","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle.c","hash":"73f3d37d08109a8beb48d0a72f493b1968e0d544","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBundle_Grok.c","hash":"3f29fed0e61d08c6c19fd960ce2955673ef3ce7e","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFBurstTrie.c","hash":"abf78c16a7709b40b47a7501ba612e54a5ca626d","modified":1418059112000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFDateFormatter.c","hash":"46d60ea1d767e80e74f680bb9f655c5bb3ad8cf9","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFNumber.c","hash":"4ed548ef65c2db668171f91eb79a2ba959b1a9f4","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStorage.c","hash":"b9ae854ec7328343da4f23ab702d03d5d7d43467","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFStream.c","hash":"f17fa31bee37b285843ca53f04b686cdfc5ab68d","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodeData-B.mapping","hash":"a70bce56031193f44cda7a334843d630b602cf9a","modified":1418059101000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFUnicodeData-L.mapping","hash":"e77d11472c187e4d7e470d037a35a93c1fcaab79","modified":1418059101000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFXMLParser.c","hash":"d96d89c3daafa521694051f8cce4feb62fccd2aa","modified":1418059109000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1537243694212},{"_id":"source/asset/Snip20181010_4.png","hash":"72950180cfcedbfaffd41d686ac0ba1c82cee407","modified":1539183938790},{"_id":"source/asset/Snip20181012_30.png","hash":"ab5cc14de51fda0115d52d908435652b7dc8aadb","modified":1539276552457},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/AppDelegate.h","hash":"92c1e98270596537dcb5689233a72bbe3cf35a7b","modified":1550653727958},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/AppDelegate.m","hash":"7118d7ce03ad959dc72d3a7f33078c80f8c505c2","modified":1550653727960},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Info.plist","hash":"95c71dbe598de6169e927fbf5c579175da90d355","modified":1550653729800},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/ViewController.h","hash":"51ee1a0a775752b0a96a1df696a797488bb990f7","modified":1550653727963},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/ViewController.m","hash":"9a01448fe8c1e94ef141ac6be6daf845cf6dfb17","modified":1550653727965},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/main.m","hash":"dfc627b62525bfd91761c7e20bfda6dbd7373db4","modified":1550653729803},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceTests/Info.plist","hash":"bf0eb3f16ffd72bb16ef3a70355beed8df7b3daf","modified":1550653729968},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceTests/RunloopWorkspaceTests.m","hash":"d1bf86538b8fea5d35dda799f5fb8e6e92a35d4b","modified":1550653729964},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.pbxproj","hash":"9af8f39b28760df1e864b7cf39c27b80e9bf1f9a","modified":1550654089222},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/APPLE_LICENSE","hash":"5b58d3443f1430a431a87aa007c52c8c8bbe95da","modified":1418059101000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFArray.h","hash":"074e83ed291030bf9e15b3d3c96403b6a53f9063","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFArray.c","hash":"db959ea8e0da49d6394f6123a040712b6dc198f9","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFApplicationPreferences.c","hash":"cfa04e6370f61598712e64714521086ee56bafc8","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBag.c","hash":"a04ab19190bee1b80696611f8cb5010233e323b9","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFAvailability.h","hash":"be7e48b0dc474fa019284a23ce03861f31d09d55","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBag.h","hash":"720ad889de85904288feba201f51648a991f95d1","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBase.c","hash":"04faf463237bba1a341641d2d47fd2a330035f3a","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBase.h","hash":"0c2309af456d8ddf1a59d72693469a2c625a3742","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBasicHashFindBucket.m","hash":"9ad4ce92f8cfefa6635228f0a7818fb0142e01f1","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBasicHash.h","hash":"15bfd99c046979a69f98491ad1fab01018482866","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBigNumber.h","hash":"bcc176d5b89d4ee6f5f20feed9addaee7e26e102","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBigNumber.c","hash":"c3079f30b52960f7155606dc48fb8c7179a7f7aa","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBinaryHeap.c","hash":"ed8917f923821b4ab2179cf30ffba713e999a59d","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBinaryHeap.h","hash":"b3f633e18b4edf39c9090b4ef6f44010ef2acb4c","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBitVector.c","hash":"dff977a87518f00c92176eb33a79c9e669b87f6d","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBitVector.h","hash":"3f4200824906b2301cdd2040d40667ad7f53e423","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBuiltinConverters.c","hash":"21a71fe4496c51a04f2252b98deb73913231179f","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle.h","hash":"0e35f53e5e0b3388c6843b735cfd9822a70c717c","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_BinaryTypes.h","hash":"e1394278b4d82212c00ee0d0ee09f9dfdd64cc96","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundlePriv.h","hash":"557b7751a17a5ba69bcf2e94996c1b9b154f201c","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Binary.c","hash":"28738c253e79977fdeab8e97a2e17991de128868","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Internal.h","hash":"1e09c3640b34fc5898e2d2833746757274080790","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_InfoPlist.c","hash":"4877b96a8ab51fbb36bdf9daa14454bc32fdd5db","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Locale.c","hash":"066ce8fc31e6abc34c54103a567e3d445c6f5fef","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Strings.c","hash":"ef3728f9fead076821b3f2f2ebbc7778030b86a3","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Resources.c","hash":"7916385c32cb140e5364d472057c8304980281ab","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBurstTrie.h","hash":"46c34e3d33bed5af496ff1641fa30d4af03307de","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCalendar.h","hash":"cd134f6335beb0273f341ac5a3a5473b3d331d19","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFByteOrder.h","hash":"3af7768d3db86c09d3a4634c95c28c0319a7a959","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCalendar.c","hash":"34a10c934172a3fc61c9819468b94d45a95f36ab","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSetPriv.h","hash":"abcb5aa940bb8d321c4832520bfebfd9cf37b91f","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSet.h","hash":"6a47849eb46b31a88656e3d22d9c8ffc34e75ec1","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFConcreteStreams.c","hash":"349065ffd4a64b2ef1780464524df3b8f9c104e0","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFData.h","hash":"483482bc59d508e6a00c1fc82e5888664c14a586","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFData.c","hash":"2a09297a694ac4d182936541771c1e1bf6ea5179","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDate.c","hash":"ffb3c9e56a3dff011fa41bf09a3297511380e2b7","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDate.h","hash":"efe889eabc76d73f4ec1fbd569b71dede5a7143a","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDateFormatter.h","hash":"fc3d94d242af09b837a59454a525952ff7d05f05","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDictionary.c","hash":"b218dc13965cf8cbbadd06b4f6d49b23f23c92ef","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDictionary.h","hash":"9431262fd5d7bce26516e79e08b651eb62abaec0","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFError.h","hash":"2541016747a742fd99e1a7f595204b33289c56ce","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFError.c","hash":"21d68fdf8ec04c2d340c02ba3f36e31987d88a39","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFError_Private.h","hash":"0a7c41daa09c452b048d635ed89bcef3229c0f0d","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFFileUtilities.c","hash":"cd1b56fa1570d88a326c34df1b934c39946a46c9","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFICULogging.h","hash":"2d40477c02a53db5ad9eab8124f00c54c73b2ce6","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFICUConverters.c","hash":"83c2948f84c14331ca8e231021a3e884c9be0807","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFICUConverters.h","hash":"e01c3355640c02b7f08a423d3c92184b0e4aec4b","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocale.h","hash":"164dcbd728ff3bbea0417ab72ae05d9064fa30fc","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFInternal.h","hash":"7cdb7a6247c8070ec97c571e750f6938679e91d5","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocale.c","hash":"8a3da278d0994763d9e722c45fc4ea122e3dfea4","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocaleKeys.c","hash":"0683544f0027e593722c3a14036a6bb7ef1e5a7a","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocaleInternal.h","hash":"9dd2d36bcdb6c1241f540020794aa11ef0fbae8c","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLogUtilities.h","hash":"b0959f9304ffcd3dd732a15ac2ab4db4eede767e","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMachPort.h","hash":"afc526c2edf88b14d2766ddecc694f3d75921491","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMachPort.c","hash":"515dc0657bc1bf2a97d596dc3ac2d066abc13136","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMessagePort.h","hash":"4686eabd02d619cdc82632f034865dc164883ef6","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFMessagePort.c","hash":"be8094646dea58d9dfb293927e266ebbed9ce4cf","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumber.h","hash":"21282c15b115e3ebe619dec52193f1104f6a9320","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumberFormatter.h","hash":"414d9b0173c4120a88ac596393af175cea79659e","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumberFormatter.c","hash":"1ea72e777f3b6a0ee78939f7e94c0f7cc8cc1df2","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFOldStylePList.c","hash":"b0154d0353f331cff274bc83e26608cd4cd3863b","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlatform.c","hash":"a69e612075aa9bafda1d1e8b2352500acfab158a","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlatformConverters.c","hash":"19475e828deb41a3b5a0d52ae9a991165b1f9675","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn.h","hash":"5c9faae714ee5d6d2af4926e3c1c6846ba39069d","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn.c","hash":"0bcf6e78ca2e7ec67d7fd37a3e8f0c47edf29e40","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugInCOM.h","hash":"4301c1c318208daa4688db9dbe33a8ec7204abaa","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_Factory.h","hash":"156e57b3fa1c30ea12322dd3b311aa4231fa474a","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_PlugIn.c","hash":"46b27d7d216b93166ba46636d6d67f5b2411aa6d","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_Instance.c","hash":"1aff36ea20c4647ed141fbb10bb7e59afebe9725","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPlugIn_Factory.c","hash":"f4949e48b4cbaa595e4e0b9b1a7c9f4bcadd5656","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPreferences.h","hash":"3216b3f525f3a0ce35e9362d5ce63284c1bfdd2f","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPriv.h","hash":"86cdbffc4ea7d01887dfed9dce587b7b39967ca6","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPreferences.c","hash":"c1a1fa61f4b81342fa5398f60af86082f812ce8b","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPropertyList.h","hash":"045c0d466191d869fa20c7cdd08bcb699d889622","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRuntime.c","hash":"6a76d9997bccaa38821aeffea58cd353eb136855","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRunLoop.h","hash":"84280046282188d0fa8781ccc6b1cb12df4995c7","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRuntime.h","hash":"54ca1ea44053a93c53d3f049c27f49db674c431f","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSet.c","hash":"c3656e375c0783d10cb472d34d80f60e259694c6","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSocket.h","hash":"6e9eb84ef2a50483958730e3135c9e39a0b6c07b","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSet.h","hash":"7e15852ba61dd5123d1863b93c87e4b5c5c658f0","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSocketStream.c","hash":"41b27c960ad5f1e153923d5b9aba655b979bb49c","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStorage.h","hash":"0daa33b6103b1d64047cce99776dde88a3c343b3","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSortFunctions.c","hash":"63dad5380a42a90728f63291f08e679ce86a1e43","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStream.h","hash":"f2cf5351883f52b245729ab5d5752f073c1a3f53","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStreamAbstract.h","hash":"90c5107c1b00dadfbc6f9674808ebc202f4ddfde","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStreamInternal.h","hash":"8c07eef05f6fc89abefc107ac8fbf1e20dc243a8","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStreamPriv.h","hash":"2a0f446b6b862c19b924eefb94a2299ff3a6b66d","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringDefaultEncoding.h","hash":"3224d10090af5e1d6aeb3273712dc52484fd2f38","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFString.h","hash":"a24970b4c3504a7cc349445918ac4071b5344723","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverter.c","hash":"35fccdc488be7a3370dcb3afbbf1bb624e3f88c6","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverterPriv.h","hash":"fd0997059f0363e13ae834488683170decf9784c","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverter.h","hash":"83b160c474de7ec3160215666f644539d5d7e3ab","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingConverterExt.h","hash":"49aa8645e765ab01de71a8ff29205f89b8578b48","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingDatabase.c","hash":"f2a631c305f93e354871ad3ebd58f6bffd97ae33","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingDatabase.h","hash":"d904894f3a2d3400039831034bf69187ddfa4a2c","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodingExt.h","hash":"109a41de01deb198345654115039cf2200712be7","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringScanner.c","hash":"362045af600c7a3266d049a06af8969239adf986","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringEncodings.c","hash":"5893cdbb1338205ddab7fe7b816d1c0027ba4007","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSystemDirectories.c","hash":"f183e14d27d9d94ced143ca4154d4329b438eb16","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStringUtilities.c","hash":"786e3afc1f83e569afc5daf6c7a862142d460dca","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTimeZone.h","hash":"cf5bfdc845259753719a02298fecdf865d2fd33e","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTree.c","hash":"1e7b9c8cd31ff00313b46f8dda418d9fc7b180e8","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTimeZone.c","hash":"ccd3126e9cf4c238bfe978e6d379250dd2bde149","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFTree.h","hash":"9e48350fa439e2484e689d7a0583382d06bed4b5","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURL.inc.h","hash":"5b1cf6926ae652cf1ae6437509834329577e2230","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURLAccess.c","hash":"40cbd5a4f6f72ce422b229e789cc931ce18e7b3d","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURL.h","hash":"a417c00f222329c03b166f84e1b943c421978c44","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURLAccess.h","hash":"74c52e5e7357c655b8824f7ce422502ce4004297","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUUID.h","hash":"42727e1fa32598c43cbdd85475119a6b8649b261","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURLPriv.h","hash":"ad15b8959b4b5bea1a1d59640855d879c5915c3b","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUUID.c","hash":"079ceb63a3f3e7433ce03cde1331b0ca91b75255","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniCharPriv.h","hash":"33844cd4340caf3068592cc8d2a944f63edd4cce","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniChar.c","hash":"88b2dc449d59d52b1ad66add186ca893b2a58385","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniChar.h","hash":"1a0a6a54554165c884605679f591606c7ee3f41c","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUniCharPropertyDatabase.data","hash":"ea3c8b9bc1d86c3173438b792c8a8329043bbf9d","modified":1418059101000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeDecomposition.h","hash":"2d5849b9adf3b498eed8badd07c95bd88165c96a","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeDecomposition.c","hash":"3b866a724b02eb304bfb878cf4fa919ef9fe9358","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodePrecomposition.c","hash":"8d41f4a948d14b95fbbe4a68b34cbaa2c51d72de","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUserNotification.h","hash":"c5fc7cd0c37307ca0e27813128d418a2712cc926","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodePrecomposition.h","hash":"cd096f76e43672538fe27aebfbb9520ae26e4675","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUserNotification.c","hash":"88ac75784f24b5c3371e48cfaa466c7eef6a8714","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFVersion.c","hash":"cb19967f348a66a2a8cfe5de7e199ee599a9914b","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUtilities.h","hash":"1d7667d6dd9326bc72b5be6df841e671da6421a5","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUtilities.c","hash":"bff784c97e317b924ec09763de56b636a21044c3","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLInputStream.h","hash":"f1ed50d6bcdb7b061415cbb82e8b0ab81704761a","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLNode.c","hash":"c033f1ab2537bab95e2ef8cc0a8e8ed8d4606d28","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFWindowsUtilities.c","hash":"2e5c7cb2c1473d8fea2d85c7cff25d97ee601391","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLInputStream.c","hash":"15b6d453069ad969d5156f8da603f975ca18d75e","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLNode.h","hash":"fbe3c87b662de4e2769212b97e9ccbb06bcfb39b","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLParser.h","hash":"fc632a9f1dba23bde78b6e45ed0f214c0d78ff6c","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLTree.c","hash":"c0cac8acbbcfbd007825a16c7183976391482fb3","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLPreferencesDomain.c","hash":"c990ce2fea9b926f12635cd93cb36a451333fcef","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CoreFoundation.h","hash":"d3b6772243683273a73940ab5d0a2866cace0165","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CoreFoundation_Prefix.h","hash":"b05d852686f15f8e69e5606ca81f310ee067e9ab","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/Info.plist","hash":"ee7ebd725acbc6b002bd6adb416787b743810ecf","modified":1418059101000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/ForFoundationOnly.h","hash":"63fc4ed1a0e4a4e64e24f7300d91bb7e3957386f","modified":1418059108000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/Makefile","hash":"5a3e9aec09333a14b9816abde712a71583323501","modified":1418059100000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/MakefileLinux","hash":"e2696637ab2360791d868d913221de961d30a87d","modified":1418059100000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/MakefileVersion","hash":"ce1b1b2eff3b158d1e491cc96d6dcd44f4d9aec6","modified":1418059100000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/PropertyList.dtd","hash":"59c6a2b45bddbccbe1e599da612527caf7ad76f7","modified":1418059101000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/README_CFLITE","hash":"90cc31ea57d463c32773b93f8a22f63c0b0e6b6d","modified":1418059101000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/SymbolAliases","hash":"e9d0aabfc8f1c49c7a475bc400e40ff4015db544","modified":1418059100000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/TargetConditionals.h","hash":"1d3badf3df763fdde8424b38b78a20d2d4f1d635","modified":1418059100000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/plconvert.c","hash":"2c60edbffa7aea24b74aed5bd0ac5abf15575cdd","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceUITests/Info.plist","hash":"bf0eb3f16ffd72bb16ef3a70355beed8df7b3daf","modified":1550653729998},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspaceUITests/RunloopWorkspaceUITests.m","hash":"cff4d9ca9d3f07c0fe639c7a4aa00f5bd2e20c87","modified":1550653729995},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/requests","hash":"bc50cea3dca42e43680482f527c81260add76216","modified":1550652332878},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/config.h.in","hash":"4f9a86aa4ee02e676defcdd3ae04f3be7527d598","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/compile","hash":"c4f01c6c960bb0c07d1a0836e8c2bd5503aee864","modified":1550652332889},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/config_ac.h.in","hash":"c6ba280200703c2d91e8561a113de0b5bd98b276","modified":1550652331345},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/config.h","hash":"0360cce4be26c17579ae71bdc521b09bbafc6da7","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/config.guess","hash":"5c84fa19f8e181ad8100a1afecd03426318834c1","modified":1550652332900},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/config.sub","hash":"847084fc5a4190626624f6629e3782614414973c","modified":1550652332910},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/install-sh","hash":"45053d3e25fb26a5b3c4a00a23d6b572086a2445","modified":1550652332919},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/missing","hash":"a6426d9e929cca194849950ea621b497ddcd0c07","modified":1550652332930},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/CMakeLists.txt","hash":"3279ec833a2a656af159bf7ddad6f18f7600ce7b","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/Makefile.am","hash":"5ec55b5065f6280ba42ecc1c187a0ea613a8b45c","modified":1477003670000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/base.h","hash":"6772d3c9aef1fb4a0c6cb7b6744b67a6f5323b72","modified":1506236841000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/dispatch.h","hash":"89ca1cb79845960f12e872e4b19ff015346fc229","modified":1515570495000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/block.h","hash":"83be70bf5a9c270b2d7437d4c0a189e9843a1028","modified":1508521592000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/data.h","hash":"bbace7068e069e61d37a8f68bdf02f10b5301ebc","modified":1483557204000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/io.h","hash":"cc41915e530f4f1f10879f12220cf7ec250b19b9","modified":1472591887000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/introspection.h","hash":"0328de37fb9f869db7e4b102e21f9c930f91cdf5","modified":1472591887000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/group.h","hash":"980d7407b369176b146a09cb63b4295a84143bf9","modified":1472591887000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/object.h","hash":"2c55650a2c07ada3164d80154d4a60d472a90dff","modified":1506959041000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/once.h","hash":"60251659077d005f22d3c9f716bc58649b3c0349","modified":1501101340000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/semaphore.h","hash":"3f2c5eece51edcdd6616007289ab00ec1ea392f4","modified":1472591887000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/queue.h","hash":"8995b347fc4349e51768a7e78318478724c54750","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/time.h","hash":"242c1310c63184cb99a737546066dde30264fccb","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/source.h","hash":"7b2495a825fabc480f30fc49654456071dbe2f39","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/atomic.m4","hash":"ccafd95bb6ef695562934d72493a868d229c380c","modified":1256778056000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/ltsugar.m4","hash":"2028bffadfd9b989bcc63da90596101fe4ec20b9","modified":1550652327185},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/blocks.m4","hash":"b382760dd6826814e28e1468f5334e10d16cbd47","modified":1477003670000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/ltoptions.m4","hash":"9cd35d79da7776af14f21b259c64f130fa1a3536","modified":1550652327095},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/ltversion.m4","hash":"3aae847c163fa6cc7c8241a3a49f98705538d55f","modified":1550652327289},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/lt~obsolete.m4","hash":"e21f085615f98d3751690c1615923e89160d5783","modified":1550652327391},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/pkg.m4","hash":"0ad48edd811333ca835d22d4b43da4dd63b14a36","modified":1265151795000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/CMakeLists.txt","hash":"c405516a7cf7b8ea4639b291cb39a1a29f59aced","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/Makefile.am","hash":"888306c0fff4ff75e99d195c674244d33f1060a2","modified":1465317001000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_after.3","hash":"6eb7a72520430b010f431b4547e5f813305d62bf","modified":1501891442000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_api.3","hash":"a9485675314d214853bdf6b9f1928519d5fe9208","modified":1257567403000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_apply.3","hash":"08bcecb5fd4f9e06af54d0071ac1c77d0c9bc8c9","modified":1499969984000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_async.3","hash":"b5d0a17aefb817ddf69ce1760fe5b7eb40a1c3fc","modified":1372284004000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_benchmark.3","hash":"0de0f521b0a928372595394132bcb1669e9ae00d","modified":1257567403000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch.3","hash":"b2cf12b5b9a5d0d0bdc5aabe4144a8365d2b1e44","modified":1372284004000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_data_create.3","hash":"a787b40ef4152e5c2eda4df87687927af8142667","modified":1372284004000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_group_create.3","hash":"ccec0caf2117acce4f45a22750e72a54c6c7706e","modified":1372284004000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_io_read.3","hash":"81512cef96a1efcbf7ced87bf97132d00c12378f","modified":1501540418000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_io_create.3","hash":"cc3be4d8f41fb6647e47bbc59a93a1a802fcf314","modified":1372284004000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_object.3","hash":"bd6e054d4b42544e8ae5f494aeff18569fbce421","modified":1471620563000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_once.3","hash":"2cb3e5b3298ffae57e01da2cfd185eec62ed1f76","modified":1257567403000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_read.3","hash":"ed63fd9049ccaf4b06d568d29f108b73069caf22","modified":1313607216000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_queue_create.3","hash":"eb99bfbacfa9a87f2b4a39d049831cbdf581bd7b","modified":1491233062000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_semaphore_create.3","hash":"eb3c08f33829d0a8b3fad2bb0a3c0a4697507164","modified":1501891442000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_time.3","hash":"9fe2d3809cc98e3f7475979013cd167ba8209c87","modified":1510792806000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/Makefile.am","hash":"030c8ea784d5135fd1434bb98688eb466b2a5260","modified":1465317001000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/CMakeLists.txt","hash":"7c214f499ed6f2a0e9d5483850faa1e20932d57e","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/man/dispatch_source_create.3","hash":"87daf961f6a89301979d612bc4093632d218d199","modified":1510792806000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/linux_base.h","hash":"f7a4a389caac8b80e06624a5656783cc0e4f762f","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/firehose_buffer_private.h","hash":"3d75778757fdbd40f10b0a0e5773fac15b24fb18","modified":1531417376000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/firehose_server_private.h","hash":"e6021f096938f03b0a0a9a8dc3e3a377555c5d60","modified":1522809881000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/object.h","hash":"5531bcdb8aa26920f69f0d846f3614df0b714022","modified":1520875921000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/object_private.h","hash":"a6b7215ff9c924b059cdc474bdf50655dd1873ad","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/voucher_activity_private.h","hash":"2a752b3be41e4d05e9c412758e9ce906a8a1415d","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/CMakeLists.txt","hash":"9866bf9e3f0e42b209bae100d172c70c831af1a0","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/Makefile.am","hash":"05fa3831acca9d4ea182580ec2a0872f3d02e7e6","modified":1449968176000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/os/voucher_private.h","hash":"cc8f8bb0e25f7eb0b366c528d8833d00d83d5564","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/benchmark.h","hash":"70acccf6921c7e4ebeaa9390013b872ef013edd5","modified":1472591887000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/data_private.h","hash":"4424363bd9c9404501d4a119d8ae5f419a8f7631","modified":1472591887000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/layout_private.h","hash":"73062429abdd66de5093dc92b615746a496e411f","modified":1515627741000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/io_private.h","hash":"8ef85e3158c61844a54534f5d3bdcf8a6254de25","modified":1472591887000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/introspection_private.h","hash":"04b8f1d86f3dbdd25008de89857940bcadcf2aea","modified":1524092961000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/mach_private.h","hash":"206132fdd06fd7c7ab3a7876cf0f92b71dfd6194","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/private.h","hash":"c47ef9d93255b18c4a7e14bd0b5fbcdc3a85b5ad","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/queue_private.h","hash":"a7c4204f3d54b4f8622958d7dc433fab1236c39c","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/source_private.h","hash":"6d64252a370d252685851b3dca778c11746575d2","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/time_private.h","hash":"da6a44ec3c1679e6b3508bc3c12011432aa100ae","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/resolver/resolved.h","hash":"25bfbc0712c5c40faff5d51ceeadace8835ab998","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/workloop_private.h","hash":"86ab626ac76365bd10a036821dce9664dcbc0547","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/resolver/resolver.c","hash":"6f8142fc230a7a0465295f19945d80b97c8d3dfd","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/resolver/resolver.h","hash":"79d369ab15aec721b7885cf9ce68b1a2b75d6f84","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/CMakeLists.txt","hash":"0da62d3620712b18c0ea0321569277a371700b19","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/allocator.c","hash":"e7cebdd6ba79a67b86d4786ba2f764fcccaa48a5","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/allocator_internal.h","hash":"128d681f78dcc8cc58b2e3db8e8d64ae4698e410","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/Makefile.am","hash":"1ee4858f9170bae126d73419aa66d70f9f57ec70","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/apply.c","hash":"89b136fabe9f2c66eaf952e342e5cfe3c08e14ff","modified":1527792842000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/benchmark.c","hash":"e25085dab2954c7e2ddb143d14d37deaddea0fe4","modified":1510792806000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/block.cpp","hash":"b613640dfcf33b00b7f4f1420c4dc4020ffde0ab","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/data.m","hash":"e48d2ccd691f0944486ad329e8c5e7996f61b633","modified":1506959041000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/data.c","hash":"a86dff6fe3bfbb1ff50d963d9b72d6228134e561","modified":1508877818000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/data_internal.h","hash":"71a3bad2bc251493c5f2df20fe69253ef690a14c","modified":1508877818000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/init.c","hash":"d1072a0c3559f1196064a4620f6340ad51f2b63a","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/internal.h","hash":"6010bd235b00b87e4bd0745450520d5d08bde998","modified":1538692284000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/introspection.c","hash":"a58db87f5769fffb84585307feea906b82cf6211","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/introspection_internal.h","hash":"02b4d24d4fb7a07df67fe120186f0ead471c2940","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/io_internal.h","hash":"ab7c981f34279e25b2114cabb18538db33ab4044","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/libdispatch.codes","hash":"bddb8ab8be3dc88c3ddb3758952b17a39e65290c","modified":1524174417000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/libdispatch.plist","hash":"a20405f49adef27b33ac29987bfcc80929e8a506","modified":1522398381000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/mach_internal.h","hash":"2d8498d406d928aea64bc63c7247fc9f6a7d830d","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/object.c","hash":"aefd59fdea26e11bec10dcdffa2d0cb5563f048a","modified":1520283580000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/object.m","hash":"ce523f7eb8732980519440ddf2d93cf5ea0d6e52","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/protocol.defs","hash":"9289bce84f9a9911063ee1ab6a0e91603a8475f4","modified":1372284004000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/once.c","hash":"0c147b50ba58028466d5627fe629da7498f759e1","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/object_internal.h","hash":"4032c41f9497173740035214e4e094b53cf31439","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/provider.d","hash":"4a1140e50154ce38ba4bd9237d65ad27aebd65b8","modified":1497597101000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/semaphore_internal.h","hash":"ff289533bbc275e547e3bda14fa72e3965532207","modified":1507162657000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/semaphore.c","hash":"31c09094a2a73af082c4524fd6e9f2b93fff0069","modified":1526926648000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims.h","hash":"729054a24dbc567e092603eeced23a05217dc620","modified":1538692285000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/queue_internal.h","hash":"854c59fb9f7460c71878d5e06b66a9d1e9353c95","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/source_internal.h","hash":"cf5bd007decfd9920d90aa15337252434529452a","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/time.c","hash":"6c67d1de3266a4416aaad29d2bbaa832c49ed345","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/trace.h","hash":"36d9db67eab1ced7098fea7e08e217d7646f8db1","modified":1524174417000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/source.c","hash":"a7391fea81c69594693d13426822ba3c2b53ba58","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/transform.c","hash":"d8bf7d5453fc505883e0605ea0e445fc1c3490a3","modified":1524160235000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/tools/dispatch_timers.d","hash":"c386862c72e039d2390430c84e1f741e42c6b1a9","modified":1362613641000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/voucher_internal.h","hash":"1de14910c2a1c97f2b559251f29eea59644c28e6","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/tools/dispatch_trace.d","hash":"b2253ca88254e698a7c4ea030c70e1823f9f3574","modified":1362613641000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/voucher.c","hash":"92ab3e8f48d8598491e00147130859d60b1e9a35","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/tools/firehose_trace.lua","hash":"e4e40bdb54cccb465d7f6ace36fcd4c6eb25567e","modified":1524174417000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/tools/voucher_trace.d","hash":"ad5ef6753f82fb9a95f69392c12448501c3ab60b","modified":1497597101000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-dyld-stub.xcconfig","hash":"15685e38667e6f9c01a5a8d1b479b6cf02ee5c55","modified":1490073073000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-introspection.xcconfig","hash":"dc4f2836f6797625510ffb8160a6b3b6939e6b62","modified":1446944727000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-mp-static.xcconfig","hash":"2a6199c121221a165f46a350bba36bdc5b93c371","modified":1490073073000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-resolved.xcconfig","hash":"1ae3be61c7a127b736bef54413b45b34adbafe86","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch-resolver.xcconfig","hash":"1c7ee3ad0674c4619586537f70082e102020224e","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.aliases","hash":"1d87434158f89e8053ca9023846444a49175077d","modified":1472527425000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.clean","hash":"2897de5305386aa73ff5436ea4ef3c390f503be2","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.dirty","hash":"855a64de124021f3f10703d99cf762a5416f7fed","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.interposable","hash":"3469a17129abda34cdb45b2ff613015c2125d042","modified":1384995868000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.order","hash":"8ea46dd6a71d2c8cbc411a5931267a6da01cfb12","modified":1515436074000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libfirehose.xcconfig","hash":"2d2b5f71a841efc40c260a943796a43368ac7c2f","modified":1490073073000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libdispatch.xcconfig","hash":"cc0278ba068050f11b6d6a0dc8e14ad2dc7a7eb1","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/check-order.sh","hash":"adf07898f9ad39d6dd345b9f983e493b874bbd1a","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/install-headers.sh","hash":"92db943a66ebd6743ae5a039ad538b2385e8e3e6","modified":1520875921000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/install-dtrace.sh","hash":"3fbe233ca9b8837de26a75724ff5be772443bde7","modified":1422488816000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodeconfig/libfirehose_kernel.xcconfig","hash":"6e3f88592f74d365253d799efa4bb14d0dbff635","modified":1490073073000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/install-manpages.sh","hash":"4506ccf35cdc94508f5283dd9a20d5011c7e97ef","modified":1471620563000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/run-on-install.sh","hash":"9d7a464e386cb22442403f251e58563c06490dec","modified":1454027370000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/mig-headers.sh","hash":"6e68608d0c92603d86d079219c44746e869f6ad1","modified":1521590869000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/xcodescripts/postprocess-headers.sh","hash":"e2afe1407ec4e52392a9c042fc5f4f1f8a39a5c1","modified":1538692283000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCharacterSet.c","hash":"5b8ef8abe77c09723256aecac2ab4f473d137db6","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFLocaleIdentifier.c","hash":"428637ebf72aa6ae89b37e6efb1659569e26c122","modified":1418059111000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFPropertyList.c","hash":"11d83b0ae099d3b9604fcd7e141d3874be9c4213","modified":1418059109000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFRunLoop.c","hash":"43b998a64667828d648bd6821ad1673a09825ab7","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFSocket.c","hash":"ac5d4ad1f9e62b078a6ce309690ce810473961a4","modified":1418059110000},{"_id":"source/codesource/oc_workspace/CF-1151.16/Examples/plconvert.c","hash":"77410a15b57acfe2077c6e61e8416c1d58aca974","modified":1418059100000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1537243694145},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1537243694145},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1537243694166},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1537243694152},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1537243694151},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1537243694152},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1537243694152},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1537243694152},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1537243694156},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1537243694161},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1537243694166},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1537243694167},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1537243694167},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1537243694167},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1537243694168},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1537243694168},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1537243694170},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1537243694169},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1537243694171},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1537243694171},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1537243694172},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1537243694171},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1537243694172},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1537243694172},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1537243694173},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1537243694173},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1537243694173},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1537243694173},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1537243694174},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1537243694174},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1537243694174},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1537243694174},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1537243694175},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1537243694175},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1537243694175},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1537243694182},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1537243694186},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1537243694188},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1537243694188},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1537243694193},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1537243694194},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1537243694194},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1537243694195},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1537243694194},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1537243694195},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1537243694197},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1537243694197},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1537243694197},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1537243694199},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1537243694199},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1537243694222},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1537243694222},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1537243694200},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1537243694201},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1537243694201},{"_id":"source/asset/Snip20181008_24.png","hash":"6165f92461a3d9f237e5ea774d7358a566e5c01b","modified":1539012065003},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBasicHash.c","hash":"2f5d970510c36b806c9c108fd8a2ba69621d8435","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBinaryPList.c","hash":"9928aea98ca08939f3c92810a565d1c49d9c2ec6","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle.c","hash":"73f3d37d08109a8beb48d0a72f493b1968e0d544","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBundle_Grok.c","hash":"3f29fed0e61d08c6c19fd960ce2955673ef3ce7e","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFBurstTrie.c","hash":"abf78c16a7709b40b47a7501ba612e54a5ca626d","modified":1418059112000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFDateFormatter.c","hash":"46d60ea1d767e80e74f680bb9f655c5bb3ad8cf9","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFNumber.c","hash":"4ed548ef65c2db668171f91eb79a2ba959b1a9f4","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStorage.c","hash":"b9ae854ec7328343da4f23ab702d03d5d7d43467","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFStream.c","hash":"f17fa31bee37b285843ca53f04b686cdfc5ab68d","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeData-B.mapping","hash":"a70bce56031193f44cda7a334843d630b602cf9a","modified":1418059101000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFUnicodeData-L.mapping","hash":"e77d11472c187e4d7e470d037a35a93c1fcaab79","modified":1418059101000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFXMLParser.c","hash":"d96d89c3daafa521694051f8cce4feb62fccd2aa","modified":1418059109000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/traces.1","hash":"36d7ee730a91a751bdd6a97d59cb069b703eb655","modified":1550652332811},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/io.c","hash":"16b0e9e23a26807b0de01820cba15ac3fd29c23e","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/inline_internal.h","hash":"359c1c5b1e8949bab84e99e7943d9b2e80fe7dae","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/mach.c","hash":"9e3ec2f926a92dd2fd00970d052c32212be3468c","modified":1538692283000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFURL.c","hash":"397c480a92162906c2248ce774061a83088bf88b","modified":1418059111000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1537243694187},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1537243694225},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1537243694210},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1537243694211},{"_id":"source/asset/Snip20181012_35.png","hash":"d02c9bfa7b7454ccd8bb71908add444538c407dd","modified":1539278733285},{"_id":"source/asset/Snip20181012_36.png","hash":"95081584e864fc70463633ba835772691ee89183","modified":1539278749299},{"_id":"source/asset/Snip20190215_7.png","hash":"42dbaa853f1aa32748e9c6f2e9163124f6f2dab7","modified":1550221517852},{"_id":"source/asset/Snip20190217_2.png","hash":"f0896a6299d262ff8a3dc77be4b28eb0d65d502b","modified":1550378087818},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Assets.xcassets/Contents.json","hash":"624e2ab81ed6f6035059e62a1eb7f5661975256e","modified":1550653727979},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Base.lproj/LaunchScreen.storyboard","hash":"92c9f9b9c75e3e4005f763c0889ff60d0c389cb7","modified":1550653729795},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Base.lproj/Main.storyboard","hash":"0a959c011d9492a0141629919551fad1129dd878","modified":1550653727975},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"a260d94e4d24e260a67adfe9023881065986a724","modified":1550653730570},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-1151.16 2.xcodeproj/project.pbxproj","hash":"a944bd974566a2a5bfcf16c70d28b18a1dbdaa90","modified":1550654088705},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-1151.16.xcodeproj/project.pbxproj","hash":"fec58112d97ad3aeeed490452ca20e9b7a2cd58e","modified":1550654054123},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSet.c","hash":"5b8ef8abe77c09723256aecac2ab4f473d137db6","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFLocaleIdentifier.c","hash":"428637ebf72aa6ae89b37e6efb1659569e26c122","modified":1418059111000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFPropertyList.c","hash":"11d83b0ae099d3b9604fcd7e141d3874be9c4213","modified":1418059109000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFRunLoop.c","hash":"43b998a64667828d648bd6821ad1673a09825ab7","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFSocket.c","hash":"ac5d4ad1f9e62b078a6ce309690ce810473961a4","modified":1418059110000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/Examples/plconvert.c","hash":"77410a15b57acfe2077c6e61e8416c1d58aca974","modified":1418059100000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DTrace.cmake","hash":"b0db9bcf1dcbb917b49e37d04517f9b1c2ad0880","modified":1501101340000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DispatchAppleOptions.cmake","hash":"e3f180389667220ba9d89eaba3a2298ecf708559","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/FindLibRT.cmake","hash":"8605361832d5d18b0d6b0dfdacd6542034d93dd8","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DispatchSanitization.cmake","hash":"8b322d6d8273d0609a5b83075c30ef081fa090da","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/DispatchCompilerWarnings.cmake","hash":"02657adfca2eb9a33e6360dd849d54f461d5f4df","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/cmake/modules/SwiftSupport.cmake","hash":"9b2ba98d7759c1d36306ec0f822e144439349240","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/traces.2","hash":"54f58d44d94309460e226f842627fa7ddc4d4258","modified":1550652329567},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/traces.0","hash":"a23eceeae067736faa6593516958b8dd5eea6066","modified":1550652325440},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/darwin/module.modulemap","hash":"ce58b55e506a76af96460a5461940bdc2c4545f4","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/dispatch/generic/module.modulemap","hash":"15340c8a0b6909f56d1105199045ee4142f4be7a","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.xcworkspace/contents.xcworkspacedata","hash":"84243848f54b0c5983e1ed26defb41d262ce1354","modified":1550652102801},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.pbxproj","hash":"96eb5b1af66effd31d90ba3ac1d69c4dc5cebda4","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/darwin/module.modulemap","hash":"1b46c421e03e5bea4ebc4d748329ebd9857e87ec","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/private/generic/module.modulemap","hash":"1b46c421e03e5bea4ebc4d748329ebd9857e87ec","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/Block.h","hash":"1224094390b774f51c696b401abd3383cc2bb6b8","modified":1477003670000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/data.c","hash":"7309af240a7225dc36c0ab4b571395622193f976","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/Block_private.h","hash":"eec25827ffd79ceefa7a66236d9e36013efb4412","modified":1477003670000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/BlocksRuntime/runtime.c","hash":"411a15eb4057ffed3cd8a8cba6da94e14595b774","modified":1501101340000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/event.c","hash":"07874fe1650c7248b23d5a5790e24ed6ad3d0cd7","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_config.h","hash":"b90bff8a3b8ba49d6b8d608eadaba02e4237cae3","modified":1515210538000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_internal.h","hash":"c33c7e34f49f3fc7000e0a228ef99d292ee5ecd0","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_epoll.c","hash":"98751bc394070c9aaf92938f2cf7b93643289d24","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose.defs","hash":"6308629714c8a581ff046019b19ff354674e2fd9","modified":1528140606000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/workqueue_internal.h","hash":"a48b50579b6745f215b3451ac06e392dced27a74","modified":1508877818000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/workqueue.c","hash":"c9cd6bc73ad534cdb2af2e6392cad9f43989f492","modified":1521871118000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_internal.h","hash":"6849bfdb79d1080e55011fbc41d7430427af24f2","modified":1488412538000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_inline_internal.h","hash":"f995d9c0ba1ebe83271cc858151fc14d4be5ef9e","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_buffer.c","hash":"97ba8104c178400421eb71a4a7772d79d95bdc40","modified":1531417376000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_buffer_internal.h","hash":"b98b52af1d188974b1a58dd2ad81f23d2b5377bc","modified":1531417376000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_reply.defs","hash":"1c87e1b0987a4ead71cf63e58edd092d375b53a3","modified":1522809881000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_server_internal.h","hash":"8342119e70592a17326b4e4b535d1998cc2d2f6c","modified":1521069182000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_types.defs","hash":"5b3ead5a5e41b65fad7cb4ad7fbdb553a33ca694","modified":1462490144000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_server_object.m","hash":"662be27fcde2d2f3ffcae449645e01476d73f27d","modified":1462847568000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/firehose/firehose_server.c","hash":"168644089885180b7fe75745c37ba5fe47adeb9a","modified":1531417376000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/atomic.h","hash":"ce2746714afb0aee1bf5fa57ce365cf608dfa8a9","modified":1507587261000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/android_stubs.h","hash":"3699020d055d91b945fa272cac19721f03b46167","modified":1487488401000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/atomic_sfb.h","hash":"13b81c59452eda43a85863359cf229f60f8dc787","modified":1508877818000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/linux_stubs.c","hash":"938258e2d231764bbbf4db522f46c168bd0436ac","modified":1487488401000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/getprogname.h","hash":"d07b2db898b5ac2d6fc99b22bcdc48b951ee623b","modified":1487488401000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/hw_config.h","hash":"ec65e3cf230eccd540c6e3c0e04de3d0c4876d3b","modified":1508806276000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/linux_stubs.h","hash":"efb32cfe48053302139663c69cda5d47bb7d2cd4","modified":1487488401000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/perfmon.h","hash":"a720962211d7ea88c7b7a27b852789eabfb2d4f0","modified":1510792806000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/lock.c","hash":"457e01eb03c033a595bf99d2e14914762519a3cc","modified":1532819132000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/lock.h","hash":"985c0e72809e95ffb2646ffac2a860c6315c4840","modified":1532819132000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/target.h","hash":"ec6cdebd2a68f705184a30b087f420b23ab900dc","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/time.h","hash":"dfc4389f61010bf8b40ac2d740351bd883e4b255","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/priority.h","hash":"e9b2dc5ce4669fd3c7a0e8c0a9729834155ded69","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/yield.h","hash":"e7d3c689531f64f260d59f836103ffb98c667235","modified":1530206642000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Block.swift","hash":"138ea286ae037c5bf075226872c9c94cf0a75381","modified":1477003670000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Data.swift","hash":"5b0e3fce8a6fd414cc820f879c47bd89ec2e0c18","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/shims/tsd.h","hash":"9c52cfaa16e29a70f5603ca78ad71c5e8a07d2ef","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Dispatch.apinotes","hash":"58728646f20d402990ed4e56db029a23f5bce2bd","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Dispatch.swift","hash":"ccf6ac4259fc68e374ed944b56c5eb66f72df533","modified":1477003670000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/IO.swift","hash":"95a0321edd8cf5361ca265f9dfedf125872f33b7","modified":1495236188000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/DispatchStubs.cc","hash":"55eb35b89a31d15736ed07bac6a71e603ebf653d","modified":1501101340000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Queue.swift","hash":"3fae10ccee4a2c08917a3805d32a24549a528f48","modified":1501101340000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Private.swift","hash":"dfc7cd527ba340dcffb42795fb62f92454c78a63","modified":1487707700000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Time.swift","hash":"7fc151c8540b7b282938aeb4999926cbad8eeb71","modified":1508380956000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Source.swift","hash":"53a2d6b07b2055023a0ced4e849709a0e4dae9ae","modified":1497303627000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/swift/Wrapper.swift","hash":"98d3d39b1c6295a949baa78dfc29092571a07942","modified":1495236188000},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFString.c","hash":"efe0dbc7e0277e67c818c1c250ec011a81a70aba","modified":1418059110000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1537243694152},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1537243694153},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1537243694153},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1537243694153},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1537243694154},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1537243694154},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1537243694155},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1537243694154},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1537243694155},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1537243694155},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1537243694156},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1537243694156},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1537243694156},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1537243694157},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1537243694156},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1537243694157},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1537243694157},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1537243694157},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1537243694157},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1537243694158},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1537243694158},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1537243694158},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1537243694158},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1537243694158},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1537243694159},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1537243694159},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1537243694159},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1537243694159},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1537243694160},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1537243694160},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1537243694159},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1537243694160},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1537243694160},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1537243694161},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1537243694161},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1537243694160},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1537243694161},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1537243694161},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1537243694162},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1537243694161},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1537243694162},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1537243694162},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1537243694162},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1537243694163},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1537243694163},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1537243694163},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1537243694163},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1537243694163},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1537243694164},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1537243694164},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1537243694164},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1537243694165},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1537243694165},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1537243694165},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1537243694164},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1537243694165},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1537243694165},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1537243694166},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1537243694172},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1537243694172},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1537243694174},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1537243694184},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1537243694184},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1537243694184},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1537243694185},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1537243694185},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1537243694196},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1537243694196},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1537243694195},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1537243694196},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1537243694196},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1537243694196},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1537243694204},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1537243694203},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1537243694210},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFURL.c","hash":"397c480a92162906c2248ce774061a83088bf88b","modified":1418059111000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/event/event_kevent.c","hash":"89cbbfb82d6425a603dcb65e166e360aca459243","modified":1538692283000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/src/queue.c","hash":"83c637cd365da84d71b927ac19bf2e597111891a","modified":1538692283000},{"_id":"source/asset/Snip20181012_29.png","hash":"990e4bad118d589caea731fe8d92a2433314990e","modified":1539275660802},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Assets.xcassets/AppIcon.appiconset/Contents.json","hash":"b903009155a78ae0480b42db13ad20de7b2616a1","modified":1550653729781},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1550653731115},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFString.c","hash":"efe0dbc7e0277e67c818c1c250ec011a81a70aba","modified":1418059110000},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/config/ltmain.sh","hash":"f85550ae05106b379cce5307849d5fc03a9e603c","modified":1550652326860},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","hash":"df5fe739b8b3ab69cf1a32a8881c48a1662e0340","modified":1550652102963},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/m4/libtool.m4","hash":"89105b0fc95d5ff30e8a1194467a61d671b699b5","modified":1550652327007},{"_id":"source/codesource/oc_workspace/CF-1151.16/CFCharacterSetBitmaps.bitmap","hash":"0e7bc2d8ddda1a9a874dd4a34708db96da2e4b8a","modified":1418059101000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1537243694191},{"_id":"source/codesource/oc_workspace/gz_dir/libdispatch-1008.200.78.tar.gz","hash":"4bc360ee5c8c6f2644c6f043af3aaef5a5f59091","modified":1550652037414},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1537243694221},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/xcuserdata/Aka.xcuserdatad/xcschemes/xcschememanagement.plist","hash":"b973478ca6150a6fa81abfaa2e6cc7d2b2e816fd","modified":1550653731118},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBag.h","hash":"720ad889de85904288feba201f51648a991f95d1","modified":1550651987500},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace.xcodeproj/project.xcworkspace/xcuserdata/Aka.xcuserdatad/UserInterfaceState.xcuserstate","hash":"4754b3626a13211f2522c9f44f844dd0a0fae071","modified":1551010806962},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFArray.h","hash":"074e83ed291030bf9e15b3d3c96403b6a53f9063","modified":1550651987494},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFAvailability.h","hash":"be7e48b0dc474fa019284a23ce03861f31d09d55","modified":1550651987497},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBigNumber.h","hash":"bcc176d5b89d4ee6f5f20feed9addaee7e26e102","modified":1550651987508},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBasicHash.h","hash":"15bfd99c046979a69f98491ad1fab01018482866","modified":1550651987505},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBitVector.h","hash":"3f4200824906b2301cdd2040d40667ad7f53e423","modified":1550651987514},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBinaryHeap.h","hash":"b3f633e18b4edf39c9090b4ef6f44010ef2acb4c","modified":1550651987511},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBase.h","hash":"0c2309af456d8ddf1a59d72693469a2c625a3742","modified":1550651987503},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundle_BinaryTypes.h","hash":"e1394278b4d82212c00ee0d0ee09f9dfdd64cc96","modified":1550651987522},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundlePriv.h","hash":"557b7751a17a5ba69bcf2e94996c1b9b154f201c","modified":1550651987519},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFByteOrder.h","hash":"3af7768d3db86c09d3a4634c95c28c0319a7a959","modified":1550651987531},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundle.h","hash":"0e35f53e5e0b3388c6843b735cfd9822a70c717c","modified":1550651987516},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFCharacterSet.h","hash":"6a47849eb46b31a88656e3d22d9c8ffc34e75ec1","modified":1550651987538},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBundle_Internal.h","hash":"1e09c3640b34fc5898e2d2833746757274080790","modified":1550651987525},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFData.h","hash":"483482bc59d508e6a00c1fc82e5888664c14a586","modified":1550651987543},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFBurstTrie.h","hash":"46c34e3d33bed5af496ff1641fa30d4af03307de","modified":1550651987528},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFDateFormatter.h","hash":"fc3d94d242af09b837a59454a525952ff7d05f05","modified":1550651987550},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFCalendar.h","hash":"cd134f6335beb0273f341ac5a3a5473b3d331d19","modified":1550651987534},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFCharacterSetPriv.h","hash":"abcb5aa940bb8d321c4832520bfebfd9cf37b91f","modified":1550651987541},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFDate.h","hash":"efe889eabc76d73f4ec1fbd569b71dede5a7143a","modified":1550651987546},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFError.h","hash":"2541016747a742fd99e1a7f595204b33289c56ce","modified":1550651987558},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFDictionary.h","hash":"9431262fd5d7bce26516e79e08b651eb62abaec0","modified":1550651987555},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFInternal.h","hash":"7cdb7a6247c8070ec97c571e750f6938679e91d5","modified":1550651987573},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFError_Private.h","hash":"0a7c41daa09c452b048d635ed89bcef3229c0f0d","modified":1550651987560},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFICUConverters.h","hash":"e01c3355640c02b7f08a423d3c92184b0e4aec4b","modified":1550651987564},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFLogUtilities.h","hash":"b0959f9304ffcd3dd732a15ac2ab4db4eede767e","modified":1550651987584},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFICULogging.h","hash":"2d40477c02a53db5ad9eab8124f00c54c73b2ce6","modified":1550651987569},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFLocaleInternal.h","hash":"9dd2d36bcdb6c1241f540020794aa11ef0fbae8c","modified":1550651987578},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFLocale.h","hash":"164dcbd728ff3bbea0417ab72ae05d9064fa30fc","modified":1550651987575},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFNumberFormatter.h","hash":"414d9b0173c4120a88ac596393af175cea79659e","modified":1550651987595},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFMachPort.h","hash":"afc526c2edf88b14d2766ddecc694f3d75921491","modified":1550651987587},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFMessagePort.h","hash":"4686eabd02d619cdc82632f034865dc164883ef6","modified":1550651987590},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFNumber.h","hash":"21282c15b115e3ebe619dec52193f1104f6a9320","modified":1550651987593},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPreferences.h","hash":"3216b3f525f3a0ce35e9362d5ce63284c1bfdd2f","modified":1550651987612},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPlugIn.h","hash":"5c9faae714ee5d6d2af4926e3c1c6846ba39069d","modified":1550651987602},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPropertyList.h","hash":"045c0d466191d869fa20c7cdd08bcb699d889622","modified":1550651987617},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPlugInCOM.h","hash":"4301c1c318208daa4688db9dbe33a8ec7204abaa","modified":1550651987605},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFRuntime.h","hash":"54ca1ea44053a93c53d3f049c27f49db674c431f","modified":1550651987625},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPlugIn_Factory.h","hash":"156e57b3fa1c30ea12322dd3b311aa4231fa474a","modified":1550651987609},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFSocket.h","hash":"6e9eb84ef2a50483958730e3135c9e39a0b6c07b","modified":1550651987630},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFPriv.h","hash":"86cdbffc4ea7d01887dfed9dce587b7b39967ca6","modified":1550651987615},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFRunLoop.h","hash":"84280046282188d0fa8781ccc6b1cb12df4995c7","modified":1550651987620},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFSet.h","hash":"7e15852ba61dd5123d1863b93c87e4b5c5c658f0","modified":1550651987627},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStorage.h","hash":"0daa33b6103b1d64047cce99776dde88a3c343b3","modified":1550651987633},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStream.h","hash":"f2cf5351883f52b245729ab5d5752f073c1a3f53","modified":1550651987636},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFString.h","hash":"a24970b4c3504a7cc349445918ac4071b5344723","modified":1550651987648},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStreamAbstract.h","hash":"90c5107c1b00dadfbc6f9674808ebc202f4ddfde","modified":1550651987639},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStreamInternal.h","hash":"8c07eef05f6fc89abefc107ac8fbf1e20dc243a8","modified":1550651987642},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStreamPriv.h","hash":"2a0f446b6b862c19b924eefb94a2299ff3a6b66d","modified":1550651987644},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingConverterPriv.h","hash":"fd0997059f0363e13ae834488683170decf9784c","modified":1550651987659},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringDefaultEncoding.h","hash":"3224d10090af5e1d6aeb3273712dc52484fd2f38","modified":1550651987651},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingConverter.h","hash":"83b160c474de7ec3160215666f644539d5d7e3ab","modified":1550651987654},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingConverterExt.h","hash":"49aa8645e765ab01de71a8ff29205f89b8578b48","modified":1550651987656},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingDatabase.h","hash":"d904894f3a2d3400039831034bf69187ddfa4a2c","modified":1550651987661},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFTree.h","hash":"9e48350fa439e2484e689d7a0583382d06bed4b5","modified":1550651987671},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURL.inc.h","hash":"5b1cf6926ae652cf1ae6437509834329577e2230","modified":1550651987677},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFStringEncodingExt.h","hash":"109a41de01deb198345654115039cf2200712be7","modified":1550651987666},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFTimeZone.h","hash":"cf5bfdc845259753719a02298fecdf865d2fd33e","modified":1550651987669},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURL.h","hash":"a417c00f222329c03b166f84e1b943c421978c44","modified":1550651987674},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUniChar.h","hash":"1a0a6a54554165c884605679f591606c7ee3f41c","modified":1550651987689},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURLAccess.h","hash":"74c52e5e7357c655b8824f7ce422502ce4004297","modified":1550651987681},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFURLPriv.h","hash":"ad15b8959b4b5bea1a1d59640855d879c5915c3b","modified":1550651987684},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUUID.h","hash":"42727e1fa32598c43cbdd85475119a6b8649b261","modified":1550651987687},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUniCharPriv.h","hash":"33844cd4340caf3068592cc8d2a944f63edd4cce","modified":1550651987692},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUnicodeDecomposition.h","hash":"2d5849b9adf3b498eed8badd07c95bd88165c96a","modified":1550651987694},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUnicodePrecomposition.h","hash":"cd096f76e43672538fe27aebfbb9520ae26e4675","modified":1550651987699},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUserNotification.h","hash":"c5fc7cd0c37307ca0e27813128d418a2712cc926","modified":1550651987701},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFXMLInputStream.h","hash":"f1ed50d6bcdb7b061415cbb82e8b0ab81704761a","modified":1550651987706},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFXMLParser.h","hash":"fc632a9f1dba23bde78b6e45ed0f214c0d78ff6c","modified":1550651987711},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFUtilities.h","hash":"1d7667d6dd9326bc72b5be6df841e671da6421a5","modified":1550651987704},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CFXMLNode.h","hash":"fbe3c87b662de4e2769212b97e9ccbb06bcfb39b","modified":1550651987709},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CoreFoundation.h","hash":"d3b6772243683273a73940ab5d0a2866cace0165","modified":1550651987715},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/CoreFoundation_Prefix.h","hash":"b05d852686f15f8e69e5606ca81f310ee067e9ab","modified":1550651987718},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CFCharacterSetBitmaps.bitmap","hash":"0e7bc2d8ddda1a9a874dd4a34708db96da2e4b8a","modified":1418059101000},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/ForFoundationOnly.h","hash":"63fc4ed1a0e4a4e64e24f7300d91bb7e3957386f","modified":1550651987721},{"_id":"source/codesource/oc_workspace/RunloopWorkspace/CF-1151.16/CF-Objects/normal/CoreFoundation/TargetConditionals.h","hash":"1d3badf3df763fdde8424b38b78a20d2d4f1d635","modified":1550651987723},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/xcuserdata/Aka.xcuserdatad/xcschemes/xcschememanagement.plist","hash":"05597286431eed38ee96319a15bc34d1b5b3835f","modified":1550652102973},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1537243694208},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/libdispatch.xcodeproj/project.xcworkspace/xcuserdata/Aka.xcuserdatad/UserInterfaceState.xcuserstate","hash":"fda961a4d548f7d8b853db26468d806eb29fd124","modified":1550652142930},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/configure","hash":"fbe50b5fb253005042a5ffeb10514dd912f5b3f5","modified":1550652330606},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/output.2","hash":"df06ce0f2779ad0ffc989a41eda02592199cfc03","modified":1550652329571},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/output.0","hash":"df06ce0f2779ad0ffc989a41eda02592199cfc03","modified":1550652325443},{"_id":"source/codesource/oc_workspace/libdispatch-1008.200.78/autom4te.cache/output.1","hash":"8e1352912d5365dfca45725a89b6c4a5d318e2a3","modified":1550652332814},{"_id":"source/asset/Snip20181012_37.png","hash":"85958aa9a6553f7c9b0f7e8760e9d0d51b8cde3c","modified":1539278971435},{"_id":"source/codesource/oc_workspace/gz_dir/CF-1151.16.tar.gz","hash":"189d3d1881e48cf292c01040b9f6f69b1bb8c219","modified":1550651569828},{"_id":"source/asset/WechatIMG6.png","hash":"d2a530c7204945e608c06f82c8494f9753e9007e","modified":1550583487902}],"Category":[{"name":"AR","_id":"cjswppckh0003qiojht992xsg"},{"name":"C","_id":"cjswppckx000dqioj7xlvz1bi"},{"name":"iOS","_id":"cjswppcl7000pqiojfotd3b4x"},{"name":"计算机网络","_id":"cjswppcla000wqiojxno8rvil"},{"name":"ffmpeg","_id":"cjswppcld0012qiojo12hahem"},{"name":"oc","_id":"cjswppcli0019qioj6jvhmwgl"},{"name":"tool","_id":"cjswppcll001fqiojum945oe1"},{"name":"unity","_id":"cjswppcls001tqioji7l1g7rw"},{"name":"面试","_id":"cjswppcm4002kqiojte3ceq1t"},{"name":"编程语言","_id":"cjswppcm5002pqiojl6d03ee8"},{"name":"OC","_id":"cjswppcm5002tqioj5xozj0jy"},{"name":"其他","_id":"cjswppcm80030qiojehttqkuj"},{"name":"图像处理","_id":"cjswppcma0038qiojz8w84o6c"}],"Data":[],"Page":[{"title":"categories","date":"2018-09-18T05:21:12.000Z","type":"categories","_content":"\n\n\n\n\n","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-09-18 13:21:12\ntype: \"categories\"\n---\n\n\n\n\n\n","updated":"2019-02-20T08:58:16.748Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjswppckd0001qioj1qwldb8m","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"我的简介","date":"2019-03-02T19:08:22.000Z","_content":"\n<div align=center>\n<font size=2 color=blue>又名： 墨子幻</font>\n<div>\n\n\n<font size=4 color=red>1、今年计划:【大体方向】 </font>\n* 沉淀技术\n* 深耕业务方面的需求\n\n\n<font size=4 color=red>2、现阶段： </font>\n\t1）iOS开发，公司要努力完成需求，并且要优化对应的内容，不管巨细，都要花多点时间优化好 ，然后回来之前都要做对应的毕节\n\t2）看书，看对应每周这个时候安排好的书籍\n\t3）将公司的内容以及今天看书的内容做好笔记到 helinyu.github.io 上面\n\n\n<font size=4 color=red>3、职业上面： </font>\n\t——> iOS (做好本职工作 ，以及使用到的开源库研究)\n\t——> android(java 研究对应的jvm)的内容实现过程；\n\t——> 后台（java语言基础内容「jvm」）\n\t——> 使用对应的框架「ssm」\n\t——> 数据库方面的内容；「后台基本的业务内容」\n\n\t——> 争取在公司也有写些后台的机会；\n\n\n<font size=4 color=red>4、开发上面： </font>\n\t——> 使用到的第三方库「了解原理， 架构设计模式， 编程的特色优点， 同类型库可以比较」\n\t——> application的优化 \n\t——> app上面性能优化的几个点\n\t——> 后台项目（待定）\n\n<font size=4 color=red>5、app性能优化：（几个方面，这里需要总结） </font>\n\t1）耗电量\n\t2）首页启动快慢\n\t3）是否卡顿\n\t4）内存优化\n\t5）网络监测\n\t6）性能监控\n\n\t* 架构上面的优化\n\t* 特定的场景优化 eg：离屏渲染等 GPU 、CPU、Memory\n\n<br>\n<br>\n<font size=4 color=green>延后（待定）【不一定安排】 </font>\n* 每个月末都要学习一种新的编程语言； 基本语法以及基本上面的应用；\n\n","source":"resume/index.md","raw":"---\ntitle: 我的简介\ndate: 2019-03-03 03:08:22\n---\n\n<div align=center>\n<font size=2 color=blue>又名： 墨子幻</font>\n<div>\n\n\n<font size=4 color=red>1、今年计划:【大体方向】 </font>\n* 沉淀技术\n* 深耕业务方面的需求\n\n\n<font size=4 color=red>2、现阶段： </font>\n\t1）iOS开发，公司要努力完成需求，并且要优化对应的内容，不管巨细，都要花多点时间优化好 ，然后回来之前都要做对应的毕节\n\t2）看书，看对应每周这个时候安排好的书籍\n\t3）将公司的内容以及今天看书的内容做好笔记到 helinyu.github.io 上面\n\n\n<font size=4 color=red>3、职业上面： </font>\n\t——> iOS (做好本职工作 ，以及使用到的开源库研究)\n\t——> android(java 研究对应的jvm)的内容实现过程；\n\t——> 后台（java语言基础内容「jvm」）\n\t——> 使用对应的框架「ssm」\n\t——> 数据库方面的内容；「后台基本的业务内容」\n\n\t——> 争取在公司也有写些后台的机会；\n\n\n<font size=4 color=red>4、开发上面： </font>\n\t——> 使用到的第三方库「了解原理， 架构设计模式， 编程的特色优点， 同类型库可以比较」\n\t——> application的优化 \n\t——> app上面性能优化的几个点\n\t——> 后台项目（待定）\n\n<font size=4 color=red>5、app性能优化：（几个方面，这里需要总结） </font>\n\t1）耗电量\n\t2）首页启动快慢\n\t3）是否卡顿\n\t4）内存优化\n\t5）网络监测\n\t6）性能监控\n\n\t* 架构上面的优化\n\t* 特定的场景优化 eg：离屏渲染等 GPU 、CPU、Memory\n\n<br>\n<br>\n<font size=4 color=green>延后（待定）【不一定安排】 </font>\n* 每个月末都要学习一种新的编程语言； 基本语法以及基本上面的应用；\n\n","updated":"2019-03-02T19:28:42.201Z","path":"resume/index.html","comments":1,"layout":"page","_id":"cjswppctr003fqiojdup3ekve","content":"<p><div align=\"center\"></div></p>\n<p><font size=\"2\" color=\"blue\">又名： 墨子幻</font></p>\n<div>\n\n\n<p><font size=\"4\" color=\"red\">1、今年计划:【大体方向】 </font></p>\n<ul>\n<li>沉淀技术</li>\n<li>深耕业务方面的需求</li>\n</ul>\n<p><font size=\"4\" color=\"red\">2、现阶段： </font><br>    1）iOS开发，公司要努力完成需求，并且要优化对应的内容，不管巨细，都要花多点时间优化好 ，然后回来之前都要做对应的毕节<br>    2）看书，看对应每周这个时候安排好的书籍<br>    3）将公司的内容以及今天看书的内容做好笔记到 helinyu.github.io 上面</p>\n<p><font size=\"4\" color=\"red\">3、职业上面： </font><br>    ——&gt; iOS (做好本职工作 ，以及使用到的开源库研究)<br>    ——&gt; android(java 研究对应的jvm)的内容实现过程；<br>    ——&gt; 后台（java语言基础内容「jvm」）<br>    ——&gt; 使用对应的框架「ssm」<br>    ——&gt; 数据库方面的内容；「后台基本的业务内容」</p>\n<pre><code>——&gt; 争取在公司也有写些后台的机会；\n</code></pre><p><font size=\"4\" color=\"red\">4、开发上面： </font><br>    ——&gt; 使用到的第三方库「了解原理， 架构设计模式， 编程的特色优点， 同类型库可以比较」<br>    ——&gt; application的优化<br>    ——&gt; app上面性能优化的几个点<br>    ——&gt; 后台项目（待定）</p>\n<p><font size=\"4\" color=\"red\">5、app性能优化：（几个方面，这里需要总结） </font><br>    1）耗电量<br>    2）首页启动快慢<br>    3）是否卡顿<br>    4）内存优化<br>    5）网络监测<br>    6）性能监控</p>\n<pre><code>* 架构上面的优化\n* 特定的场景优化 eg：离屏渲染等 GPU 、CPU、Memory\n</code></pre><p><br><br><br></p>\n<p><font size=\"4\" color=\"green\">延后（待定）【不一定安排】 </font></p>\n<ul>\n<li>每个月末都要学习一种新的编程语言； 基本语法以及基本上面的应用；</li>\n</ul>\n</div>","site":{"data":{}},"excerpt":"","more":"<p><div align=\"center\"></div></p>\n<p><font size=\"2\" color=\"blue\">又名： 墨子幻</font></p>\n<div>\n\n\n<p><font size=\"4\" color=\"red\">1、今年计划:【大体方向】 </font></p>\n<ul>\n<li>沉淀技术</li>\n<li>深耕业务方面的需求</li>\n</ul>\n<p><font size=\"4\" color=\"red\">2、现阶段： </font><br>    1）iOS开发，公司要努力完成需求，并且要优化对应的内容，不管巨细，都要花多点时间优化好 ，然后回来之前都要做对应的毕节<br>    2）看书，看对应每周这个时候安排好的书籍<br>    3）将公司的内容以及今天看书的内容做好笔记到 helinyu.github.io 上面</p>\n<p><font size=\"4\" color=\"red\">3、职业上面： </font><br>    ——&gt; iOS (做好本职工作 ，以及使用到的开源库研究)<br>    ——&gt; android(java 研究对应的jvm)的内容实现过程；<br>    ——&gt; 后台（java语言基础内容「jvm」）<br>    ——&gt; 使用对应的框架「ssm」<br>    ——&gt; 数据库方面的内容；「后台基本的业务内容」</p>\n<pre><code>——&gt; 争取在公司也有写些后台的机会；\n</code></pre><p><font size=\"4\" color=\"red\">4、开发上面： </font><br>    ——&gt; 使用到的第三方库「了解原理， 架构设计模式， 编程的特色优点， 同类型库可以比较」<br>    ——&gt; application的优化<br>    ——&gt; app上面性能优化的几个点<br>    ——&gt; 后台项目（待定）</p>\n<p><font size=\"4\" color=\"red\">5、app性能优化：（几个方面，这里需要总结） </font><br>    1）耗电量<br>    2）首页启动快慢<br>    3）是否卡顿<br>    4）内存优化<br>    5）网络监测<br>    6）性能监控</p>\n<pre><code>* 架构上面的优化\n* 特定的场景优化 eg：离屏渲染等 GPU 、CPU、Memory\n</code></pre><p><br><br><br></p>\n<p><font size=\"4\" color=\"green\">延后（待定）【不一定安排】 </font></p>\n<ul>\n<li>每个月末都要学习一种新的编程语言； 基本语法以及基本上面的应用；</li>\n</ul>\n</div>"},{"title":"tags","date":"2018-09-18T05:23:22.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-09-18 13:23:22\ntype: \"tags\"\n\n---\n","updated":"2018-09-18T05:24:06.867Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjswppcts003gqiojt2v78um4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于文档总体概览","date":"2018-09-18T05:25:49.000Z","type":"about","_content":"\n开发中涉及到的一些笔记，eg：iOS等。\n\n有关的内容进行实现的过程是怎么样的？\n\n```\n1> 分类： 是从业务上进行分类\n2> 标签： 是从编程语言上进行分类\n```\n\n注意事项； hexo 这个日志一定要使用系统自带的，\nnvm list 列出对应的npm版本 (看到有system的分类)\nnvm use system  使用系统的版本\n\n太久没有用了，可能出现的问题：\nPlease make sure you have the correct access rights and the repository exists. FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html Error: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists.\n\n这个很可能就是ssh的key出现了问题，过期等等\n在自己的本地主机中的.ssh/id_rsa.pub 拷贝添加到github上面的项目中，注意消息名字要对\n然后执行： hexo clean && hexo g && hexo d\n\n\n<font size=3 color=red>约定：</font>\n> 【同般】: 表示和我们常常使用的是一样的\n\n","source":"about/index.md","raw":"---\ntitle: 关于文档总体概览\ndate: 2018-09-18 13:25:49\ntype: \"about\"\n---\n\n开发中涉及到的一些笔记，eg：iOS等。\n\n有关的内容进行实现的过程是怎么样的？\n\n```\n1> 分类： 是从业务上进行分类\n2> 标签： 是从编程语言上进行分类\n```\n\n注意事项； hexo 这个日志一定要使用系统自带的，\nnvm list 列出对应的npm版本 (看到有system的分类)\nnvm use system  使用系统的版本\n\n太久没有用了，可能出现的问题：\nPlease make sure you have the correct access rights and the repository exists. FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html Error: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists.\n\n这个很可能就是ssh的key出现了问题，过期等等\n在自己的本地主机中的.ssh/id_rsa.pub 拷贝添加到github上面的项目中，注意消息名字要对\n然后执行： hexo clean && hexo g && hexo d\n\n\n<font size=3 color=red>约定：</font>\n> 【同般】: 表示和我们常常使用的是一样的\n\n","updated":"2019-03-02T19:48:39.259Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjswppctu003hqiojc3jeypbo","content":"<p>开发中涉及到的一些笔记，eg：iOS等。</p>\n<p>有关的内容进行实现的过程是怎么样的？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&gt; 分类： 是从业务上进行分类</span><br><span class=\"line\">2&gt; 标签： 是从编程语言上进行分类</span><br></pre></td></tr></table></figure>\n<p>注意事项； hexo 这个日志一定要使用系统自带的，<br>nvm list 列出对应的npm版本 (看到有system的分类)<br>nvm use system  使用系统的版本</p>\n<p>太久没有用了，可能出现的问题：<br>Please make sure you have the correct access rights and the repository exists. FATAL Something’s wrong. Maybe you can find the solution here: <a href=\"http://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">http://hexo.io/docs/troubleshooting.html</a> Error: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists.</p>\n<p>这个很可能就是ssh的key出现了问题，过期等等<br>在自己的本地主机中的.ssh/id_rsa.pub 拷贝添加到github上面的项目中，注意消息名字要对<br>然后执行： hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</p>\n<p><font size=\"3\" color=\"red\">约定：</font></p>\n<blockquote>\n<p>【同般】: 表示和我们常常使用的是一样的</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>开发中涉及到的一些笔记，eg：iOS等。</p>\n<p>有关的内容进行实现的过程是怎么样的？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&gt; 分类： 是从业务上进行分类</span><br><span class=\"line\">2&gt; 标签： 是从编程语言上进行分类</span><br></pre></td></tr></table></figure>\n<p>注意事项； hexo 这个日志一定要使用系统自带的，<br>nvm list 列出对应的npm版本 (看到有system的分类)<br>nvm use system  使用系统的版本</p>\n<p>太久没有用了，可能出现的问题：<br>Please make sure you have the correct access rights and the repository exists. FATAL Something’s wrong. Maybe you can find the solution here: <a href=\"http://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">http://hexo.io/docs/troubleshooting.html</a> Error: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists.</p>\n<p>这个很可能就是ssh的key出现了问题，过期等等<br>在自己的本地主机中的.ssh/id_rsa.pub 拷贝添加到github上面的项目中，注意消息名字要对<br>然后执行： hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</p>\n<p><font size=\"3\" color=\"red\">约定：</font></p>\n<blockquote>\n<p>【同般】: 表示和我们常常使用的是一样的</p>\n</blockquote>\n"},{"_content":"## Grand Central Dispatch (GCD)\n\nGCD is a concurrent programming framework first shipped with Mac OS X Snow\nLeopard.  This package is an open source bundling of libdispatch, the core\nuser space library implementing GCD.  At the time of writing, support for\nthe BSD kqueue API, and specifically extensions introduced in Mac OS X Snow\nLeopard and FreeBSD 9-CURRENT, are required to use libdispatch.  Linux is\nsupported, but requires specific packages to be installed (see Linux\nsection at the end of the file). Other systems are currently unsupported.\n\n### Configuring and installing libdispatch (general comments)\n\nGCD is built using autoconf, automake, and libtool, and has a number of\ncompile-time configuration options that should be reviewed before starting.\nAn uncustomized install of the C-API to libdispatch requires:\n\n\tsh autogen.sh\n\t./configure\n\tmake\n\tmake install\n\nlibdispatch can be optionally built to include a Swift API. This requires a\nSwift toolchain to compile the Swift code in libdispatch and can be done\nin two possible scenarios.\n\nIf you are building your own Swift toolchain from source, then you should build\nlibdispatch simply by giving additional arguments to swift/utils/build-script:\n\n    ./swift/utils/build-script --libdispatch -- --install-libdispatch\n\nTo build libdispatch using a pre-built Swift toolchain and install libdispatch\ninto that toolchain (to allow that toolchain to compile Swift code containing\n\"import Dispatch\") requires:\n\n    sh autogen.sh\n\t./configure --with-swift-toolchain=<PATH_TO_SWIFT_TOOLCHAIN> --prefix=<PATH_TO_SWIFT_TOOLCHAIN>\n\tmake\n\tmake install\n\nNote that once libdispatch is installed into a Swift toolchain, that\ntoolchain cannot be used to compile libdispatch again (you must 'make uninstall'\nlibdispatch from the toolchain before using it to rebuild libdispatch).\n\nYou can also use the build-toolchain script to create a toolchain\nthat includes libdispatch on Linux:\n\n1. Add libdispatch and install-libdispatch lines to ./swift/utils/build-presets.ini under `[preset: buildbot_linux]` section, as following:\n\n    ```\n    [preset: buildbot_linux]\n    mixin-preset=mixin_linux_installation\n    build-subdir=buildbot_linux\n    lldb\n    release\n    test\n    validation-test\n    long-test\n    libdispatch\n    foundation\n    lit-args=-v\n    dash-dash\n\n    install-libdispatch\n    install-foundation\n    reconfigure\n    ```\n\n2. Run:\n\n    ```\n    ./swift/utils/build-toolchain local.swift\n    ```\n\nNote that adding libdispatch in build-presets.ini is for Linux only as Swift on macOS platforms uses the system installed libdispatch, so its not required.\n\n### Building and installing on OS X\n\nThe following configure options may be of general interest:\n\n`--with-apple-libpthread-source`\n\nSpecify the path to Apple's libpthread package, so that appropriate headers\n\tcan be found and used.\n\n`--with-apple-libplatform-source`\n\nSpecify the path to Apple's libplatform package, so that appropriate headers\n\tcan be found and used.\n\n`--with-apple-xnu-source`\n\nSpecify the path to Apple's XNU package, so that appropriate headers can be\n\tfound and used.\n\n`--with-blocks-runtime`\n\nOn systems where -fblocks is supported, specify an additional library path in which libBlocksRuntime can be found. This is not required on OS X, where the Blocks runtime is included in libSystem, but is required on FreeBSD.\n\nThe following options are likely to only be useful when building libdispatch on\nOS X as a replacement for /usr/lib/system/libdispatch.dylib:\n\n`--disable-libdispatch-init-constructor`\n\nDo not tag libdispatch's init routine as __constructor, in which case it must be run manually before libdispatch routines can be called. This is the default when building on OS X. For /usr/lib/system/libdispatch.dylib the init routine is called automatically during process start.\n\n`--enable-apple-tsd-optimizations`\n\nUse a non-portable allocation scheme for pthread per-thread data (TSD) keys when building libdispatch for /usr/lib/system on OS X.  This should not be used on other OS's, or on OS X when building a stand-alone library.\n\n#### Typical configuration commands\n\nThe following command lines create the configuration required to build\nlibdispatch for /usr/lib/system on OS X El Capitan:\n\n\tclangpath=$(dirname `xcrun --find clang`)\n\tsudo mkdir -p \"$clangpath/../local/lib/clang/enable_objc_gc\"\n\tLIBTOOLIZE=glibtoolize sh autogen.sh\n\tcflags='-arch x86_64 -arch i386 -g -Os'\n\t./configure CFLAGS=\"$cflags\" OBJCFLAGS=\"$cflags\" CXXFLAGS=\"$cflags\" \\\n\t\t--prefix=/usr --libdir=/usr/lib/system --disable-static \\\n\t\t--enable-apple-tsd-optimizations \\\n\t\t--with-apple-libpthread-source=/path/to/10.11.0/libpthread-137.1.1 \\\n\t\t--with-apple-libplatform-source=/path/to/10.11.0/libplatform-73.1.1 \\\n\t\t--with-apple-xnu-source=/path/to/10.11.0/xnu-3247.1.106 \\\n\tmake check\n\n### Building and installing for FreeBSD\n\nTypical configuration line for FreeBSD 8.x and 9.x to build libdispatch with\nclang and blocks support:\n\n    ```\n    cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DWITH_BLOCKS_RUNTIME=/usr/local/lib <path-to-source>\n    ninja\n    ninja test\n    ```\n\n### Building for android\n\nNote that this assumes that you are building on Linux.  It requires that you\nhave the android NDK available.  It has been tested against API Level 21.\n\n    ```\n    cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=21 -DCMAKE_ANDROID_NDK=<path to android NDK> <path-to-source>\n    ninja\n    ```\n\n### Building and installing for Linux\n\nNote that libdispatch development and testing is done only\non Ubuntu; currently supported versions are 14.04, 15.10 and 16.04.\n\n1. The first thing to do is install required packages:\n\n    `sudo apt-get install cmake ninja-build clang systemtap-sdt-dev libbsd-dev linux-libc-dev`\n\n    Note: compiling libdispatch requires clang 3.8 or better and\nthe gold linker. If the default clang on your Ubuntu version is\ntoo old, see http://apt.llvm.org/ to install a newer version.\nOn older Ubuntu releases, you may need to install binutils-gold\nto get the gold linker.\n\n2. Build\n\n    ```\n    cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ <path-to-source>\n    ninja\n    ninja install\n    ```\n\n","source":"codesource/oc_workspace/libdispatch-1008.200.78/INSTALL.md","raw":"## Grand Central Dispatch (GCD)\n\nGCD is a concurrent programming framework first shipped with Mac OS X Snow\nLeopard.  This package is an open source bundling of libdispatch, the core\nuser space library implementing GCD.  At the time of writing, support for\nthe BSD kqueue API, and specifically extensions introduced in Mac OS X Snow\nLeopard and FreeBSD 9-CURRENT, are required to use libdispatch.  Linux is\nsupported, but requires specific packages to be installed (see Linux\nsection at the end of the file). Other systems are currently unsupported.\n\n### Configuring and installing libdispatch (general comments)\n\nGCD is built using autoconf, automake, and libtool, and has a number of\ncompile-time configuration options that should be reviewed before starting.\nAn uncustomized install of the C-API to libdispatch requires:\n\n\tsh autogen.sh\n\t./configure\n\tmake\n\tmake install\n\nlibdispatch can be optionally built to include a Swift API. This requires a\nSwift toolchain to compile the Swift code in libdispatch and can be done\nin two possible scenarios.\n\nIf you are building your own Swift toolchain from source, then you should build\nlibdispatch simply by giving additional arguments to swift/utils/build-script:\n\n    ./swift/utils/build-script --libdispatch -- --install-libdispatch\n\nTo build libdispatch using a pre-built Swift toolchain and install libdispatch\ninto that toolchain (to allow that toolchain to compile Swift code containing\n\"import Dispatch\") requires:\n\n    sh autogen.sh\n\t./configure --with-swift-toolchain=<PATH_TO_SWIFT_TOOLCHAIN> --prefix=<PATH_TO_SWIFT_TOOLCHAIN>\n\tmake\n\tmake install\n\nNote that once libdispatch is installed into a Swift toolchain, that\ntoolchain cannot be used to compile libdispatch again (you must 'make uninstall'\nlibdispatch from the toolchain before using it to rebuild libdispatch).\n\nYou can also use the build-toolchain script to create a toolchain\nthat includes libdispatch on Linux:\n\n1. Add libdispatch and install-libdispatch lines to ./swift/utils/build-presets.ini under `[preset: buildbot_linux]` section, as following:\n\n    ```\n    [preset: buildbot_linux]\n    mixin-preset=mixin_linux_installation\n    build-subdir=buildbot_linux\n    lldb\n    release\n    test\n    validation-test\n    long-test\n    libdispatch\n    foundation\n    lit-args=-v\n    dash-dash\n\n    install-libdispatch\n    install-foundation\n    reconfigure\n    ```\n\n2. Run:\n\n    ```\n    ./swift/utils/build-toolchain local.swift\n    ```\n\nNote that adding libdispatch in build-presets.ini is for Linux only as Swift on macOS platforms uses the system installed libdispatch, so its not required.\n\n### Building and installing on OS X\n\nThe following configure options may be of general interest:\n\n`--with-apple-libpthread-source`\n\nSpecify the path to Apple's libpthread package, so that appropriate headers\n\tcan be found and used.\n\n`--with-apple-libplatform-source`\n\nSpecify the path to Apple's libplatform package, so that appropriate headers\n\tcan be found and used.\n\n`--with-apple-xnu-source`\n\nSpecify the path to Apple's XNU package, so that appropriate headers can be\n\tfound and used.\n\n`--with-blocks-runtime`\n\nOn systems where -fblocks is supported, specify an additional library path in which libBlocksRuntime can be found. This is not required on OS X, where the Blocks runtime is included in libSystem, but is required on FreeBSD.\n\nThe following options are likely to only be useful when building libdispatch on\nOS X as a replacement for /usr/lib/system/libdispatch.dylib:\n\n`--disable-libdispatch-init-constructor`\n\nDo not tag libdispatch's init routine as __constructor, in which case it must be run manually before libdispatch routines can be called. This is the default when building on OS X. For /usr/lib/system/libdispatch.dylib the init routine is called automatically during process start.\n\n`--enable-apple-tsd-optimizations`\n\nUse a non-portable allocation scheme for pthread per-thread data (TSD) keys when building libdispatch for /usr/lib/system on OS X.  This should not be used on other OS's, or on OS X when building a stand-alone library.\n\n#### Typical configuration commands\n\nThe following command lines create the configuration required to build\nlibdispatch for /usr/lib/system on OS X El Capitan:\n\n\tclangpath=$(dirname `xcrun --find clang`)\n\tsudo mkdir -p \"$clangpath/../local/lib/clang/enable_objc_gc\"\n\tLIBTOOLIZE=glibtoolize sh autogen.sh\n\tcflags='-arch x86_64 -arch i386 -g -Os'\n\t./configure CFLAGS=\"$cflags\" OBJCFLAGS=\"$cflags\" CXXFLAGS=\"$cflags\" \\\n\t\t--prefix=/usr --libdir=/usr/lib/system --disable-static \\\n\t\t--enable-apple-tsd-optimizations \\\n\t\t--with-apple-libpthread-source=/path/to/10.11.0/libpthread-137.1.1 \\\n\t\t--with-apple-libplatform-source=/path/to/10.11.0/libplatform-73.1.1 \\\n\t\t--with-apple-xnu-source=/path/to/10.11.0/xnu-3247.1.106 \\\n\tmake check\n\n### Building and installing for FreeBSD\n\nTypical configuration line for FreeBSD 8.x and 9.x to build libdispatch with\nclang and blocks support:\n\n    ```\n    cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DWITH_BLOCKS_RUNTIME=/usr/local/lib <path-to-source>\n    ninja\n    ninja test\n    ```\n\n### Building for android\n\nNote that this assumes that you are building on Linux.  It requires that you\nhave the android NDK available.  It has been tested against API Level 21.\n\n    ```\n    cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=21 -DCMAKE_ANDROID_NDK=<path to android NDK> <path-to-source>\n    ninja\n    ```\n\n### Building and installing for Linux\n\nNote that libdispatch development and testing is done only\non Ubuntu; currently supported versions are 14.04, 15.10 and 16.04.\n\n1. The first thing to do is install required packages:\n\n    `sudo apt-get install cmake ninja-build clang systemtap-sdt-dev libbsd-dev linux-libc-dev`\n\n    Note: compiling libdispatch requires clang 3.8 or better and\nthe gold linker. If the default clang on your Ubuntu version is\ntoo old, see http://apt.llvm.org/ to install a newer version.\nOn older Ubuntu releases, you may need to install binutils-gold\nto get the gold linker.\n\n2. Build\n\n    ```\n    cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ <path-to-source>\n    ninja\n    ninja install\n    ```\n\n","date":"2019-02-20T08:41:29.749Z","updated":"2017-10-19T02:42:36.000Z","path":"codesource/oc_workspace/libdispatch-1008.200.78/INSTALL.html","title":"","comments":1,"layout":"page","_id":"cjswppd4s003iqioj3i8nathk","content":"<h2 id=\"Grand-Central-Dispatch-GCD\"><a href=\"#Grand-Central-Dispatch-GCD\" class=\"headerlink\" title=\"Grand Central Dispatch (GCD)\"></a>Grand Central Dispatch (GCD)</h2><p>GCD is a concurrent programming framework first shipped with Mac OS X Snow<br>Leopard.  This package is an open source bundling of libdispatch, the core<br>user space library implementing GCD.  At the time of writing, support for<br>the BSD kqueue API, and specifically extensions introduced in Mac OS X Snow<br>Leopard and FreeBSD 9-CURRENT, are required to use libdispatch.  Linux is<br>supported, but requires specific packages to be installed (see Linux<br>section at the end of the file). Other systems are currently unsupported.</p>\n<h3 id=\"Configuring-and-installing-libdispatch-general-comments\"><a href=\"#Configuring-and-installing-libdispatch-general-comments\" class=\"headerlink\" title=\"Configuring and installing libdispatch (general comments)\"></a>Configuring and installing libdispatch (general comments)</h3><p>GCD is built using autoconf, automake, and libtool, and has a number of<br>compile-time configuration options that should be reviewed before starting.<br>An uncustomized install of the C-API to libdispatch requires:</p>\n<pre><code>sh autogen.sh\n./configure\nmake\nmake install\n</code></pre><p>libdispatch can be optionally built to include a Swift API. This requires a<br>Swift toolchain to compile the Swift code in libdispatch and can be done<br>in two possible scenarios.</p>\n<p>If you are building your own Swift toolchain from source, then you should build<br>libdispatch simply by giving additional arguments to swift/utils/build-script:</p>\n<pre><code>./swift/utils/build-script --libdispatch -- --install-libdispatch\n</code></pre><p>To build libdispatch using a pre-built Swift toolchain and install libdispatch<br>into that toolchain (to allow that toolchain to compile Swift code containing<br>“import Dispatch”) requires:</p>\n<pre><code>sh autogen.sh\n./configure --with-swift-toolchain=&lt;PATH_TO_SWIFT_TOOLCHAIN&gt; --prefix=&lt;PATH_TO_SWIFT_TOOLCHAIN&gt;\nmake\nmake install\n</code></pre><p>Note that once libdispatch is installed into a Swift toolchain, that<br>toolchain cannot be used to compile libdispatch again (you must ‘make uninstall’<br>libdispatch from the toolchain before using it to rebuild libdispatch).</p>\n<p>You can also use the build-toolchain script to create a toolchain<br>that includes libdispatch on Linux:</p>\n<ol>\n<li><p>Add libdispatch and install-libdispatch lines to ./swift/utils/build-presets.ini under <code>[preset: buildbot_linux]</code> section, as following:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[preset: buildbot_linux]</span><br><span class=\"line\">mixin-preset=mixin_linux_installation</span><br><span class=\"line\">build-subdir=buildbot_linux</span><br><span class=\"line\">lldb</span><br><span class=\"line\">release</span><br><span class=\"line\">test</span><br><span class=\"line\">validation-test</span><br><span class=\"line\">long-test</span><br><span class=\"line\">libdispatch</span><br><span class=\"line\">foundation</span><br><span class=\"line\">lit-args=-v</span><br><span class=\"line\">dash-dash</span><br><span class=\"line\"></span><br><span class=\"line\">install-libdispatch</span><br><span class=\"line\">install-foundation</span><br><span class=\"line\">reconfigure</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Run:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./swift/utils/build-toolchain local.swift</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>Note that adding libdispatch in build-presets.ini is for Linux only as Swift on macOS platforms uses the system installed libdispatch, so its not required.</p>\n<h3 id=\"Building-and-installing-on-OS-X\"><a href=\"#Building-and-installing-on-OS-X\" class=\"headerlink\" title=\"Building and installing on OS X\"></a>Building and installing on OS X</h3><p>The following configure options may be of general interest:</p>\n<p><code>--with-apple-libpthread-source</code></p>\n<p>Specify the path to Apple’s libpthread package, so that appropriate headers<br>    can be found and used.</p>\n<p><code>--with-apple-libplatform-source</code></p>\n<p>Specify the path to Apple’s libplatform package, so that appropriate headers<br>    can be found and used.</p>\n<p><code>--with-apple-xnu-source</code></p>\n<p>Specify the path to Apple’s XNU package, so that appropriate headers can be<br>    found and used.</p>\n<p><code>--with-blocks-runtime</code></p>\n<p>On systems where -fblocks is supported, specify an additional library path in which libBlocksRuntime can be found. This is not required on OS X, where the Blocks runtime is included in libSystem, but is required on FreeBSD.</p>\n<p>The following options are likely to only be useful when building libdispatch on<br>OS X as a replacement for /usr/lib/system/libdispatch.dylib:</p>\n<p><code>--disable-libdispatch-init-constructor</code></p>\n<p>Do not tag libdispatch’s init routine as __constructor, in which case it must be run manually before libdispatch routines can be called. This is the default when building on OS X. For /usr/lib/system/libdispatch.dylib the init routine is called automatically during process start.</p>\n<p><code>--enable-apple-tsd-optimizations</code></p>\n<p>Use a non-portable allocation scheme for pthread per-thread data (TSD) keys when building libdispatch for /usr/lib/system on OS X.  This should not be used on other OS’s, or on OS X when building a stand-alone library.</p>\n<h4 id=\"Typical-configuration-commands\"><a href=\"#Typical-configuration-commands\" class=\"headerlink\" title=\"Typical configuration commands\"></a>Typical configuration commands</h4><p>The following command lines create the configuration required to build<br>libdispatch for /usr/lib/system on OS X El Capitan:</p>\n<pre><code>clangpath=$(dirname `xcrun --find clang`)\nsudo mkdir -p &quot;$clangpath/../local/lib/clang/enable_objc_gc&quot;\nLIBTOOLIZE=glibtoolize sh autogen.sh\ncflags=&apos;-arch x86_64 -arch i386 -g -Os&apos;\n./configure CFLAGS=&quot;$cflags&quot; OBJCFLAGS=&quot;$cflags&quot; CXXFLAGS=&quot;$cflags&quot; \\\n    --prefix=/usr --libdir=/usr/lib/system --disable-static \\\n    --enable-apple-tsd-optimizations \\\n    --with-apple-libpthread-source=/path/to/10.11.0/libpthread-137.1.1 \\\n    --with-apple-libplatform-source=/path/to/10.11.0/libplatform-73.1.1 \\\n    --with-apple-xnu-source=/path/to/10.11.0/xnu-3247.1.106 \\\nmake check\n</code></pre><h3 id=\"Building-and-installing-for-FreeBSD\"><a href=\"#Building-and-installing-for-FreeBSD\" class=\"headerlink\" title=\"Building and installing for FreeBSD\"></a>Building and installing for FreeBSD</h3><p>Typical configuration line for FreeBSD 8.x and 9.x to build libdispatch with<br>clang and blocks support:</p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DWITH_BLOCKS_RUNTIME=/usr/local/lib &lt;path-to-source&gt;</span><br><span class=\"line\">ninja</span><br><span class=\"line\">ninja test</span><br></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Building-for-android\"><a href=\"#Building-for-android\" class=\"headerlink\" title=\"Building for android\"></a>Building for android</h3><p>Note that this assumes that you are building on Linux.  It requires that you<br>have the android NDK available.  It has been tested against API Level 21.</p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=21 -DCMAKE_ANDROID_NDK=&lt;path to android NDK&gt; &lt;path-to-source&gt;</span><br><span class=\"line\">ninja</span><br></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Building-and-installing-for-Linux\"><a href=\"#Building-and-installing-for-Linux\" class=\"headerlink\" title=\"Building and installing for Linux\"></a>Building and installing for Linux</h3><p>Note that libdispatch development and testing is done only<br>on Ubuntu; currently supported versions are 14.04, 15.10 and 16.04.</p>\n<ol>\n<li><p>The first thing to do is install required packages:</p>\n<p> <code>sudo apt-get install cmake ninja-build clang systemtap-sdt-dev libbsd-dev linux-libc-dev</code></p>\n<p> Note: compiling libdispatch requires clang 3.8 or better and<br>the gold linker. If the default clang on your Ubuntu version is<br>too old, see <a href=\"http://apt.llvm.org/\" target=\"_blank\" rel=\"noopener\">http://apt.llvm.org/</a> to install a newer version.<br>On older Ubuntu releases, you may need to install binutils-gold<br>to get the gold linker.</p>\n</li>\n<li><p>Build</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ &lt;path-to-source&gt;</span><br><span class=\"line\">ninja</span><br><span class=\"line\">ninja install</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Grand-Central-Dispatch-GCD\"><a href=\"#Grand-Central-Dispatch-GCD\" class=\"headerlink\" title=\"Grand Central Dispatch (GCD)\"></a>Grand Central Dispatch (GCD)</h2><p>GCD is a concurrent programming framework first shipped with Mac OS X Snow<br>Leopard.  This package is an open source bundling of libdispatch, the core<br>user space library implementing GCD.  At the time of writing, support for<br>the BSD kqueue API, and specifically extensions introduced in Mac OS X Snow<br>Leopard and FreeBSD 9-CURRENT, are required to use libdispatch.  Linux is<br>supported, but requires specific packages to be installed (see Linux<br>section at the end of the file). Other systems are currently unsupported.</p>\n<h3 id=\"Configuring-and-installing-libdispatch-general-comments\"><a href=\"#Configuring-and-installing-libdispatch-general-comments\" class=\"headerlink\" title=\"Configuring and installing libdispatch (general comments)\"></a>Configuring and installing libdispatch (general comments)</h3><p>GCD is built using autoconf, automake, and libtool, and has a number of<br>compile-time configuration options that should be reviewed before starting.<br>An uncustomized install of the C-API to libdispatch requires:</p>\n<pre><code>sh autogen.sh\n./configure\nmake\nmake install\n</code></pre><p>libdispatch can be optionally built to include a Swift API. This requires a<br>Swift toolchain to compile the Swift code in libdispatch and can be done<br>in two possible scenarios.</p>\n<p>If you are building your own Swift toolchain from source, then you should build<br>libdispatch simply by giving additional arguments to swift/utils/build-script:</p>\n<pre><code>./swift/utils/build-script --libdispatch -- --install-libdispatch\n</code></pre><p>To build libdispatch using a pre-built Swift toolchain and install libdispatch<br>into that toolchain (to allow that toolchain to compile Swift code containing<br>“import Dispatch”) requires:</p>\n<pre><code>sh autogen.sh\n./configure --with-swift-toolchain=&lt;PATH_TO_SWIFT_TOOLCHAIN&gt; --prefix=&lt;PATH_TO_SWIFT_TOOLCHAIN&gt;\nmake\nmake install\n</code></pre><p>Note that once libdispatch is installed into a Swift toolchain, that<br>toolchain cannot be used to compile libdispatch again (you must ‘make uninstall’<br>libdispatch from the toolchain before using it to rebuild libdispatch).</p>\n<p>You can also use the build-toolchain script to create a toolchain<br>that includes libdispatch on Linux:</p>\n<ol>\n<li><p>Add libdispatch and install-libdispatch lines to ./swift/utils/build-presets.ini under <code>[preset: buildbot_linux]</code> section, as following:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[preset: buildbot_linux]</span><br><span class=\"line\">mixin-preset=mixin_linux_installation</span><br><span class=\"line\">build-subdir=buildbot_linux</span><br><span class=\"line\">lldb</span><br><span class=\"line\">release</span><br><span class=\"line\">test</span><br><span class=\"line\">validation-test</span><br><span class=\"line\">long-test</span><br><span class=\"line\">libdispatch</span><br><span class=\"line\">foundation</span><br><span class=\"line\">lit-args=-v</span><br><span class=\"line\">dash-dash</span><br><span class=\"line\"></span><br><span class=\"line\">install-libdispatch</span><br><span class=\"line\">install-foundation</span><br><span class=\"line\">reconfigure</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Run:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./swift/utils/build-toolchain local.swift</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>Note that adding libdispatch in build-presets.ini is for Linux only as Swift on macOS platforms uses the system installed libdispatch, so its not required.</p>\n<h3 id=\"Building-and-installing-on-OS-X\"><a href=\"#Building-and-installing-on-OS-X\" class=\"headerlink\" title=\"Building and installing on OS X\"></a>Building and installing on OS X</h3><p>The following configure options may be of general interest:</p>\n<p><code>--with-apple-libpthread-source</code></p>\n<p>Specify the path to Apple’s libpthread package, so that appropriate headers<br>    can be found and used.</p>\n<p><code>--with-apple-libplatform-source</code></p>\n<p>Specify the path to Apple’s libplatform package, so that appropriate headers<br>    can be found and used.</p>\n<p><code>--with-apple-xnu-source</code></p>\n<p>Specify the path to Apple’s XNU package, so that appropriate headers can be<br>    found and used.</p>\n<p><code>--with-blocks-runtime</code></p>\n<p>On systems where -fblocks is supported, specify an additional library path in which libBlocksRuntime can be found. This is not required on OS X, where the Blocks runtime is included in libSystem, but is required on FreeBSD.</p>\n<p>The following options are likely to only be useful when building libdispatch on<br>OS X as a replacement for /usr/lib/system/libdispatch.dylib:</p>\n<p><code>--disable-libdispatch-init-constructor</code></p>\n<p>Do not tag libdispatch’s init routine as __constructor, in which case it must be run manually before libdispatch routines can be called. This is the default when building on OS X. For /usr/lib/system/libdispatch.dylib the init routine is called automatically during process start.</p>\n<p><code>--enable-apple-tsd-optimizations</code></p>\n<p>Use a non-portable allocation scheme for pthread per-thread data (TSD) keys when building libdispatch for /usr/lib/system on OS X.  This should not be used on other OS’s, or on OS X when building a stand-alone library.</p>\n<h4 id=\"Typical-configuration-commands\"><a href=\"#Typical-configuration-commands\" class=\"headerlink\" title=\"Typical configuration commands\"></a>Typical configuration commands</h4><p>The following command lines create the configuration required to build<br>libdispatch for /usr/lib/system on OS X El Capitan:</p>\n<pre><code>clangpath=$(dirname `xcrun --find clang`)\nsudo mkdir -p &quot;$clangpath/../local/lib/clang/enable_objc_gc&quot;\nLIBTOOLIZE=glibtoolize sh autogen.sh\ncflags=&apos;-arch x86_64 -arch i386 -g -Os&apos;\n./configure CFLAGS=&quot;$cflags&quot; OBJCFLAGS=&quot;$cflags&quot; CXXFLAGS=&quot;$cflags&quot; \\\n    --prefix=/usr --libdir=/usr/lib/system --disable-static \\\n    --enable-apple-tsd-optimizations \\\n    --with-apple-libpthread-source=/path/to/10.11.0/libpthread-137.1.1 \\\n    --with-apple-libplatform-source=/path/to/10.11.0/libplatform-73.1.1 \\\n    --with-apple-xnu-source=/path/to/10.11.0/xnu-3247.1.106 \\\nmake check\n</code></pre><h3 id=\"Building-and-installing-for-FreeBSD\"><a href=\"#Building-and-installing-for-FreeBSD\" class=\"headerlink\" title=\"Building and installing for FreeBSD\"></a>Building and installing for FreeBSD</h3><p>Typical configuration line for FreeBSD 8.x and 9.x to build libdispatch with<br>clang and blocks support:</p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DWITH_BLOCKS_RUNTIME=/usr/local/lib &lt;path-to-source&gt;</span><br><span class=\"line\">ninja</span><br><span class=\"line\">ninja test</span><br></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Building-for-android\"><a href=\"#Building-for-android\" class=\"headerlink\" title=\"Building for android\"></a>Building for android</h3><p>Note that this assumes that you are building on Linux.  It requires that you<br>have the android NDK available.  It has been tested against API Level 21.</p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=21 -DCMAKE_ANDROID_NDK=&lt;path to android NDK&gt; &lt;path-to-source&gt;</span><br><span class=\"line\">ninja</span><br></pre></td></tr></table></figure>\n</code></pre><h3 id=\"Building-and-installing-for-Linux\"><a href=\"#Building-and-installing-for-Linux\" class=\"headerlink\" title=\"Building and installing for Linux\"></a>Building and installing for Linux</h3><p>Note that libdispatch development and testing is done only<br>on Ubuntu; currently supported versions are 14.04, 15.10 and 16.04.</p>\n<ol>\n<li><p>The first thing to do is install required packages:</p>\n<p> <code>sudo apt-get install cmake ninja-build clang systemtap-sdt-dev libbsd-dev linux-libc-dev</code></p>\n<p> Note: compiling libdispatch requires clang 3.8 or better and<br>the gold linker. If the default clang on your Ubuntu version is<br>too old, see <a href=\"http://apt.llvm.org/\" target=\"_blank\" rel=\"noopener\">http://apt.llvm.org/</a> to install a newer version.<br>On older Ubuntu releases, you may need to install binutils-gold<br>to get the gold linker.</p>\n</li>\n<li><p>Build</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ &lt;path-to-source&gt;</span><br><span class=\"line\">ninja</span><br><span class=\"line\">ninja install</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"_content":"{\n  \"info\" : {\n    \"version\" : 1,\n    \"author\" : \"xcode\"\n  }\n}","source":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Assets.xcassets/Contents.json","raw":"{\n  \"info\" : {\n    \"version\" : 1,\n    \"author\" : \"xcode\"\n  }\n}","date":"2019-02-20T09:08:47.979Z","updated":"2019-02-20T09:08:47.979Z","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Assets.xcassets/Contents.json","layout":"false","title":"","comments":1,"_id":"cjswppd6g003jqiojnmpus5qf","content":"{\"info\":{\"version\":1,\"author\":\"xcode\"}}","site":{"data":{}},"excerpt":"","more":"{\"info\":{\"version\":1,\"author\":\"xcode\"}}"},{"_content":"{\n  \"images\" : [\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"20x20\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"20x20\",\n      \"scale\" : \"3x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"29x29\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"29x29\",\n      \"scale\" : \"3x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"40x40\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"40x40\",\n      \"scale\" : \"3x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"60x60\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"60x60\",\n      \"scale\" : \"3x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"20x20\",\n      \"scale\" : \"1x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"20x20\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"29x29\",\n      \"scale\" : \"1x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"29x29\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"40x40\",\n      \"scale\" : \"1x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"40x40\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"76x76\",\n      \"scale\" : \"1x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"76x76\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"83.5x83.5\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"ios-marketing\",\n      \"size\" : \"1024x1024\",\n      \"scale\" : \"1x\"\n    }\n  ],\n  \"info\" : {\n    \"version\" : 1,\n    \"author\" : \"xcode\"\n  }\n}","source":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Assets.xcassets/AppIcon.appiconset/Contents.json","raw":"{\n  \"images\" : [\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"20x20\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"20x20\",\n      \"scale\" : \"3x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"29x29\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"29x29\",\n      \"scale\" : \"3x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"40x40\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"40x40\",\n      \"scale\" : \"3x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"60x60\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"iphone\",\n      \"size\" : \"60x60\",\n      \"scale\" : \"3x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"20x20\",\n      \"scale\" : \"1x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"20x20\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"29x29\",\n      \"scale\" : \"1x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"29x29\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"40x40\",\n      \"scale\" : \"1x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"40x40\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"76x76\",\n      \"scale\" : \"1x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"76x76\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"ipad\",\n      \"size\" : \"83.5x83.5\",\n      \"scale\" : \"2x\"\n    },\n    {\n      \"idiom\" : \"ios-marketing\",\n      \"size\" : \"1024x1024\",\n      \"scale\" : \"1x\"\n    }\n  ],\n  \"info\" : {\n    \"version\" : 1,\n    \"author\" : \"xcode\"\n  }\n}","date":"2019-02-20T09:08:49.782Z","updated":"2019-02-20T09:08:49.781Z","path":"codesource/oc_workspace/RunloopWorkspace/RunloopWorkspace/Assets.xcassets/AppIcon.appiconset/Contents.json","layout":"false","title":"","comments":1,"_id":"cjswppd7f003kqiojypt1vwvl","content":"{\"images\":[{\"idiom\":\"iphone\",\"size\":\"20x20\",\"scale\":\"2x\"},{\"idiom\":\"iphone\",\"size\":\"20x20\",\"scale\":\"3x\"},{\"idiom\":\"iphone\",\"size\":\"29x29\",\"scale\":\"2x\"},{\"idiom\":\"iphone\",\"size\":\"29x29\",\"scale\":\"3x\"},{\"idiom\":\"iphone\",\"size\":\"40x40\",\"scale\":\"2x\"},{\"idiom\":\"iphone\",\"size\":\"40x40\",\"scale\":\"3x\"},{\"idiom\":\"iphone\",\"size\":\"60x60\",\"scale\":\"2x\"},{\"idiom\":\"iphone\",\"size\":\"60x60\",\"scale\":\"3x\"},{\"idiom\":\"ipad\",\"size\":\"20x20\",\"scale\":\"1x\"},{\"idiom\":\"ipad\",\"size\":\"20x20\",\"scale\":\"2x\"},{\"idiom\":\"ipad\",\"size\":\"29x29\",\"scale\":\"1x\"},{\"idiom\":\"ipad\",\"size\":\"29x29\",\"scale\":\"2x\"},{\"idiom\":\"ipad\",\"size\":\"40x40\",\"scale\":\"1x\"},{\"idiom\":\"ipad\",\"size\":\"40x40\",\"scale\":\"2x\"},{\"idiom\":\"ipad\",\"size\":\"76x76\",\"scale\":\"1x\"},{\"idiom\":\"ipad\",\"size\":\"76x76\",\"scale\":\"2x\"},{\"idiom\":\"ipad\",\"size\":\"83.5x83.5\",\"scale\":\"2x\"},{\"idiom\":\"ios-marketing\",\"size\":\"1024x1024\",\"scale\":\"1x\"}],\"info\":{\"version\":1,\"author\":\"xcode\"}}","site":{"data":{}},"excerpt":"","more":"{\"images\":[{\"idiom\":\"iphone\",\"size\":\"20x20\",\"scale\":\"2x\"},{\"idiom\":\"iphone\",\"size\":\"20x20\",\"scale\":\"3x\"},{\"idiom\":\"iphone\",\"size\":\"29x29\",\"scale\":\"2x\"},{\"idiom\":\"iphone\",\"size\":\"29x29\",\"scale\":\"3x\"},{\"idiom\":\"iphone\",\"size\":\"40x40\",\"scale\":\"2x\"},{\"idiom\":\"iphone\",\"size\":\"40x40\",\"scale\":\"3x\"},{\"idiom\":\"iphone\",\"size\":\"60x60\",\"scale\":\"2x\"},{\"idiom\":\"iphone\",\"size\":\"60x60\",\"scale\":\"3x\"},{\"idiom\":\"ipad\",\"size\":\"20x20\",\"scale\":\"1x\"},{\"idiom\":\"ipad\",\"size\":\"20x20\",\"scale\":\"2x\"},{\"idiom\":\"ipad\",\"size\":\"29x29\",\"scale\":\"1x\"},{\"idiom\":\"ipad\",\"size\":\"29x29\",\"scale\":\"2x\"},{\"idiom\":\"ipad\",\"size\":\"40x40\",\"scale\":\"1x\"},{\"idiom\":\"ipad\",\"size\":\"40x40\",\"scale\":\"2x\"},{\"idiom\":\"ipad\",\"size\":\"76x76\",\"scale\":\"1x\"},{\"idiom\":\"ipad\",\"size\":\"76x76\",\"scale\":\"2x\"},{\"idiom\":\"ipad\",\"size\":\"83.5x83.5\",\"scale\":\"2x\"},{\"idiom\":\"ios-marketing\",\"size\":\"1024x1024\",\"scale\":\"1x\"}],\"info\":{\"version\":1,\"author\":\"xcode\"}}"}],"Post":[{"title":"AR","date":"2019-02-15T02:50:16.000Z","_content":"\nAR （augmented reality）增强现实 《ARKit开发实践》\n详： 把现实世界和虚拟内容融合到一起，形成了各种效果。\n\n有关的几个R： VR（虚拟现实） MR（混合现实） AR（增强现实）\n\n\n\t\t\t\t   \t\t\t混合现实\n\t<—————————————————— mixed reality ———————————————————>\n\t现实环境        增强现实        增强虚拟 \t\t虚拟环境\n    real \t\t   augmented      augmented\t\tvirtual\n    environment    reality   \tvirtuality \t\tenvironment\n\n\n<h3>结构组成：</h3>\n![AR有关实现的结构](../../../../asset/Snip20190215_6.png)\nkey: \n1) 如何获取用户的位姿势（位置和角度）\n2）如何获取用户的交互指令\n3）如何显示叠加后的场景内容\n\n<h4>SLAM</h4>\nsimultaneous localization and mapping 及时廷尉与地图构建\n是值一个搭载传感器（IMU或者摄像头）\n主要解决问题： 定位 + 地图构建\n地位：  估算自身在环境中的位置\n地图构建： 识别所处环境的模型【也就是在定位的基础上构建环境的增量式地图】\n\nSLAM分为两类： （1）纯视觉 （2）视觉惯性传感器（IMU）\n\n\n1）视觉SLAM （visual SLAM）\n只搭载了相机，只能够获取图像信息，从图像中获取特征带你，然后进行特征匹配，以此来估算用户的位姿。【相机： 值的单目相机，双目相机，深度摄像头】\n\n流程：\n（1）信息的采集和读取  【通过摄像头擦剂到图像序列或者视频流】\n（2）视觉里程计（前端） 【相当于整个流程的前端，分析相邻帧图像之间的变换关系，利用图像序列或者视频流来估算相机的运动，并构造场景的控件结构，， 主要讨论相邻之间的运动关系】\n（3）后台优化 【传感器等因素影响，会出现误差（噪声），这一步可以得到全局一直的轨迹和地图】\n（4）闭环检测 【主要解决位置随时间漂移的问题】\n（5）建图  【根据后端优化的轨迹，实时简历与任务要求对应的地图】\n\n\n2） 视觉 + IMU SLAM\nIMU可以和摄像头行程互补\n（1）IMU测量设备的加速度和角速度，测量值会会出现漂移，短时间的快速移动，IMU估算的效果会很有效\n（2）IMU在相机画面方面漂移情况会少很多； 设备放在桌子上，IMU估算会出现漂移，相机画面也不会变，纯粹视觉估算的设备位姿也不会变，这个时候摄像头估算的数据可以对IMU估算的数据进行校正。\n（3）设备固定不动，场景发生变化；这个时候摄像机会发生变化，摄像头会认为设备在移动。\n\n视觉 + IMU SLAM 形式称作： VIO（visual inertial odometry）视觉惯性里程计\n\nAR历史（略过）\nAR发展现状：\n当前AR开发基本采用Unity 3D游戏引擎引入AR SDK ，同时大部分SDK可以直接接入Android 、iOS 移动端进行开发。\n\n（1）google class 谷歌眼睛\n（2）Hololens 微软的产品\n（3）Magic Leap \n（4）Impression Pi \n（5）HoloSEER\n（6）HIAR Glasses\n（7）Leap Motion\n\nAR软件：\n（1）ARToolKit 奈良先端科学技术学院的加藤宏开发\n（2）Metaio  初创公司开发\n（3）vuforia 高通推出\n（4）Wikitude 移动增强技术提供商Wikitude开发\n（5）亮风台HiAR 国内AR sdk提供商\n（6）视辰 EasyAR 视辰科技开发\n\n\nAR内容\nGoogle Tango引擎（2014） ARCore(2017） HoloLens (MR 2016)\nFacebook AR开发平台爱camera effects platform \napple 收购AR引擎开发商Metaio ， 引入ATeamAR 程序开发包\n\n（1）原深感摄像头（trueDepth camera）\n（2）设计跟踪、场景理解、集合渲染、人脸跟踪\n\n\n\n","source":"_posts/AR.md","raw":"---\ntitle: AR\ndate: 2019-02-15 10:50:16\ntags: AR\ncategories: AR\n---\n\nAR （augmented reality）增强现实 《ARKit开发实践》\n详： 把现实世界和虚拟内容融合到一起，形成了各种效果。\n\n有关的几个R： VR（虚拟现实） MR（混合现实） AR（增强现实）\n\n\n\t\t\t\t   \t\t\t混合现实\n\t<—————————————————— mixed reality ———————————————————>\n\t现实环境        增强现实        增强虚拟 \t\t虚拟环境\n    real \t\t   augmented      augmented\t\tvirtual\n    environment    reality   \tvirtuality \t\tenvironment\n\n\n<h3>结构组成：</h3>\n![AR有关实现的结构](../../../../asset/Snip20190215_6.png)\nkey: \n1) 如何获取用户的位姿势（位置和角度）\n2）如何获取用户的交互指令\n3）如何显示叠加后的场景内容\n\n<h4>SLAM</h4>\nsimultaneous localization and mapping 及时廷尉与地图构建\n是值一个搭载传感器（IMU或者摄像头）\n主要解决问题： 定位 + 地图构建\n地位：  估算自身在环境中的位置\n地图构建： 识别所处环境的模型【也就是在定位的基础上构建环境的增量式地图】\n\nSLAM分为两类： （1）纯视觉 （2）视觉惯性传感器（IMU）\n\n\n1）视觉SLAM （visual SLAM）\n只搭载了相机，只能够获取图像信息，从图像中获取特征带你，然后进行特征匹配，以此来估算用户的位姿。【相机： 值的单目相机，双目相机，深度摄像头】\n\n流程：\n（1）信息的采集和读取  【通过摄像头擦剂到图像序列或者视频流】\n（2）视觉里程计（前端） 【相当于整个流程的前端，分析相邻帧图像之间的变换关系，利用图像序列或者视频流来估算相机的运动，并构造场景的控件结构，， 主要讨论相邻之间的运动关系】\n（3）后台优化 【传感器等因素影响，会出现误差（噪声），这一步可以得到全局一直的轨迹和地图】\n（4）闭环检测 【主要解决位置随时间漂移的问题】\n（5）建图  【根据后端优化的轨迹，实时简历与任务要求对应的地图】\n\n\n2） 视觉 + IMU SLAM\nIMU可以和摄像头行程互补\n（1）IMU测量设备的加速度和角速度，测量值会会出现漂移，短时间的快速移动，IMU估算的效果会很有效\n（2）IMU在相机画面方面漂移情况会少很多； 设备放在桌子上，IMU估算会出现漂移，相机画面也不会变，纯粹视觉估算的设备位姿也不会变，这个时候摄像头估算的数据可以对IMU估算的数据进行校正。\n（3）设备固定不动，场景发生变化；这个时候摄像机会发生变化，摄像头会认为设备在移动。\n\n视觉 + IMU SLAM 形式称作： VIO（visual inertial odometry）视觉惯性里程计\n\nAR历史（略过）\nAR发展现状：\n当前AR开发基本采用Unity 3D游戏引擎引入AR SDK ，同时大部分SDK可以直接接入Android 、iOS 移动端进行开发。\n\n（1）google class 谷歌眼睛\n（2）Hololens 微软的产品\n（3）Magic Leap \n（4）Impression Pi \n（5）HoloSEER\n（6）HIAR Glasses\n（7）Leap Motion\n\nAR软件：\n（1）ARToolKit 奈良先端科学技术学院的加藤宏开发\n（2）Metaio  初创公司开发\n（3）vuforia 高通推出\n（4）Wikitude 移动增强技术提供商Wikitude开发\n（5）亮风台HiAR 国内AR sdk提供商\n（6）视辰 EasyAR 视辰科技开发\n\n\nAR内容\nGoogle Tango引擎（2014） ARCore(2017） HoloLens (MR 2016)\nFacebook AR开发平台爱camera effects platform \napple 收购AR引擎开发商Metaio ， 引入ATeamAR 程序开发包\n\n（1）原深感摄像头（trueDepth camera）\n（2）设计跟踪、场景理解、集合渲染、人脸跟踪\n\n\n\n","slug":"AR","published":1,"updated":"2019-02-15T08:30:08.195Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppck50000qioju6noflwr","content":"<p>AR （augmented reality）增强现实 《ARKit开发实践》<br>详： 把现实世界和虚拟内容融合到一起，形成了各种效果。</p>\n<p>有关的几个R： VR（虚拟现实） MR（混合现实） AR（增强现实）</p>\n<pre><code>                           混合现实\n&lt;—————————————————— mixed reality ———————————————————&gt;\n现实环境        增强现实        增强虚拟         虚拟环境\nreal            augmented      augmented        virtual\nenvironment    reality       virtuality         environment\n</code></pre><p></p><h3>结构组成：</h3><br><img src=\"../../../../asset/Snip20190215_6.png\" alt=\"AR有关实现的结构\"><br>key:<br>1) 如何获取用户的位姿势（位置和角度）<br>2）如何获取用户的交互指令<br>3）如何显示叠加后的场景内容<p></p>\n<p></p><h4>SLAM</h4><br>simultaneous localization and mapping 及时廷尉与地图构建<br>是值一个搭载传感器（IMU或者摄像头）<br>主要解决问题： 定位 + 地图构建<br>地位：  估算自身在环境中的位置<br>地图构建： 识别所处环境的模型【也就是在定位的基础上构建环境的增量式地图】<p></p>\n<p>SLAM分为两类： （1）纯视觉 （2）视觉惯性传感器（IMU）</p>\n<p>1）视觉SLAM （visual SLAM）<br>只搭载了相机，只能够获取图像信息，从图像中获取特征带你，然后进行特征匹配，以此来估算用户的位姿。【相机： 值的单目相机，双目相机，深度摄像头】</p>\n<p>流程：<br>（1）信息的采集和读取  【通过摄像头擦剂到图像序列或者视频流】<br>（2）视觉里程计（前端） 【相当于整个流程的前端，分析相邻帧图像之间的变换关系，利用图像序列或者视频流来估算相机的运动，并构造场景的控件结构，， 主要讨论相邻之间的运动关系】<br>（3）后台优化 【传感器等因素影响，会出现误差（噪声），这一步可以得到全局一直的轨迹和地图】<br>（4）闭环检测 【主要解决位置随时间漂移的问题】<br>（5）建图  【根据后端优化的轨迹，实时简历与任务要求对应的地图】</p>\n<p>2） 视觉 + IMU SLAM<br>IMU可以和摄像头行程互补<br>（1）IMU测量设备的加速度和角速度，测量值会会出现漂移，短时间的快速移动，IMU估算的效果会很有效<br>（2）IMU在相机画面方面漂移情况会少很多； 设备放在桌子上，IMU估算会出现漂移，相机画面也不会变，纯粹视觉估算的设备位姿也不会变，这个时候摄像头估算的数据可以对IMU估算的数据进行校正。<br>（3）设备固定不动，场景发生变化；这个时候摄像机会发生变化，摄像头会认为设备在移动。</p>\n<p>视觉 + IMU SLAM 形式称作： VIO（visual inertial odometry）视觉惯性里程计</p>\n<p>AR历史（略过）<br>AR发展现状：<br>当前AR开发基本采用Unity 3D游戏引擎引入AR SDK ，同时大部分SDK可以直接接入Android 、iOS 移动端进行开发。</p>\n<p>（1）google class 谷歌眼睛<br>（2）Hololens 微软的产品<br>（3）Magic Leap<br>（4）Impression Pi<br>（5）HoloSEER<br>（6）HIAR Glasses<br>（7）Leap Motion</p>\n<p>AR软件：<br>（1）ARToolKit 奈良先端科学技术学院的加藤宏开发<br>（2）Metaio  初创公司开发<br>（3）vuforia 高通推出<br>（4）Wikitude 移动增强技术提供商Wikitude开发<br>（5）亮风台HiAR 国内AR sdk提供商<br>（6）视辰 EasyAR 视辰科技开发</p>\n<p>AR内容<br>Google Tango引擎（2014） ARCore(2017） HoloLens (MR 2016)<br>Facebook AR开发平台爱camera effects platform<br>apple 收购AR引擎开发商Metaio ， 引入ATeamAR 程序开发包</p>\n<p>（1）原深感摄像头（trueDepth camera）<br>（2）设计跟踪、场景理解、集合渲染、人脸跟踪</p>\n","site":{"data":{}},"excerpt":"","more":"<p>AR （augmented reality）增强现实 《ARKit开发实践》<br>详： 把现实世界和虚拟内容融合到一起，形成了各种效果。</p>\n<p>有关的几个R： VR（虚拟现实） MR（混合现实） AR（增强现实）</p>\n<pre><code>                           混合现实\n&lt;—————————————————— mixed reality ———————————————————&gt;\n现实环境        增强现实        增强虚拟         虚拟环境\nreal            augmented      augmented        virtual\nenvironment    reality       virtuality         environment\n</code></pre><p></p><h3>结构组成：</h3><br><img src=\"../../../../asset/Snip20190215_6.png\" alt=\"AR有关实现的结构\"><br>key:<br>1) 如何获取用户的位姿势（位置和角度）<br>2）如何获取用户的交互指令<br>3）如何显示叠加后的场景内容<p></p>\n<p></p><h4>SLAM</h4><br>simultaneous localization and mapping 及时廷尉与地图构建<br>是值一个搭载传感器（IMU或者摄像头）<br>主要解决问题： 定位 + 地图构建<br>地位：  估算自身在环境中的位置<br>地图构建： 识别所处环境的模型【也就是在定位的基础上构建环境的增量式地图】<p></p>\n<p>SLAM分为两类： （1）纯视觉 （2）视觉惯性传感器（IMU）</p>\n<p>1）视觉SLAM （visual SLAM）<br>只搭载了相机，只能够获取图像信息，从图像中获取特征带你，然后进行特征匹配，以此来估算用户的位姿。【相机： 值的单目相机，双目相机，深度摄像头】</p>\n<p>流程：<br>（1）信息的采集和读取  【通过摄像头擦剂到图像序列或者视频流】<br>（2）视觉里程计（前端） 【相当于整个流程的前端，分析相邻帧图像之间的变换关系，利用图像序列或者视频流来估算相机的运动，并构造场景的控件结构，， 主要讨论相邻之间的运动关系】<br>（3）后台优化 【传感器等因素影响，会出现误差（噪声），这一步可以得到全局一直的轨迹和地图】<br>（4）闭环检测 【主要解决位置随时间漂移的问题】<br>（5）建图  【根据后端优化的轨迹，实时简历与任务要求对应的地图】</p>\n<p>2） 视觉 + IMU SLAM<br>IMU可以和摄像头行程互补<br>（1）IMU测量设备的加速度和角速度，测量值会会出现漂移，短时间的快速移动，IMU估算的效果会很有效<br>（2）IMU在相机画面方面漂移情况会少很多； 设备放在桌子上，IMU估算会出现漂移，相机画面也不会变，纯粹视觉估算的设备位姿也不会变，这个时候摄像头估算的数据可以对IMU估算的数据进行校正。<br>（3）设备固定不动，场景发生变化；这个时候摄像机会发生变化，摄像头会认为设备在移动。</p>\n<p>视觉 + IMU SLAM 形式称作： VIO（visual inertial odometry）视觉惯性里程计</p>\n<p>AR历史（略过）<br>AR发展现状：<br>当前AR开发基本采用Unity 3D游戏引擎引入AR SDK ，同时大部分SDK可以直接接入Android 、iOS 移动端进行开发。</p>\n<p>（1）google class 谷歌眼睛<br>（2）Hololens 微软的产品<br>（3）Magic Leap<br>（4）Impression Pi<br>（5）HoloSEER<br>（6）HIAR Glasses<br>（7）Leap Motion</p>\n<p>AR软件：<br>（1）ARToolKit 奈良先端科学技术学院的加藤宏开发<br>（2）Metaio  初创公司开发<br>（3）vuforia 高通推出<br>（4）Wikitude 移动增强技术提供商Wikitude开发<br>（5）亮风台HiAR 国内AR sdk提供商<br>（6）视辰 EasyAR 视辰科技开发</p>\n<p>AR内容<br>Google Tango引擎（2014） ARCore(2017） HoloLens (MR 2016)<br>Facebook AR开发平台爱camera effects platform<br>apple 收购AR引擎开发商Metaio ， 引入ATeamAR 程序开发包</p>\n<p>（1）原深感摄像头（trueDepth camera）<br>（2）设计跟踪、场景理解、集合渲染、人脸跟踪</p>\n"},{"title":"ARKit","date":"2019-02-15T08:30:18.000Z","_content":"\nARKt 苹果系统框架，类似foundation ，core animation ，uikit等，不需要考虑打包的大小\n涉及到的领域： 相机视觉、传感器融合、相机调校、惯性视觉导航、光照估算、SLAM\n第三方引擎： Unity、 Unreal Engine（虚幻引擎）\n\nARKit分为4个模块进行处理：\n1）世界跟踪 （VIO（visual inertial Odometry）视觉惯性里程计） 技术实现跟踪设备的位置和姿态变化；\n详解： 以设备初始位置为原点，然后将相机画面、惯性传感器（IMU）数据进行融合，这样就可以不需要对外部环境进行设置、不需要预先知道外部环境、不需要被手机增加额外传感器的情况下，精确跟踪设备在所处环境中的运动变化。 也就是对显示世界的运动进行跟踪，所以定义为： 世界跟踪\n\n2）场景理解\n  【获取手机运动轨迹和姿态变化之后，在相机画面中添加虚拟的集合模型】\n（1）结婚模型要添加到画面的什么地方\n（2）集合模型自身的管早亮度如何根据手机所处环境的光照来设定？\n目的： 几何模型和真实环境相匹配 ————————>ARKit提供场景理解的能力\n定义：指的是手机通过一系列的软件算法分析相机图像而得到手机所处在环境的信息。\n通过在图像中提取到特征点来估算场景中的水平面（比如：地板、桌子），然后在使用hit-test 功能，在水平面上或者其他地方找到合适的地方放置几何模型。 + 光照条件\n\n3）几何渲染\n将几何模型从三维模型转换为二维图像，需要考虑到手机位资信息，场景信息，光照亮度等\n前面两个步骤已经得到了这些信息，但是并没有ARKit并没有渲染能力， 这个部分需要其他的渲染引擎进行工作。\n\n可选： sceneKit(3D) /spriteKit(2D) 、Metal框架， 第三方游戏引擎Unity、Unreal Engine\nARKit 最低支持到Apple A9 处理器。\n\n4）人脸跟踪\n和前面三个模块不同， 只适应到iphone X 以及之后的设备中。 \niphone X配有原深感摄像头（TrueDepth Camera），可以高度精确且实时地检测用户脸部位置、脸部拓步和用户表情。\n![ARKit的结构](../../../../asset/Snip20190215_7.png)\n\n\n<h2>AR 上面的项目初体验</h2>\n\n项目的创 create a new xcode project ————> augmented reality app  出现对应的界面，选择编程的语言oc/swift 还有一个是content Technology [渲染引擎]\n![创建AR项目的时候选择项](../../../../asset/Snip20190215_9.png \"创建AR项目的时候选择项\")\n\n<div  align=\"center\">    \n![选择了Scenekit的目录](../../../../asset/Snip20190215_10.png  \"选择了Scenekit的目录\")\n上面的结构多了一个art.scnassets 资源文件夹，文件夹里面又分为了3个文件：\nship.cn： 是sceneKit的场景文件\nsetting.json : 对应的设置\ntexture.png 着色的图片\n</div>\n\n项目必须运行到真机上， 若是出现： unable to run the session , configuration is not supported on this device ， 白鸥是当前的设备不支持AR；\n\n<font color=red size=4 >SceneKit的内容：</font>\n![选择了Scenekit的目录](../../../../asset/WechatIMG621.jpeg\n  \"初始化运行到手机上面的结果\")\n\n![AR](../../../../asset/Snip20190215_11.png  \"创建完成了之后，默认的占位代码\")\n<br/>\n\n<h4>下面详细了解一下对应的ARSCNView 的内容：</h4>\n```\n/**\n这个视图（view）整合了ARSession到Scenekit中渲染\nview 绘制是在相机的后台绘画，提供和更新一个相机，管理秒点（anchors） 节点和更新光线（lighting）。\n */\nAPI_AVAILABLE(ios(11.0))  // 注意到是11 版本之后才会有的\n@interface ARSCNView : SCNView\n\n// 渲染的代理\n@property (nonatomic, weak, nullable) id<ARSCNViewDelegate> delegate;\n\n这个session是用来提供给view去根性场景的（scene）\n@property (nonatomic, strong) ARSession *session;\n\n指定view 的场景\n@property (nonatomic, strong) SCNScene *scene;\n\n// 确定是否view将会更新scene的光线，讨论当设置，view将会自动创建和更新光线对于光的评估对于会话的提供，默认是YES。\n@property (nonatomic, assign) BOOL automaticallyUpdatesLighting;// 自动更新光线\n\n 查找到scene的anchor通过提供的node\n- (nullable ARAnchor *)anchorForNode:(SCNNode *)node;\n\n 获取和指定的anchor映射的node（节点）。\n- (nullable SCNNode *)nodeForAnchor:(ARAnchor *)anchor;\n\n/**\n搜索当前的帧和view上的点对应的对象。\n讨论：\npoint: coordinate system , \ntypes: 查找的类型\nreturn: 返回一个hit-test 的所有结果，从近到远排序\n\n一个2D点在view的坐标空间中能够关联到一条直线上\n在3D坐标控件中，hit-test 查找对象在时间的本地关于这个直线上。\n*/\n- (NSArray<ARHitTestResult *> *)hitTest:(CGPoint)point types:(ARHitTestResultType)types;\n\n\n/**\n Unproject a 2D point from the view onto a plane in 3D world coordinates.\n \n @discussion A 2D point in the view’s coordinate space can refer to any point along a line segment\n in the 3D coordinate space. Unprojecting gets the 3D position of the point along this line segment that intersects the provided plane.\n @param point A point in the view’s coordinate system.\n @param planeTransform The transform used to define the coordinate system of the plane.\n The coordinate system’s positive Y axis is assumed to be the normal of the plane.\n @return 3D position in world coordinates or a NAN values if unprojection is not possible.\n */\n- (simd_float3)unprojectPoint:(CGPoint)point ontoPlaneWithTransform:(simd_float4x4)planeTransform API_AVAILABLE(ios(12.0)) NS_REFINED_FOR_SWIFT;\n\n@end\n\n\n#pragma mark - ARSCNViewDelegate\n\n\nAPI_AVAILABLE(ios(11.0))\n@protocol ARSCNViewDelegate <SCNSceneRendererDelegate, ARSessionObserver>\n@optional\n\n- (nullable SCNNode *)renderer:(id <SCNSceneRenderer>)renderer nodeForAnchor:(ARAnchor *)anchor;\n- (void)renderer:(id <SCNSceneRenderer>)renderer didAddNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)renderer:(id <SCNSceneRenderer>)renderer willUpdateNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)renderer:(id <SCNSceneRenderer>)renderer didUpdateNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)renderer:(id <SCNSceneRenderer>)renderer didRemoveNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;\n\n@end\n\n下面是一下常量\n\ntypedef SCNDebugOptions ARSCNDebugOptions API_AVAILABLE(ios(11.0));\n\n展示场景的原始世界\nAPI_AVAILABLE(ios(11.0))\nFOUNDATION_EXTERN const SCNDebugOptions ARSCNDebugOptionShowWorldOrigin NS_SWIFT_NAME(ARSCNDebugOptions.showWorldOrigin);\n\n展示在时间上阿敏的3D特色点\nAPI_AVAILABLE(ios(11.0))\nFOUNDATION_EXTERN const SCNDebugOptions ARSCNDebugOptionShowFeaturePoints NS_SWIFT_NAME(ARSCNDebugOptions.showFeaturePoints);\n\n```\n\n<font color=red size=4 >SpriteKit的内容：</font>\n<div  align=\"center\">    \n![Sprite](../../../../asset/Snip20190215_13.png\n  \"SpriteKit 创建默认的项目结构\")\n多了一个scene.sks 文件 ， 这个是一个场景文件\n和scene.m 和scene.h文件\n<div>\n\n![sprite 初始化项目的截图](../../../../asset/WechatIMG622.jpeg\n  \"sprite 初始化项目的截图【注意点击一下图片屏幕才会展示虚拟模型图片】\")\n显示的是2D效果，为什么不是正常的2D效果？ ：\nspritekit 会把2D图像以漂浮的方式放置在3D控件中，就类似于将一个广告牌放置在某个地方\n，当你移动设备的时候，这几个广告牌始终是向着你的，同sceneKit适配效果是一样的。\n\n看到viewcontroller里面的代码， 加载场景的过程：\n![Sprite](../../../../asset/Snip20190215_14.png\n  \"viewcontroller里面的代码\")\n![Sprite](../../../../asset/Snip20190215_15.png\n  \"sprite delegate 的代理方法\")\n  ![Sprite](../../../../asset/Snip20190215_16.png\n  \"自定义的scene的内容\")\n\n\n```\nARSKView 的内容\n\n代理方法\n#pragma mark ARSKViewDelegate\nAPI_AVAILABLE(ios(11.0))\n@protocol ARSKViewDelegate <SKViewDelegate, ARSessionObserver>\n@optional\n- (nullable SKNode *)view:(ARSKView *)view nodeForAnchor:(ARAnchor *)anchor;\n- (void)view:(ARSKView *)view didAddNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)view:(ARSKView *)view willUpdateNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)view:(ARSKView *)view didUpdateNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)view:(ARSKView *)view didRemoveNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;\n\n@end\n\n#pragma mark ARSKView\n\n/**\n一个view继承了ARSession在SpriteKit上渲染\n讨论：这个view在相机后台绘画，和项目和匹配锚点到节点中。\n\nAPI_AVAILABLE(ios(11.0))\n@interface ARSKView : SKView\n\n@property (nonatomic, weak, nullable) NSObject <ARSKViewDelegate> *delegate; 代理\n\n@property (nonatomic, strong) ARSession *session; // 绘画\n\n- (nullable ARAnchor *)anchorForNode:(SKNode *)node;\n- (nullable SKNode *)nodeForAnchor:(ARAnchor *)anchor;\n- (NSArray<ARHitTestResult *> *)hitTest:(CGPoint)point types:(ARHitTestResultType)types;\n和sceneKit的接口一样\n@end\n```\n<font color=red size=4 > Metal</font>\n<div>\n![metal](../../../../asset/Snip20190215_17.png\n  \"metal 创建项目的默认结构\")\n  Metal 项目中没有资源文件， 但是有一个metal文件，是用于编写shaders（着色器）的。\n</div>\n可以详细阅读里面的代码， shader.metal 这个文件类似于openGL的shader.sh文件。\nmetal的学习应该多点查看对应的openGL里面的内容。\n\n\n\n\n\n\n","source":"_posts/ARKit.md","raw":"---\ntitle: ARKit\ndate: 2019-02-15 16:30:18\ntags: AR\ncategories: AR\n---\n\nARKt 苹果系统框架，类似foundation ，core animation ，uikit等，不需要考虑打包的大小\n涉及到的领域： 相机视觉、传感器融合、相机调校、惯性视觉导航、光照估算、SLAM\n第三方引擎： Unity、 Unreal Engine（虚幻引擎）\n\nARKit分为4个模块进行处理：\n1）世界跟踪 （VIO（visual inertial Odometry）视觉惯性里程计） 技术实现跟踪设备的位置和姿态变化；\n详解： 以设备初始位置为原点，然后将相机画面、惯性传感器（IMU）数据进行融合，这样就可以不需要对外部环境进行设置、不需要预先知道外部环境、不需要被手机增加额外传感器的情况下，精确跟踪设备在所处环境中的运动变化。 也就是对显示世界的运动进行跟踪，所以定义为： 世界跟踪\n\n2）场景理解\n  【获取手机运动轨迹和姿态变化之后，在相机画面中添加虚拟的集合模型】\n（1）结婚模型要添加到画面的什么地方\n（2）集合模型自身的管早亮度如何根据手机所处环境的光照来设定？\n目的： 几何模型和真实环境相匹配 ————————>ARKit提供场景理解的能力\n定义：指的是手机通过一系列的软件算法分析相机图像而得到手机所处在环境的信息。\n通过在图像中提取到特征点来估算场景中的水平面（比如：地板、桌子），然后在使用hit-test 功能，在水平面上或者其他地方找到合适的地方放置几何模型。 + 光照条件\n\n3）几何渲染\n将几何模型从三维模型转换为二维图像，需要考虑到手机位资信息，场景信息，光照亮度等\n前面两个步骤已经得到了这些信息，但是并没有ARKit并没有渲染能力， 这个部分需要其他的渲染引擎进行工作。\n\n可选： sceneKit(3D) /spriteKit(2D) 、Metal框架， 第三方游戏引擎Unity、Unreal Engine\nARKit 最低支持到Apple A9 处理器。\n\n4）人脸跟踪\n和前面三个模块不同， 只适应到iphone X 以及之后的设备中。 \niphone X配有原深感摄像头（TrueDepth Camera），可以高度精确且实时地检测用户脸部位置、脸部拓步和用户表情。\n![ARKit的结构](../../../../asset/Snip20190215_7.png)\n\n\n<h2>AR 上面的项目初体验</h2>\n\n项目的创 create a new xcode project ————> augmented reality app  出现对应的界面，选择编程的语言oc/swift 还有一个是content Technology [渲染引擎]\n![创建AR项目的时候选择项](../../../../asset/Snip20190215_9.png \"创建AR项目的时候选择项\")\n\n<div  align=\"center\">    \n![选择了Scenekit的目录](../../../../asset/Snip20190215_10.png  \"选择了Scenekit的目录\")\n上面的结构多了一个art.scnassets 资源文件夹，文件夹里面又分为了3个文件：\nship.cn： 是sceneKit的场景文件\nsetting.json : 对应的设置\ntexture.png 着色的图片\n</div>\n\n项目必须运行到真机上， 若是出现： unable to run the session , configuration is not supported on this device ， 白鸥是当前的设备不支持AR；\n\n<font color=red size=4 >SceneKit的内容：</font>\n![选择了Scenekit的目录](../../../../asset/WechatIMG621.jpeg\n  \"初始化运行到手机上面的结果\")\n\n![AR](../../../../asset/Snip20190215_11.png  \"创建完成了之后，默认的占位代码\")\n<br/>\n\n<h4>下面详细了解一下对应的ARSCNView 的内容：</h4>\n```\n/**\n这个视图（view）整合了ARSession到Scenekit中渲染\nview 绘制是在相机的后台绘画，提供和更新一个相机，管理秒点（anchors） 节点和更新光线（lighting）。\n */\nAPI_AVAILABLE(ios(11.0))  // 注意到是11 版本之后才会有的\n@interface ARSCNView : SCNView\n\n// 渲染的代理\n@property (nonatomic, weak, nullable) id<ARSCNViewDelegate> delegate;\n\n这个session是用来提供给view去根性场景的（scene）\n@property (nonatomic, strong) ARSession *session;\n\n指定view 的场景\n@property (nonatomic, strong) SCNScene *scene;\n\n// 确定是否view将会更新scene的光线，讨论当设置，view将会自动创建和更新光线对于光的评估对于会话的提供，默认是YES。\n@property (nonatomic, assign) BOOL automaticallyUpdatesLighting;// 自动更新光线\n\n 查找到scene的anchor通过提供的node\n- (nullable ARAnchor *)anchorForNode:(SCNNode *)node;\n\n 获取和指定的anchor映射的node（节点）。\n- (nullable SCNNode *)nodeForAnchor:(ARAnchor *)anchor;\n\n/**\n搜索当前的帧和view上的点对应的对象。\n讨论：\npoint: coordinate system , \ntypes: 查找的类型\nreturn: 返回一个hit-test 的所有结果，从近到远排序\n\n一个2D点在view的坐标空间中能够关联到一条直线上\n在3D坐标控件中，hit-test 查找对象在时间的本地关于这个直线上。\n*/\n- (NSArray<ARHitTestResult *> *)hitTest:(CGPoint)point types:(ARHitTestResultType)types;\n\n\n/**\n Unproject a 2D point from the view onto a plane in 3D world coordinates.\n \n @discussion A 2D point in the view’s coordinate space can refer to any point along a line segment\n in the 3D coordinate space. Unprojecting gets the 3D position of the point along this line segment that intersects the provided plane.\n @param point A point in the view’s coordinate system.\n @param planeTransform The transform used to define the coordinate system of the plane.\n The coordinate system’s positive Y axis is assumed to be the normal of the plane.\n @return 3D position in world coordinates or a NAN values if unprojection is not possible.\n */\n- (simd_float3)unprojectPoint:(CGPoint)point ontoPlaneWithTransform:(simd_float4x4)planeTransform API_AVAILABLE(ios(12.0)) NS_REFINED_FOR_SWIFT;\n\n@end\n\n\n#pragma mark - ARSCNViewDelegate\n\n\nAPI_AVAILABLE(ios(11.0))\n@protocol ARSCNViewDelegate <SCNSceneRendererDelegate, ARSessionObserver>\n@optional\n\n- (nullable SCNNode *)renderer:(id <SCNSceneRenderer>)renderer nodeForAnchor:(ARAnchor *)anchor;\n- (void)renderer:(id <SCNSceneRenderer>)renderer didAddNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)renderer:(id <SCNSceneRenderer>)renderer willUpdateNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)renderer:(id <SCNSceneRenderer>)renderer didUpdateNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)renderer:(id <SCNSceneRenderer>)renderer didRemoveNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;\n\n@end\n\n下面是一下常量\n\ntypedef SCNDebugOptions ARSCNDebugOptions API_AVAILABLE(ios(11.0));\n\n展示场景的原始世界\nAPI_AVAILABLE(ios(11.0))\nFOUNDATION_EXTERN const SCNDebugOptions ARSCNDebugOptionShowWorldOrigin NS_SWIFT_NAME(ARSCNDebugOptions.showWorldOrigin);\n\n展示在时间上阿敏的3D特色点\nAPI_AVAILABLE(ios(11.0))\nFOUNDATION_EXTERN const SCNDebugOptions ARSCNDebugOptionShowFeaturePoints NS_SWIFT_NAME(ARSCNDebugOptions.showFeaturePoints);\n\n```\n\n<font color=red size=4 >SpriteKit的内容：</font>\n<div  align=\"center\">    \n![Sprite](../../../../asset/Snip20190215_13.png\n  \"SpriteKit 创建默认的项目结构\")\n多了一个scene.sks 文件 ， 这个是一个场景文件\n和scene.m 和scene.h文件\n<div>\n\n![sprite 初始化项目的截图](../../../../asset/WechatIMG622.jpeg\n  \"sprite 初始化项目的截图【注意点击一下图片屏幕才会展示虚拟模型图片】\")\n显示的是2D效果，为什么不是正常的2D效果？ ：\nspritekit 会把2D图像以漂浮的方式放置在3D控件中，就类似于将一个广告牌放置在某个地方\n，当你移动设备的时候，这几个广告牌始终是向着你的，同sceneKit适配效果是一样的。\n\n看到viewcontroller里面的代码， 加载场景的过程：\n![Sprite](../../../../asset/Snip20190215_14.png\n  \"viewcontroller里面的代码\")\n![Sprite](../../../../asset/Snip20190215_15.png\n  \"sprite delegate 的代理方法\")\n  ![Sprite](../../../../asset/Snip20190215_16.png\n  \"自定义的scene的内容\")\n\n\n```\nARSKView 的内容\n\n代理方法\n#pragma mark ARSKViewDelegate\nAPI_AVAILABLE(ios(11.0))\n@protocol ARSKViewDelegate <SKViewDelegate, ARSessionObserver>\n@optional\n- (nullable SKNode *)view:(ARSKView *)view nodeForAnchor:(ARAnchor *)anchor;\n- (void)view:(ARSKView *)view didAddNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)view:(ARSKView *)view willUpdateNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)view:(ARSKView *)view didUpdateNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;\n- (void)view:(ARSKView *)view didRemoveNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;\n\n@end\n\n#pragma mark ARSKView\n\n/**\n一个view继承了ARSession在SpriteKit上渲染\n讨论：这个view在相机后台绘画，和项目和匹配锚点到节点中。\n\nAPI_AVAILABLE(ios(11.0))\n@interface ARSKView : SKView\n\n@property (nonatomic, weak, nullable) NSObject <ARSKViewDelegate> *delegate; 代理\n\n@property (nonatomic, strong) ARSession *session; // 绘画\n\n- (nullable ARAnchor *)anchorForNode:(SKNode *)node;\n- (nullable SKNode *)nodeForAnchor:(ARAnchor *)anchor;\n- (NSArray<ARHitTestResult *> *)hitTest:(CGPoint)point types:(ARHitTestResultType)types;\n和sceneKit的接口一样\n@end\n```\n<font color=red size=4 > Metal</font>\n<div>\n![metal](../../../../asset/Snip20190215_17.png\n  \"metal 创建项目的默认结构\")\n  Metal 项目中没有资源文件， 但是有一个metal文件，是用于编写shaders（着色器）的。\n</div>\n可以详细阅读里面的代码， shader.metal 这个文件类似于openGL的shader.sh文件。\nmetal的学习应该多点查看对应的openGL里面的内容。\n\n\n\n\n\n\n","slug":"ARKit","published":1,"updated":"2019-02-15T14:16:13.194Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcke0002qioji3e6fjak","content":"<p>ARKt 苹果系统框架，类似foundation ，core animation ，uikit等，不需要考虑打包的大小<br>涉及到的领域： 相机视觉、传感器融合、相机调校、惯性视觉导航、光照估算、SLAM<br>第三方引擎： Unity、 Unreal Engine（虚幻引擎）</p>\n<p>ARKit分为4个模块进行处理：<br>1）世界跟踪 （VIO（visual inertial Odometry）视觉惯性里程计） 技术实现跟踪设备的位置和姿态变化；<br>详解： 以设备初始位置为原点，然后将相机画面、惯性传感器（IMU）数据进行融合，这样就可以不需要对外部环境进行设置、不需要预先知道外部环境、不需要被手机增加额外传感器的情况下，精确跟踪设备在所处环境中的运动变化。 也就是对显示世界的运动进行跟踪，所以定义为： 世界跟踪</p>\n<p>2）场景理解<br>  【获取手机运动轨迹和姿态变化之后，在相机画面中添加虚拟的集合模型】<br>（1）结婚模型要添加到画面的什么地方<br>（2）集合模型自身的管早亮度如何根据手机所处环境的光照来设定？<br>目的： 几何模型和真实环境相匹配 ————————&gt;ARKit提供场景理解的能力<br>定义：指的是手机通过一系列的软件算法分析相机图像而得到手机所处在环境的信息。<br>通过在图像中提取到特征点来估算场景中的水平面（比如：地板、桌子），然后在使用hit-test 功能，在水平面上或者其他地方找到合适的地方放置几何模型。 + 光照条件</p>\n<p>3）几何渲染<br>将几何模型从三维模型转换为二维图像，需要考虑到手机位资信息，场景信息，光照亮度等<br>前面两个步骤已经得到了这些信息，但是并没有ARKit并没有渲染能力， 这个部分需要其他的渲染引擎进行工作。</p>\n<p>可选： sceneKit(3D) /spriteKit(2D) 、Metal框架， 第三方游戏引擎Unity、Unreal Engine<br>ARKit 最低支持到Apple A9 处理器。</p>\n<p>4）人脸跟踪<br>和前面三个模块不同， 只适应到iphone X 以及之后的设备中。<br>iphone X配有原深感摄像头（TrueDepth Camera），可以高度精确且实时地检测用户脸部位置、脸部拓步和用户表情。<br><img src=\"../../../../asset/Snip20190215_7.png\" alt=\"ARKit的结构\"></p>\n<h2>AR 上面的项目初体验</h2>\n\n<p>项目的创 create a new xcode project ————&gt; augmented reality app  出现对应的界面，选择编程的语言oc/swift 还有一个是content Technology [渲染引擎]<br><img src=\"../../../../asset/Snip20190215_9.png\" alt=\"创建AR项目的时候选择项\" title=\"创建AR项目的时候选择项\"></p>\n<div align=\"center\"><br><img src=\"../../../../asset/Snip20190215_10.png\" alt=\"选择了Scenekit的目录\" title=\"选择了Scenekit的目录\"><br>上面的结构多了一个art.scnassets 资源文件夹，文件夹里面又分为了3个文件：<br>ship.cn： 是sceneKit的场景文件<br>setting.json : 对应的设置<br>texture.png 着色的图片<br></div>\n\n<p>项目必须运行到真机上， 若是出现： unable to run the session , configuration is not supported on this device ， 白鸥是当前的设备不支持AR；</p>\n<p><font color=\"red\" size=\"4\">SceneKit的内容：</font><br><img src=\"../../../../asset/WechatIMG621.jpeg\" alt=\"选择了Scenekit的目录\" title=\"初始化运行到手机上面的结果\"></p>\n<p><img src=\"../../../../asset/Snip20190215_11.png\" alt=\"AR\" title=\"创建完成了之后，默认的占位代码\"><br><br></p>\n<p></p><h4>下面详细了解一下对应的ARSCNView 的内容：</h4><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">这个视图（view）整合了ARSession到Scenekit中渲染</span><br><span class=\"line\">view 绘制是在相机的后台绘画，提供和更新一个相机，管理秒点（anchors） 节点和更新光线（lighting）。</span><br><span class=\"line\"> */</span><br><span class=\"line\">API_AVAILABLE(ios(11.0))  // 注意到是11 版本之后才会有的</span><br><span class=\"line\">@interface ARSCNView : SCNView</span><br><span class=\"line\"></span><br><span class=\"line\">// 渲染的代理</span><br><span class=\"line\">@property (nonatomic, weak, nullable) id&lt;ARSCNViewDelegate&gt; delegate;</span><br><span class=\"line\"></span><br><span class=\"line\">这个session是用来提供给view去根性场景的（scene）</span><br><span class=\"line\">@property (nonatomic, strong) ARSession *session;</span><br><span class=\"line\"></span><br><span class=\"line\">指定view 的场景</span><br><span class=\"line\">@property (nonatomic, strong) SCNScene *scene;</span><br><span class=\"line\"></span><br><span class=\"line\">// 确定是否view将会更新scene的光线，讨论当设置，view将会自动创建和更新光线对于光的评估对于会话的提供，默认是YES。</span><br><span class=\"line\">@property (nonatomic, assign) BOOL automaticallyUpdatesLighting;// 自动更新光线</span><br><span class=\"line\"></span><br><span class=\"line\"> 查找到scene的anchor通过提供的node</span><br><span class=\"line\">- (nullable ARAnchor *)anchorForNode:(SCNNode *)node;</span><br><span class=\"line\"></span><br><span class=\"line\"> 获取和指定的anchor映射的node（节点）。</span><br><span class=\"line\">- (nullable SCNNode *)nodeForAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">搜索当前的帧和view上的点对应的对象。</span><br><span class=\"line\">讨论：</span><br><span class=\"line\">point: coordinate system , </span><br><span class=\"line\">types: 查找的类型</span><br><span class=\"line\">return: 返回一个hit-test 的所有结果，从近到远排序</span><br><span class=\"line\"></span><br><span class=\"line\">一个2D点在view的坐标空间中能够关联到一条直线上</span><br><span class=\"line\">在3D坐标控件中，hit-test 查找对象在时间的本地关于这个直线上。</span><br><span class=\"line\">*/</span><br><span class=\"line\">- (NSArray&lt;ARHitTestResult *&gt; *)hitTest:(CGPoint)point types:(ARHitTestResultType)types;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> Unproject a 2D point from the view onto a plane in 3D world coordinates.</span><br><span class=\"line\"> </span><br><span class=\"line\"> @discussion A 2D point in the view’s coordinate space can refer to any point along a line segment</span><br><span class=\"line\"> in the 3D coordinate space. Unprojecting gets the 3D position of the point along this line segment that intersects the provided plane.</span><br><span class=\"line\"> @param point A point in the view’s coordinate system.</span><br><span class=\"line\"> @param planeTransform The transform used to define the coordinate system of the plane.</span><br><span class=\"line\"> The coordinate system’s positive Y axis is assumed to be the normal of the plane.</span><br><span class=\"line\"> @return 3D position in world coordinates or a NAN values if unprojection is not possible.</span><br><span class=\"line\"> */</span><br><span class=\"line\">- (simd_float3)unprojectPoint:(CGPoint)point ontoPlaneWithTransform:(simd_float4x4)planeTransform API_AVAILABLE(ios(12.0)) NS_REFINED_FOR_SWIFT;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - ARSCNViewDelegate</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">API_AVAILABLE(ios(11.0))</span><br><span class=\"line\">@protocol ARSCNViewDelegate &lt;SCNSceneRendererDelegate, ARSessionObserver&gt;</span><br><span class=\"line\">@optional</span><br><span class=\"line\"></span><br><span class=\"line\">- (nullable SCNNode *)renderer:(id &lt;SCNSceneRenderer&gt;)renderer nodeForAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)renderer:(id &lt;SCNSceneRenderer&gt;)renderer didAddNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)renderer:(id &lt;SCNSceneRenderer&gt;)renderer willUpdateNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)renderer:(id &lt;SCNSceneRenderer&gt;)renderer didUpdateNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)renderer:(id &lt;SCNSceneRenderer&gt;)renderer didRemoveNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">下面是一下常量</span><br><span class=\"line\"></span><br><span class=\"line\">typedef SCNDebugOptions ARSCNDebugOptions API_AVAILABLE(ios(11.0));</span><br><span class=\"line\"></span><br><span class=\"line\">展示场景的原始世界</span><br><span class=\"line\">API_AVAILABLE(ios(11.0))</span><br><span class=\"line\">FOUNDATION_EXTERN const SCNDebugOptions ARSCNDebugOptionShowWorldOrigin NS_SWIFT_NAME(ARSCNDebugOptions.showWorldOrigin);</span><br><span class=\"line\"></span><br><span class=\"line\">展示在时间上阿敏的3D特色点</span><br><span class=\"line\">API_AVAILABLE(ios(11.0))</span><br><span class=\"line\">FOUNDATION_EXTERN const SCNDebugOptions ARSCNDebugOptionShowFeaturePoints NS_SWIFT_NAME(ARSCNDebugOptions.showFeaturePoints);</span><br></pre></td></tr></table></figure><p></p>\n<p><font color=\"red\" size=\"4\">SpriteKit的内容：</font></p>\n<p><div align=\"center\"><br><img src=\"../../../../asset/Snip20190215_13.png\" alt=\"Sprite\" title=\"SpriteKit 创建默认的项目结构\"><br>多了一个scene.sks 文件 ， 这个是一个场景文件<br>和scene.m 和scene.h文件</div></p>\n<div>\n\n<p><img src=\"../../../../asset/WechatIMG622.jpeg\" alt=\"sprite 初始化项目的截图\" title=\"sprite 初始化项目的截图【注意点击一下图片屏幕才会展示虚拟模型图片】\"><br>显示的是2D效果，为什么不是正常的2D效果？ ：<br>spritekit 会把2D图像以漂浮的方式放置在3D控件中，就类似于将一个广告牌放置在某个地方<br>，当你移动设备的时候，这几个广告牌始终是向着你的，同sceneKit适配效果是一样的。</p>\n<p>看到viewcontroller里面的代码， 加载场景的过程：<br><img src=\"../../../../asset/Snip20190215_14.png\" alt=\"Sprite\" title=\"viewcontroller里面的代码\"><br><img src=\"../../../../asset/Snip20190215_15.png\" alt=\"Sprite\" title=\"sprite delegate 的代理方法\"><br>  <img src=\"../../../../asset/Snip20190215_16.png\" alt=\"Sprite\" title=\"自定义的scene的内容\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ARSKView 的内容</span><br><span class=\"line\"></span><br><span class=\"line\">代理方法</span><br><span class=\"line\">#pragma mark ARSKViewDelegate</span><br><span class=\"line\">API_AVAILABLE(ios(11.0))</span><br><span class=\"line\">@protocol ARSKViewDelegate &lt;SKViewDelegate, ARSessionObserver&gt;</span><br><span class=\"line\">@optional</span><br><span class=\"line\">- (nullable SKNode *)view:(ARSKView *)view nodeForAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)view:(ARSKView *)view didAddNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)view:(ARSKView *)view willUpdateNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)view:(ARSKView *)view didUpdateNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)view:(ARSKView *)view didRemoveNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark ARSKView</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">一个view继承了ARSession在SpriteKit上渲染</span><br><span class=\"line\">讨论：这个view在相机后台绘画，和项目和匹配锚点到节点中。</span><br><span class=\"line\"></span><br><span class=\"line\">API_AVAILABLE(ios(11.0))</span><br><span class=\"line\">@interface ARSKView : SKView</span><br><span class=\"line\"></span><br><span class=\"line\">@property (nonatomic, weak, nullable) NSObject &lt;ARSKViewDelegate&gt; *delegate; 代理</span><br><span class=\"line\"></span><br><span class=\"line\">@property (nonatomic, strong) ARSession *session; // 绘画</span><br><span class=\"line\"></span><br><span class=\"line\">- (nullable ARAnchor *)anchorForNode:(SKNode *)node;</span><br><span class=\"line\">- (nullable SKNode *)nodeForAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (NSArray&lt;ARHitTestResult *&gt; *)hitTest:(CGPoint)point types:(ARHitTestResultType)types;</span><br><span class=\"line\">和sceneKit的接口一样</span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n<p><font color=\"red\" size=\"4\"> Metal</font></p>\n<p><div><br><img src=\"../../../../asset/Snip20190215_17.png\" alt=\"metal\" title=\"metal 创建项目的默认结构\"><br>  Metal 项目中没有资源文件， 但是有一个metal文件，是用于编写shaders（着色器）的。<br></div><br>可以详细阅读里面的代码， shader.metal 这个文件类似于openGL的shader.sh文件。<br>metal的学习应该多点查看对应的openGL里面的内容。</p>\n</div>","site":{"data":{}},"excerpt":"","more":"<p>ARKt 苹果系统框架，类似foundation ，core animation ，uikit等，不需要考虑打包的大小<br>涉及到的领域： 相机视觉、传感器融合、相机调校、惯性视觉导航、光照估算、SLAM<br>第三方引擎： Unity、 Unreal Engine（虚幻引擎）</p>\n<p>ARKit分为4个模块进行处理：<br>1）世界跟踪 （VIO（visual inertial Odometry）视觉惯性里程计） 技术实现跟踪设备的位置和姿态变化；<br>详解： 以设备初始位置为原点，然后将相机画面、惯性传感器（IMU）数据进行融合，这样就可以不需要对外部环境进行设置、不需要预先知道外部环境、不需要被手机增加额外传感器的情况下，精确跟踪设备在所处环境中的运动变化。 也就是对显示世界的运动进行跟踪，所以定义为： 世界跟踪</p>\n<p>2）场景理解<br>  【获取手机运动轨迹和姿态变化之后，在相机画面中添加虚拟的集合模型】<br>（1）结婚模型要添加到画面的什么地方<br>（2）集合模型自身的管早亮度如何根据手机所处环境的光照来设定？<br>目的： 几何模型和真实环境相匹配 ————————&gt;ARKit提供场景理解的能力<br>定义：指的是手机通过一系列的软件算法分析相机图像而得到手机所处在环境的信息。<br>通过在图像中提取到特征点来估算场景中的水平面（比如：地板、桌子），然后在使用hit-test 功能，在水平面上或者其他地方找到合适的地方放置几何模型。 + 光照条件</p>\n<p>3）几何渲染<br>将几何模型从三维模型转换为二维图像，需要考虑到手机位资信息，场景信息，光照亮度等<br>前面两个步骤已经得到了这些信息，但是并没有ARKit并没有渲染能力， 这个部分需要其他的渲染引擎进行工作。</p>\n<p>可选： sceneKit(3D) /spriteKit(2D) 、Metal框架， 第三方游戏引擎Unity、Unreal Engine<br>ARKit 最低支持到Apple A9 处理器。</p>\n<p>4）人脸跟踪<br>和前面三个模块不同， 只适应到iphone X 以及之后的设备中。<br>iphone X配有原深感摄像头（TrueDepth Camera），可以高度精确且实时地检测用户脸部位置、脸部拓步和用户表情。<br><img src=\"../../../../asset/Snip20190215_7.png\" alt=\"ARKit的结构\"></p>\n<h2>AR 上面的项目初体验</h2>\n\n<p>项目的创 create a new xcode project ————&gt; augmented reality app  出现对应的界面，选择编程的语言oc/swift 还有一个是content Technology [渲染引擎]<br><img src=\"../../../../asset/Snip20190215_9.png\" alt=\"创建AR项目的时候选择项\" title=\"创建AR项目的时候选择项\"></p>\n<div align=\"center\"><br><img src=\"../../../../asset/Snip20190215_10.png\" alt=\"选择了Scenekit的目录\" title=\"选择了Scenekit的目录\"><br>上面的结构多了一个art.scnassets 资源文件夹，文件夹里面又分为了3个文件：<br>ship.cn： 是sceneKit的场景文件<br>setting.json : 对应的设置<br>texture.png 着色的图片<br></div>\n\n<p>项目必须运行到真机上， 若是出现： unable to run the session , configuration is not supported on this device ， 白鸥是当前的设备不支持AR；</p>\n<p><font color=\"red\" size=\"4\">SceneKit的内容：</font><br><img src=\"../../../../asset/WechatIMG621.jpeg\" alt=\"选择了Scenekit的目录\" title=\"初始化运行到手机上面的结果\"></p>\n<p><img src=\"../../../../asset/Snip20190215_11.png\" alt=\"AR\" title=\"创建完成了之后，默认的占位代码\"><br><br></p>\n<p></p><h4>下面详细了解一下对应的ARSCNView 的内容：</h4><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">这个视图（view）整合了ARSession到Scenekit中渲染</span><br><span class=\"line\">view 绘制是在相机的后台绘画，提供和更新一个相机，管理秒点（anchors） 节点和更新光线（lighting）。</span><br><span class=\"line\"> */</span><br><span class=\"line\">API_AVAILABLE(ios(11.0))  // 注意到是11 版本之后才会有的</span><br><span class=\"line\">@interface ARSCNView : SCNView</span><br><span class=\"line\"></span><br><span class=\"line\">// 渲染的代理</span><br><span class=\"line\">@property (nonatomic, weak, nullable) id&lt;ARSCNViewDelegate&gt; delegate;</span><br><span class=\"line\"></span><br><span class=\"line\">这个session是用来提供给view去根性场景的（scene）</span><br><span class=\"line\">@property (nonatomic, strong) ARSession *session;</span><br><span class=\"line\"></span><br><span class=\"line\">指定view 的场景</span><br><span class=\"line\">@property (nonatomic, strong) SCNScene *scene;</span><br><span class=\"line\"></span><br><span class=\"line\">// 确定是否view将会更新scene的光线，讨论当设置，view将会自动创建和更新光线对于光的评估对于会话的提供，默认是YES。</span><br><span class=\"line\">@property (nonatomic, assign) BOOL automaticallyUpdatesLighting;// 自动更新光线</span><br><span class=\"line\"></span><br><span class=\"line\"> 查找到scene的anchor通过提供的node</span><br><span class=\"line\">- (nullable ARAnchor *)anchorForNode:(SCNNode *)node;</span><br><span class=\"line\"></span><br><span class=\"line\"> 获取和指定的anchor映射的node（节点）。</span><br><span class=\"line\">- (nullable SCNNode *)nodeForAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">搜索当前的帧和view上的点对应的对象。</span><br><span class=\"line\">讨论：</span><br><span class=\"line\">point: coordinate system , </span><br><span class=\"line\">types: 查找的类型</span><br><span class=\"line\">return: 返回一个hit-test 的所有结果，从近到远排序</span><br><span class=\"line\"></span><br><span class=\"line\">一个2D点在view的坐标空间中能够关联到一条直线上</span><br><span class=\"line\">在3D坐标控件中，hit-test 查找对象在时间的本地关于这个直线上。</span><br><span class=\"line\">*/</span><br><span class=\"line\">- (NSArray&lt;ARHitTestResult *&gt; *)hitTest:(CGPoint)point types:(ARHitTestResultType)types;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> Unproject a 2D point from the view onto a plane in 3D world coordinates.</span><br><span class=\"line\"> </span><br><span class=\"line\"> @discussion A 2D point in the view’s coordinate space can refer to any point along a line segment</span><br><span class=\"line\"> in the 3D coordinate space. Unprojecting gets the 3D position of the point along this line segment that intersects the provided plane.</span><br><span class=\"line\"> @param point A point in the view’s coordinate system.</span><br><span class=\"line\"> @param planeTransform The transform used to define the coordinate system of the plane.</span><br><span class=\"line\"> The coordinate system’s positive Y axis is assumed to be the normal of the plane.</span><br><span class=\"line\"> @return 3D position in world coordinates or a NAN values if unprojection is not possible.</span><br><span class=\"line\"> */</span><br><span class=\"line\">- (simd_float3)unprojectPoint:(CGPoint)point ontoPlaneWithTransform:(simd_float4x4)planeTransform API_AVAILABLE(ios(12.0)) NS_REFINED_FOR_SWIFT;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - ARSCNViewDelegate</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">API_AVAILABLE(ios(11.0))</span><br><span class=\"line\">@protocol ARSCNViewDelegate &lt;SCNSceneRendererDelegate, ARSessionObserver&gt;</span><br><span class=\"line\">@optional</span><br><span class=\"line\"></span><br><span class=\"line\">- (nullable SCNNode *)renderer:(id &lt;SCNSceneRenderer&gt;)renderer nodeForAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)renderer:(id &lt;SCNSceneRenderer&gt;)renderer didAddNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)renderer:(id &lt;SCNSceneRenderer&gt;)renderer willUpdateNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)renderer:(id &lt;SCNSceneRenderer&gt;)renderer didUpdateNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)renderer:(id &lt;SCNSceneRenderer&gt;)renderer didRemoveNode:(SCNNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">下面是一下常量</span><br><span class=\"line\"></span><br><span class=\"line\">typedef SCNDebugOptions ARSCNDebugOptions API_AVAILABLE(ios(11.0));</span><br><span class=\"line\"></span><br><span class=\"line\">展示场景的原始世界</span><br><span class=\"line\">API_AVAILABLE(ios(11.0))</span><br><span class=\"line\">FOUNDATION_EXTERN const SCNDebugOptions ARSCNDebugOptionShowWorldOrigin NS_SWIFT_NAME(ARSCNDebugOptions.showWorldOrigin);</span><br><span class=\"line\"></span><br><span class=\"line\">展示在时间上阿敏的3D特色点</span><br><span class=\"line\">API_AVAILABLE(ios(11.0))</span><br><span class=\"line\">FOUNDATION_EXTERN const SCNDebugOptions ARSCNDebugOptionShowFeaturePoints NS_SWIFT_NAME(ARSCNDebugOptions.showFeaturePoints);</span><br></pre></td></tr></table></figure><p></p>\n<p><font color=\"red\" size=\"4\">SpriteKit的内容：</font></p>\n<p><div align=\"center\"><br><img src=\"../../../../asset/Snip20190215_13.png\" alt=\"Sprite\" title=\"SpriteKit 创建默认的项目结构\"><br>多了一个scene.sks 文件 ， 这个是一个场景文件<br>和scene.m 和scene.h文件</div></p>\n<div>\n\n<p><img src=\"../../../../asset/WechatIMG622.jpeg\" alt=\"sprite 初始化项目的截图\" title=\"sprite 初始化项目的截图【注意点击一下图片屏幕才会展示虚拟模型图片】\"><br>显示的是2D效果，为什么不是正常的2D效果？ ：<br>spritekit 会把2D图像以漂浮的方式放置在3D控件中，就类似于将一个广告牌放置在某个地方<br>，当你移动设备的时候，这几个广告牌始终是向着你的，同sceneKit适配效果是一样的。</p>\n<p>看到viewcontroller里面的代码， 加载场景的过程：<br><img src=\"../../../../asset/Snip20190215_14.png\" alt=\"Sprite\" title=\"viewcontroller里面的代码\"><br><img src=\"../../../../asset/Snip20190215_15.png\" alt=\"Sprite\" title=\"sprite delegate 的代理方法\"><br>  <img src=\"../../../../asset/Snip20190215_16.png\" alt=\"Sprite\" title=\"自定义的scene的内容\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ARSKView 的内容</span><br><span class=\"line\"></span><br><span class=\"line\">代理方法</span><br><span class=\"line\">#pragma mark ARSKViewDelegate</span><br><span class=\"line\">API_AVAILABLE(ios(11.0))</span><br><span class=\"line\">@protocol ARSKViewDelegate &lt;SKViewDelegate, ARSessionObserver&gt;</span><br><span class=\"line\">@optional</span><br><span class=\"line\">- (nullable SKNode *)view:(ARSKView *)view nodeForAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)view:(ARSKView *)view didAddNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)view:(ARSKView *)view willUpdateNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)view:(ARSKView *)view didUpdateNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (void)view:(ARSKView *)view didRemoveNode:(SKNode *)node forAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark ARSKView</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">一个view继承了ARSession在SpriteKit上渲染</span><br><span class=\"line\">讨论：这个view在相机后台绘画，和项目和匹配锚点到节点中。</span><br><span class=\"line\"></span><br><span class=\"line\">API_AVAILABLE(ios(11.0))</span><br><span class=\"line\">@interface ARSKView : SKView</span><br><span class=\"line\"></span><br><span class=\"line\">@property (nonatomic, weak, nullable) NSObject &lt;ARSKViewDelegate&gt; *delegate; 代理</span><br><span class=\"line\"></span><br><span class=\"line\">@property (nonatomic, strong) ARSession *session; // 绘画</span><br><span class=\"line\"></span><br><span class=\"line\">- (nullable ARAnchor *)anchorForNode:(SKNode *)node;</span><br><span class=\"line\">- (nullable SKNode *)nodeForAnchor:(ARAnchor *)anchor;</span><br><span class=\"line\">- (NSArray&lt;ARHitTestResult *&gt; *)hitTest:(CGPoint)point types:(ARHitTestResultType)types;</span><br><span class=\"line\">和sceneKit的接口一样</span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n<p><font color=\"red\" size=\"4\"> Metal</font></p>\n<p><div><br><img src=\"../../../../asset/Snip20190215_17.png\" alt=\"metal\" title=\"metal 创建项目的默认结构\"><br>  Metal 项目中没有资源文件， 但是有一个metal文件，是用于编写shaders（着色器）的。<br></div><br>可以详细阅读里面的代码， shader.metal 这个文件类似于openGL的shader.sh文件。<br>metal的学习应该多点查看对应的openGL里面的内容。</p>\n</div>"},{"title":"C 预处理","date":"2019-02-16T09:47:18.000Z","_content":"\n一、 C语言的预处理 【C++、oc等其他语言的预处理应该也是一样的】\n<1>预处理是C语言特有的功能；\n<2>可以使用预处理和具有预处理的功能是C语言和其他高级语言的去呗之一\n<3>预处理包含许多功能：eg：宏定义、条件编译等，\n<4>预处理功能便于程序的修改、阅读、移植和调试\n<5>便于实现模块化程序设计\n\n预处理\n1）宏定义相关的内容\n2）文件包含的内容\n3）条件编译的相关的内容\n\n1、 宏定义\n#define 命令定义符号常量\n目的： 使用#define命令就是要定义一个可替换的宏，——————> 编程中简短语句替换长的。\n\n1.1）不带参数的宏定义\n#define 宏名/标示符 字符串\n详解：#define用来定义一个标示符和一个字符串，以标示符来替换字符串。\n【程序中每次遇到该标示符就用所定义的字符串替代它；宏定义的作用相当于给指定到的字符串起个别名】\n注意事项：\n（1）#表示这是一条预处理命令\n（2）宏名是一个标示符，必须符合C语言标示符规定\n（3）字符串可以是常熟、表达式、格式字符串等。\neg：#define PI 3.14159 使用了PI替换掉3.14159\n注意：\n（1） 宏定义名字（标示符）一般为大写字母，便于与变量名区别；\n（2）宏定义不是C语句，不需要在行末加分号\n\n不带参数的宏定义的强调重点：\n（1）如果串中带有宏名，则不进行替换； eg： char exp[30]=\"This is not that TEST\" // 其中TEST是宏定义的 \n（2）如果串长于一行  ，可以在该行末用反斜杠\"\\\"续行\n（3）#define 命令出现在程序中行数的外面，宏名的有效范围为定义 “命令之后到此源文件结束”。\n【编写程序时，通常将所有的#define放到文件的开始处或者独立的文件中，而不是将他们分散到整个程序中】\n（4）可以用#undef 命令终止宏定义的作用域\n```\n#include <stdio.h>\n#define TEST \"this is an example\"\nmain()\n{\n\tprintf(TEST);\n\t#undef TEST  // 这里就终止了\n}\n```\n（5）宏定义用于预处理命令，它不同于定义的变量，只是做字符替换，不分配内存空间。\n\nPS： 不带参数的宏定义使用标示符替换固定的字符串\n\n1.2）带参数的宏定义\n带有参数的宏定义不是简单的字符串替换，还要替换参数 ——————> 替换字符串和参数\n#define 红名(参数表) 字符串 \neg： #define MIX(a,b) ((a)*(b)+(b)) // 宏定义求两个数的混合运算\n用宏替换代替实在的函数的一个好处是可以提升代码的速度，因为不存在函数调用。但提升速度也是有代价的： 由于重复编码，而增加了程序长度。【使用宏的地方都会替代，所以会变长】\n注意事项：\n1）宏定义时，参数要加括号。   如不加括号，则结果可能是正确的，也可能是错误的。\n2）宏扩展必须使用括号来保护表达式中低优先级的操作符，以确保调用时能达到想要的结果。\n3）对带参数的宏的展开，只是将语句中的宏名后面括号内的实参字符串代替#define命令行中的形参\n4）在宏定义时，宏名与带有参数的括号之间不可以加空格，否则会将空格以后的字符都作为替代字符串的一部分\n5）在带参宏定义中，形式参数不分配内存单元，因此不必做类型定义\n\n\n2、#include 指令\n文件包含在c语言中是什么意思？ 因为有.h 、.c 文件，具体是怎么样的? 有点困惑\n\n功能：在一个源文件中使用#include指令可以将另一个源文件的全部内容包含进来，也就是将另外的文件包含到本文件中。 // 这里的全部内容指的是.h 文件还是.c 文件还是引入那个就是指的那个文件罢了。\n\n#include使编译程序将另一个文件嵌入带有#include的源文件，被读入的源文件必须用双引号或尖括号括起来。\neg： #include <stdio.h> / #include \"stdio.h\"\n这两种方式均是使用C编译程序读入并编译，用于处理磁盘文件库的子程序。\n#include <stdio.h> 系统到存放c库函数头文件所在的目录中寻找要包含的文件（标准方式）【引入库经常是这样】【省时间】\n#include \"stdio.h\" 系统现在用户当前目录中寻找要包含的文件，若是找不到，再到存放C库函数头肩所在的目录中寻找要包含的文件。【自己写的通常这样使用】\n\n将文件嵌入#include命令中的文件内是可行的，这种方式称为嵌套的嵌入文件，嵌套层次依赖于具体的实现。\n通常用在文件头部的被包含的文件称为“标题文件”或“头部文件”，一般是以.h 作为后缀。\n一般将如下内容放在.h文件中：\n（1）宏定义\n（2）结构、联合和枚举声明\n（3）typedef 声明\n（4）外部函数声明\n（5）全局变量声明\n\n注意事项： \n（1）一个#include 命令只能指定一个被包含的文件\n（2）文件包含可以嵌套的，即在一个被包含文件中还可以包含另一个被包含的文件\n（3）file1.c中包含file2.h，那么在预编译后就成为一个文件，而不是两个文件，这时如果file2.h中全局静态变量，则该全局变量在file1.c文件中也有效，这时就不需要extern声明。\n\n现在的理解是: #include \"***.h\" 引入的是这个头文件，实现的部分没有进行引入。这个命令就是简单的复制拷贝。\n\n这个需要解决一个问题： 避免文件包含“嵌套重复”\n\n```\n清楚两点：\n(1) 处理时间：文件包含也是以\"#\"开头来写的(#include ),那么它就是写给预处理器来看了, 也就是说文件包含是会在编译预处理阶段进行处理的。\n(2) 处理方法：在预处理阶段，系统自动对#include命令进行处理，具体做法是:降包含文件的内容复制到包含语句(#include )处，得到新的文件，然后再对这个新的文件进行编译。\n```\n\nQ : 引入头文件，没有引入实现的源文件，编译运行过程是怎么样的？\n\n一般情况下文件包含分为两种：包含.h文件 和 包含.c文件\n（1）. 当然对于这两情况也都是按照上面说的方法来处理的。就是简单的拷贝到当前的文件中.\n（2）. 包含.c文件 和编译多文件程序 是不同的。\n   多文件程序: 是在源文件编译时把多个文件进行编译、连接在一起生成一个可执行文件。\n   包含.c文件: 按照我们上边的说法则是把多个文件合并为一个文件进行编译。\n\n1> 包含.c文件：\n\n```\n//file1:  main.c \n#include \"main.h\"\n#include \"fun.c\"\nint main()\n{\n  int a=5,b=19;\n  c = a;    \n  sun(a,b);\n  printf(\"c=%d\\n\",c);\n  return 0;\n}\n```\n\n```\n//file2: fun.c\nint c=0;\nvoid sun(int a, int b)\n{\n\tprintf(\"a+b=%d\\n\",a+b);\n\tc=0;\n\tprintf(\"c=%d\\n\",c);\n}\n```\n上面例子中采用包含.c文件的方式实现的。\n在编译时，直接去编译main.c文件，预处理器会先把fun.c文件中的内容复制到main.c中来，然后再对新的main.c进行编译。\n编译命令：gcc main.c -o main \n这里并没有对fun.c文件进行编译，但是还是生成了最终的main可执行程序。\n\n&&& 也可以通过命令来看一下预处理的结果：\n   gcc -E main.c -o main.cpp\n在main.cpp文件末尾可以看来下面一段代码：\n```\n//main.cpp文件中\n# 2 \"main.c\" 2\n#  \"fun.c\" 1\n//注意这里是fun.c里边的内容\nint c=0;\nvoid sun(int a, int b)\n{\n\tprintf(\"a+b=%d\\n\",a+b);\n\tc=0;\n\tprintf(\"c=%d\\n\",c);\n} \n//这里是main函数\n# 3 \"main.c\" 2\nint main()\n{ \n\tint a=5,b=19;\n\tc = a;\n\tprintf(\"c=%d\\n\",c);\n\tsun(a,b);\n\tprintf(\"c=%d\\n\",c);\n\treturn 0;\n}\n```\n可见，其实就是将fun.c文件中的内容添加到了main函数之前，然后对新的文件进行编译，生成最终的可执行程序。\n\n(2)编译多文件程序：\n同样是上边的例子，把main.c中“ #include \"fun.c\" ”注释掉，加上一句：“extern int c;”因为 c 变量在另外一个文件(fun.c)中定义。\n```\n//file1:  main.c \n#include \"main.h\"\n//#include \"fun.c\"\nextern int c;\nint main()\n{\n  int a=5,b=19;\n  c = a;    \n  sun(a,b);\n  printf(\"c=%d\\n\",c);\n  return 0;\n}\n```\n\n```\n//file2: fun.c\nint c=0;\nvoid sun(int a, int b)\n{\n\tprintf(\"a+b=%d\\n\",a+b);\n\tc=0;\n\tprintf(\"c=%d\\n\",c);\n}\n\n如果还是按照上面的方法只编译main.c的话就会出错，因为变量c和函数sun并没有在main.c中定义，所以编译时需要将fun.c一起编译\n\n编译命令：   \n    gcc -c main.c -o main.o                 #编译main.c\n    gcc -c fun.c -o fun.o                       #编译fun.c\n    gcc main.o fun.o -o main              #用main.o fun.o生成main\nPS： 从上面可以了解到包含.c 文件和多文件的区别了；\n\n1. 包含.c文件的方法: 容易产生\"重定义\",大家想想如果一个工程中有多个文件都同时包含了某一个件，那么这个被包含文件的内容就会被复制到多个文件中去，也就相当于每个包含该文件的文件中都定义被包含文件中的变量和函数，这样在链接时就会产生\"重定义\"错误。\n2. 多文件分开编译的方法: 这个比较好，不容易出现\"重定义\"之类的问题，这也是我们最常用的一种方法，但是并不是像上面这个例子中这样直接去用，而是使用\"头文件\"将各个.c文件联系起来。\n上边这个例子大家会发现，在main.c中需要加上“extern int c;”这样一句声明，如果包含的文件较多？如果全局变量较多？...这个我们可以省掉吗？回答是肯定的！方法就是给它写上一个头文件。\n\n接下来使用头文件(.h)来了实现这个例子的方法：\n```\n//file1:  main.c \n#include \"main.h\"\n#include \"fun.h\"\nint main()\n{\n  int a=5,b=19;\n  c = a;    \n  sun(a,b);\n  printf(\"c=%d\\n\",c);\n  return 0;\n}\n```\n\n```\n//file2: fun.c\nint c=0;\nvoid sun(int a, int b)\n{\n\tprintf(\"a+b=%d\\n\",a+b);\n\tc=0;\n\tprintf(\"c=%d\\n\",c);\n}\n```\n```\n//file3: fun.h \nextern int c;             //把c声明为外部可用的\nvoid sun(int a, int b);   //sun()函数的声明\n```\n在要用到fun.c中定义的函数或变量的文件中只要包含fun.h文件就可以了\n预处理时会把fun.h中的内容复制到包含它的文件中去，而复制的这些内容只是声名，不是定义，所以它被复制再多份也不会出现\"重定义\"的错误。。。\n呵呵，对，就是这样，这就是头文件给我们再来的好处。\n把同一类功能写到一个.c文件中，这样可以把他们划为一个模块，另外再对应的写上一个.h文件做它的声明。这样以后再使用这个模块时只需要把这两个文件添加进工程，同时在要使用模块内函数或变量的文件中包含.h文件就可以了。\n\n所以关于头文件的写法个人总结以下几点:\n(1) 对应的.c文件中写变量、函数的定义\n(2) 对应的.h文件中写变量、函数的声明\n(3) 如果有数据类型的定义 和 宏定义 ，请写的头文件(.h)中\n(4) 头文件中一定加上#ifndef...#define....#endif之类的防止重包含的语句\n(5) 模块的.c文件中别忘包含自己的.h文件\n\n参考链接： https://www.cnblogs.com/Bonker/p/3548276.html\n\n\n3、条件编译\n一般情况下， 源程序所有的行都会参与编译， 但是有时候需要特定满足环境才可以进行编译，这个时候就需要一些条件编译了。\n\n功用：非常方便处理程序的调试版本和正式版本，同时还会增强程序的可移植性。\n\n1) #if 命令\n含义： 如果#if 命令后的参数表达为真，则编译#if到#endif之间的程序段，否则跳过这段程序。#endif命令用来表示#if段结束。\n```\n#if 常数表达式\n\t语句段\n#endif\n如果常数表达式为真，该语句段就会被编译，否则跳过不编译。\n```\n\n#else 作用是给#if为假的时候，提供另外一种选择，其作用和前面讲过的条件判断中的else相近。\n\n#elif 指令表示 简历一种“如果......或者如果......”这样阶梯状多重编译操作选择，这与多分支if语句中的else if类似。\n```\n#if 表达式\n\t语句段\n#elif 表达式1\n\t语句段\n#elif 表达式2\n\t语句段\n...\n#elif 表达式n\n语句段\n#endif\n```\n\n2)#ifdef 及#ifndef 命令\n在#if条件编译的命令中，需要判断符号常量所定义的具体值。 但是有时候并不是需要判断具体值，只需要知道这个符号常量是否给定义了，这时候就不需要#if了。\n可以采用另外一种条件编译的方法，即为：#ifdef与#ifndef命令。\n分别表示： “如果有定义”以及“如果无定义”\n形式如下:\n```\n#ifdef 宏替换名\n语句段\n#endif\n表示： 如果宏替换名已被定义过，则对“语句段”进行编译；如果没有定义#ifdef后面的宏替换名，则不对语句段进行编译\n\n#ifdef 宏替换名\n语句段1\n#else \n语句段2\n#endif\n```\n```\n#ifdef 宏替换名\n语句段\n#endif\n表示： 如果宏替换名未被定义过，则对“语句段”进行编译；如果定义过#ifdef后面的宏替换名，则不对语句段进行编译\n\n#ifndef 宏替换名\n语句段1\n#else \n语句段2\n#endif\n```\n\n3）#undef命令\n表示： 删除事先定义好的宏定义\n#undef 宏替换名\n```\neg: \n#define MAX_SIZE 100\nchar array[MAX_SIZE]\n#undef MAX_SIZE\n#define定义了宏MAX_SIZE， 然后使用undef删除MAX_SIZE，接下来MAX_SIZE 就失效了；\n说明：undef 的主要目的是讲宏名局限在仅需要它的代码中。\n```\n\n4）#line 命令\n#line命令用于显示_LINE_与_FILE_的内容。 _LINE_存放当前编译行的行号，_FILE_存放当前编译的文件名。\n\n```\n形式：\n#line 行号[\"文件名\"]\n```\n行号为任一正整数，可选的文件名为任意有效文件标示符。行号为源程序中当前行号，文件名为原文件名。\n```\nprintf(\"当前行号%d \\n\",__LINE__);\nprintf(\"当前文件名%s \\n\",__FILE__);\n输出结果：\n当前行号18 \n当前文件名/Users/felix/Desktop/test/test/main.cpp\n```\n\n5）#pragma 命令\n《1》#pragma 命令\n功用：设置编译器的状态，或者指示编译器完成一些特定的动作\neg：\n#pragma 参数\n参数类型：\n（1）message参数：在编译信息窗口中输出相应的信息\n（2）code_seg参数：设置程序中函数代码存放的代码段\n（3）once参数：保证头文件被编译一次\n《2》预定义宏名\nANSI标准说明了一下5个预定义替换名\n（1）__LINE__: 当前被编译代码的行号\n（2）__FILE__: 当前源程序的文件名称\n（3）__DATE__: 当前源程序的创建日期\n（4）__TIME__: 当前源程序的创建时间\n（5）__STDC__: 用来判断当前编译器是否为标准C；若是为1，白鸥是符合标准C，否则不是\n&& 如果编译不是标准的，则可能仅支持以上宏名中的几个，或根本不支持。编译程序有时还提供其他预定义的宏名。\n\n\n\n>>>\nPS：宏定义、文件包含、条件编译\n宏定义：用一个标示符表示一个字符串，在宏调用中将该字符串替换宏名。分为不带参数和带有参数的两种形式。\n文件包含：预处理的一个重要功能，可用于将多个源文件链接成为一个源文件进行编译，并且生成一个目标文件。\n条件编译：允许只编译源程序中满足条件的程序段，从而减少内存开销，并提高了程序的效率。\n\n\n\n\n\n\n","source":"_posts/C-预处理.md","raw":"---\ntitle: C 预处理\ndate: 2019-02-16 17:47:18\ntags: C\ncategories: C\n---\n\n一、 C语言的预处理 【C++、oc等其他语言的预处理应该也是一样的】\n<1>预处理是C语言特有的功能；\n<2>可以使用预处理和具有预处理的功能是C语言和其他高级语言的去呗之一\n<3>预处理包含许多功能：eg：宏定义、条件编译等，\n<4>预处理功能便于程序的修改、阅读、移植和调试\n<5>便于实现模块化程序设计\n\n预处理\n1）宏定义相关的内容\n2）文件包含的内容\n3）条件编译的相关的内容\n\n1、 宏定义\n#define 命令定义符号常量\n目的： 使用#define命令就是要定义一个可替换的宏，——————> 编程中简短语句替换长的。\n\n1.1）不带参数的宏定义\n#define 宏名/标示符 字符串\n详解：#define用来定义一个标示符和一个字符串，以标示符来替换字符串。\n【程序中每次遇到该标示符就用所定义的字符串替代它；宏定义的作用相当于给指定到的字符串起个别名】\n注意事项：\n（1）#表示这是一条预处理命令\n（2）宏名是一个标示符，必须符合C语言标示符规定\n（3）字符串可以是常熟、表达式、格式字符串等。\neg：#define PI 3.14159 使用了PI替换掉3.14159\n注意：\n（1） 宏定义名字（标示符）一般为大写字母，便于与变量名区别；\n（2）宏定义不是C语句，不需要在行末加分号\n\n不带参数的宏定义的强调重点：\n（1）如果串中带有宏名，则不进行替换； eg： char exp[30]=\"This is not that TEST\" // 其中TEST是宏定义的 \n（2）如果串长于一行  ，可以在该行末用反斜杠\"\\\"续行\n（3）#define 命令出现在程序中行数的外面，宏名的有效范围为定义 “命令之后到此源文件结束”。\n【编写程序时，通常将所有的#define放到文件的开始处或者独立的文件中，而不是将他们分散到整个程序中】\n（4）可以用#undef 命令终止宏定义的作用域\n```\n#include <stdio.h>\n#define TEST \"this is an example\"\nmain()\n{\n\tprintf(TEST);\n\t#undef TEST  // 这里就终止了\n}\n```\n（5）宏定义用于预处理命令，它不同于定义的变量，只是做字符替换，不分配内存空间。\n\nPS： 不带参数的宏定义使用标示符替换固定的字符串\n\n1.2）带参数的宏定义\n带有参数的宏定义不是简单的字符串替换，还要替换参数 ——————> 替换字符串和参数\n#define 红名(参数表) 字符串 \neg： #define MIX(a,b) ((a)*(b)+(b)) // 宏定义求两个数的混合运算\n用宏替换代替实在的函数的一个好处是可以提升代码的速度，因为不存在函数调用。但提升速度也是有代价的： 由于重复编码，而增加了程序长度。【使用宏的地方都会替代，所以会变长】\n注意事项：\n1）宏定义时，参数要加括号。   如不加括号，则结果可能是正确的，也可能是错误的。\n2）宏扩展必须使用括号来保护表达式中低优先级的操作符，以确保调用时能达到想要的结果。\n3）对带参数的宏的展开，只是将语句中的宏名后面括号内的实参字符串代替#define命令行中的形参\n4）在宏定义时，宏名与带有参数的括号之间不可以加空格，否则会将空格以后的字符都作为替代字符串的一部分\n5）在带参宏定义中，形式参数不分配内存单元，因此不必做类型定义\n\n\n2、#include 指令\n文件包含在c语言中是什么意思？ 因为有.h 、.c 文件，具体是怎么样的? 有点困惑\n\n功能：在一个源文件中使用#include指令可以将另一个源文件的全部内容包含进来，也就是将另外的文件包含到本文件中。 // 这里的全部内容指的是.h 文件还是.c 文件还是引入那个就是指的那个文件罢了。\n\n#include使编译程序将另一个文件嵌入带有#include的源文件，被读入的源文件必须用双引号或尖括号括起来。\neg： #include <stdio.h> / #include \"stdio.h\"\n这两种方式均是使用C编译程序读入并编译，用于处理磁盘文件库的子程序。\n#include <stdio.h> 系统到存放c库函数头文件所在的目录中寻找要包含的文件（标准方式）【引入库经常是这样】【省时间】\n#include \"stdio.h\" 系统现在用户当前目录中寻找要包含的文件，若是找不到，再到存放C库函数头肩所在的目录中寻找要包含的文件。【自己写的通常这样使用】\n\n将文件嵌入#include命令中的文件内是可行的，这种方式称为嵌套的嵌入文件，嵌套层次依赖于具体的实现。\n通常用在文件头部的被包含的文件称为“标题文件”或“头部文件”，一般是以.h 作为后缀。\n一般将如下内容放在.h文件中：\n（1）宏定义\n（2）结构、联合和枚举声明\n（3）typedef 声明\n（4）外部函数声明\n（5）全局变量声明\n\n注意事项： \n（1）一个#include 命令只能指定一个被包含的文件\n（2）文件包含可以嵌套的，即在一个被包含文件中还可以包含另一个被包含的文件\n（3）file1.c中包含file2.h，那么在预编译后就成为一个文件，而不是两个文件，这时如果file2.h中全局静态变量，则该全局变量在file1.c文件中也有效，这时就不需要extern声明。\n\n现在的理解是: #include \"***.h\" 引入的是这个头文件，实现的部分没有进行引入。这个命令就是简单的复制拷贝。\n\n这个需要解决一个问题： 避免文件包含“嵌套重复”\n\n```\n清楚两点：\n(1) 处理时间：文件包含也是以\"#\"开头来写的(#include ),那么它就是写给预处理器来看了, 也就是说文件包含是会在编译预处理阶段进行处理的。\n(2) 处理方法：在预处理阶段，系统自动对#include命令进行处理，具体做法是:降包含文件的内容复制到包含语句(#include )处，得到新的文件，然后再对这个新的文件进行编译。\n```\n\nQ : 引入头文件，没有引入实现的源文件，编译运行过程是怎么样的？\n\n一般情况下文件包含分为两种：包含.h文件 和 包含.c文件\n（1）. 当然对于这两情况也都是按照上面说的方法来处理的。就是简单的拷贝到当前的文件中.\n（2）. 包含.c文件 和编译多文件程序 是不同的。\n   多文件程序: 是在源文件编译时把多个文件进行编译、连接在一起生成一个可执行文件。\n   包含.c文件: 按照我们上边的说法则是把多个文件合并为一个文件进行编译。\n\n1> 包含.c文件：\n\n```\n//file1:  main.c \n#include \"main.h\"\n#include \"fun.c\"\nint main()\n{\n  int a=5,b=19;\n  c = a;    \n  sun(a,b);\n  printf(\"c=%d\\n\",c);\n  return 0;\n}\n```\n\n```\n//file2: fun.c\nint c=0;\nvoid sun(int a, int b)\n{\n\tprintf(\"a+b=%d\\n\",a+b);\n\tc=0;\n\tprintf(\"c=%d\\n\",c);\n}\n```\n上面例子中采用包含.c文件的方式实现的。\n在编译时，直接去编译main.c文件，预处理器会先把fun.c文件中的内容复制到main.c中来，然后再对新的main.c进行编译。\n编译命令：gcc main.c -o main \n这里并没有对fun.c文件进行编译，但是还是生成了最终的main可执行程序。\n\n&&& 也可以通过命令来看一下预处理的结果：\n   gcc -E main.c -o main.cpp\n在main.cpp文件末尾可以看来下面一段代码：\n```\n//main.cpp文件中\n# 2 \"main.c\" 2\n#  \"fun.c\" 1\n//注意这里是fun.c里边的内容\nint c=0;\nvoid sun(int a, int b)\n{\n\tprintf(\"a+b=%d\\n\",a+b);\n\tc=0;\n\tprintf(\"c=%d\\n\",c);\n} \n//这里是main函数\n# 3 \"main.c\" 2\nint main()\n{ \n\tint a=5,b=19;\n\tc = a;\n\tprintf(\"c=%d\\n\",c);\n\tsun(a,b);\n\tprintf(\"c=%d\\n\",c);\n\treturn 0;\n}\n```\n可见，其实就是将fun.c文件中的内容添加到了main函数之前，然后对新的文件进行编译，生成最终的可执行程序。\n\n(2)编译多文件程序：\n同样是上边的例子，把main.c中“ #include \"fun.c\" ”注释掉，加上一句：“extern int c;”因为 c 变量在另外一个文件(fun.c)中定义。\n```\n//file1:  main.c \n#include \"main.h\"\n//#include \"fun.c\"\nextern int c;\nint main()\n{\n  int a=5,b=19;\n  c = a;    \n  sun(a,b);\n  printf(\"c=%d\\n\",c);\n  return 0;\n}\n```\n\n```\n//file2: fun.c\nint c=0;\nvoid sun(int a, int b)\n{\n\tprintf(\"a+b=%d\\n\",a+b);\n\tc=0;\n\tprintf(\"c=%d\\n\",c);\n}\n\n如果还是按照上面的方法只编译main.c的话就会出错，因为变量c和函数sun并没有在main.c中定义，所以编译时需要将fun.c一起编译\n\n编译命令：   \n    gcc -c main.c -o main.o                 #编译main.c\n    gcc -c fun.c -o fun.o                       #编译fun.c\n    gcc main.o fun.o -o main              #用main.o fun.o生成main\nPS： 从上面可以了解到包含.c 文件和多文件的区别了；\n\n1. 包含.c文件的方法: 容易产生\"重定义\",大家想想如果一个工程中有多个文件都同时包含了某一个件，那么这个被包含文件的内容就会被复制到多个文件中去，也就相当于每个包含该文件的文件中都定义被包含文件中的变量和函数，这样在链接时就会产生\"重定义\"错误。\n2. 多文件分开编译的方法: 这个比较好，不容易出现\"重定义\"之类的问题，这也是我们最常用的一种方法，但是并不是像上面这个例子中这样直接去用，而是使用\"头文件\"将各个.c文件联系起来。\n上边这个例子大家会发现，在main.c中需要加上“extern int c;”这样一句声明，如果包含的文件较多？如果全局变量较多？...这个我们可以省掉吗？回答是肯定的！方法就是给它写上一个头文件。\n\n接下来使用头文件(.h)来了实现这个例子的方法：\n```\n//file1:  main.c \n#include \"main.h\"\n#include \"fun.h\"\nint main()\n{\n  int a=5,b=19;\n  c = a;    \n  sun(a,b);\n  printf(\"c=%d\\n\",c);\n  return 0;\n}\n```\n\n```\n//file2: fun.c\nint c=0;\nvoid sun(int a, int b)\n{\n\tprintf(\"a+b=%d\\n\",a+b);\n\tc=0;\n\tprintf(\"c=%d\\n\",c);\n}\n```\n```\n//file3: fun.h \nextern int c;             //把c声明为外部可用的\nvoid sun(int a, int b);   //sun()函数的声明\n```\n在要用到fun.c中定义的函数或变量的文件中只要包含fun.h文件就可以了\n预处理时会把fun.h中的内容复制到包含它的文件中去，而复制的这些内容只是声名，不是定义，所以它被复制再多份也不会出现\"重定义\"的错误。。。\n呵呵，对，就是这样，这就是头文件给我们再来的好处。\n把同一类功能写到一个.c文件中，这样可以把他们划为一个模块，另外再对应的写上一个.h文件做它的声明。这样以后再使用这个模块时只需要把这两个文件添加进工程，同时在要使用模块内函数或变量的文件中包含.h文件就可以了。\n\n所以关于头文件的写法个人总结以下几点:\n(1) 对应的.c文件中写变量、函数的定义\n(2) 对应的.h文件中写变量、函数的声明\n(3) 如果有数据类型的定义 和 宏定义 ，请写的头文件(.h)中\n(4) 头文件中一定加上#ifndef...#define....#endif之类的防止重包含的语句\n(5) 模块的.c文件中别忘包含自己的.h文件\n\n参考链接： https://www.cnblogs.com/Bonker/p/3548276.html\n\n\n3、条件编译\n一般情况下， 源程序所有的行都会参与编译， 但是有时候需要特定满足环境才可以进行编译，这个时候就需要一些条件编译了。\n\n功用：非常方便处理程序的调试版本和正式版本，同时还会增强程序的可移植性。\n\n1) #if 命令\n含义： 如果#if 命令后的参数表达为真，则编译#if到#endif之间的程序段，否则跳过这段程序。#endif命令用来表示#if段结束。\n```\n#if 常数表达式\n\t语句段\n#endif\n如果常数表达式为真，该语句段就会被编译，否则跳过不编译。\n```\n\n#else 作用是给#if为假的时候，提供另外一种选择，其作用和前面讲过的条件判断中的else相近。\n\n#elif 指令表示 简历一种“如果......或者如果......”这样阶梯状多重编译操作选择，这与多分支if语句中的else if类似。\n```\n#if 表达式\n\t语句段\n#elif 表达式1\n\t语句段\n#elif 表达式2\n\t语句段\n...\n#elif 表达式n\n语句段\n#endif\n```\n\n2)#ifdef 及#ifndef 命令\n在#if条件编译的命令中，需要判断符号常量所定义的具体值。 但是有时候并不是需要判断具体值，只需要知道这个符号常量是否给定义了，这时候就不需要#if了。\n可以采用另外一种条件编译的方法，即为：#ifdef与#ifndef命令。\n分别表示： “如果有定义”以及“如果无定义”\n形式如下:\n```\n#ifdef 宏替换名\n语句段\n#endif\n表示： 如果宏替换名已被定义过，则对“语句段”进行编译；如果没有定义#ifdef后面的宏替换名，则不对语句段进行编译\n\n#ifdef 宏替换名\n语句段1\n#else \n语句段2\n#endif\n```\n```\n#ifdef 宏替换名\n语句段\n#endif\n表示： 如果宏替换名未被定义过，则对“语句段”进行编译；如果定义过#ifdef后面的宏替换名，则不对语句段进行编译\n\n#ifndef 宏替换名\n语句段1\n#else \n语句段2\n#endif\n```\n\n3）#undef命令\n表示： 删除事先定义好的宏定义\n#undef 宏替换名\n```\neg: \n#define MAX_SIZE 100\nchar array[MAX_SIZE]\n#undef MAX_SIZE\n#define定义了宏MAX_SIZE， 然后使用undef删除MAX_SIZE，接下来MAX_SIZE 就失效了；\n说明：undef 的主要目的是讲宏名局限在仅需要它的代码中。\n```\n\n4）#line 命令\n#line命令用于显示_LINE_与_FILE_的内容。 _LINE_存放当前编译行的行号，_FILE_存放当前编译的文件名。\n\n```\n形式：\n#line 行号[\"文件名\"]\n```\n行号为任一正整数，可选的文件名为任意有效文件标示符。行号为源程序中当前行号，文件名为原文件名。\n```\nprintf(\"当前行号%d \\n\",__LINE__);\nprintf(\"当前文件名%s \\n\",__FILE__);\n输出结果：\n当前行号18 \n当前文件名/Users/felix/Desktop/test/test/main.cpp\n```\n\n5）#pragma 命令\n《1》#pragma 命令\n功用：设置编译器的状态，或者指示编译器完成一些特定的动作\neg：\n#pragma 参数\n参数类型：\n（1）message参数：在编译信息窗口中输出相应的信息\n（2）code_seg参数：设置程序中函数代码存放的代码段\n（3）once参数：保证头文件被编译一次\n《2》预定义宏名\nANSI标准说明了一下5个预定义替换名\n（1）__LINE__: 当前被编译代码的行号\n（2）__FILE__: 当前源程序的文件名称\n（3）__DATE__: 当前源程序的创建日期\n（4）__TIME__: 当前源程序的创建时间\n（5）__STDC__: 用来判断当前编译器是否为标准C；若是为1，白鸥是符合标准C，否则不是\n&& 如果编译不是标准的，则可能仅支持以上宏名中的几个，或根本不支持。编译程序有时还提供其他预定义的宏名。\n\n\n\n>>>\nPS：宏定义、文件包含、条件编译\n宏定义：用一个标示符表示一个字符串，在宏调用中将该字符串替换宏名。分为不带参数和带有参数的两种形式。\n文件包含：预处理的一个重要功能，可用于将多个源文件链接成为一个源文件进行编译，并且生成一个目标文件。\n条件编译：允许只编译源程序中满足条件的程序段，从而减少内存开销，并提高了程序的效率。\n\n\n\n\n\n\n","slug":"C-预处理","published":1,"updated":"2019-02-16T15:07:06.602Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppckk0005qiojtv2qzm3a","content":"<p>一、 C语言的预处理 【C++、oc等其他语言的预处理应该也是一样的】</p>\n<p><1>预处理是C语言特有的功能；</1></p>\n<p><2>可以使用预处理和具有预处理的功能是C语言和其他高级语言的去呗之一</2></p>\n<p><3>预处理包含许多功能：eg：宏定义、条件编译等，</3></p>\n<p><4>预处理功能便于程序的修改、阅读、移植和调试</4></p>\n<p><5>便于实现模块化程序设计</5></p>\n<p>预处理<br>1）宏定义相关的内容<br>2）文件包含的内容<br>3）条件编译的相关的内容</p>\n<p>1、 宏定义</p>\n<p>#define 命令定义符号常量<br>目的： 使用#define命令就是要定义一个可替换的宏，——————&gt; 编程中简短语句替换长的。</p>\n<p>1.1）不带参数的宏定义</p>\n<p>#define 宏名/标示符 字符串<br>详解：#define用来定义一个标示符和一个字符串，以标示符来替换字符串。<br>【程序中每次遇到该标示符就用所定义的字符串替代它；宏定义的作用相当于给指定到的字符串起个别名】<br>注意事项：<br>（1）#表示这是一条预处理命令<br>（2）宏名是一个标示符，必须符合C语言标示符规定<br>（3）字符串可以是常熟、表达式、格式字符串等。<br>eg：#define PI 3.14159 使用了PI替换掉3.14159<br>注意：<br>（1） 宏定义名字（标示符）一般为大写字母，便于与变量名区别；<br>（2）宏定义不是C语句，不需要在行末加分号</p>\n<p>不带参数的宏定义的强调重点：<br>（1）如果串中带有宏名，则不进行替换； eg： char exp[30]=”This is not that TEST” // 其中TEST是宏定义的<br>（2）如果串长于一行  ，可以在该行末用反斜杠”\\”续行<br>（3）#define 命令出现在程序中行数的外面，宏名的有效范围为定义 “命令之后到此源文件结束”。<br>【编写程序时，通常将所有的#define放到文件的开始处或者独立的文件中，而不是将他们分散到整个程序中】<br>（4）可以用#undef 命令终止宏定义的作用域<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#define TEST &quot;this is an example&quot;</span><br><span class=\"line\">main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(TEST);</span><br><span class=\"line\">\t#undef TEST  // 这里就终止了</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>（5）宏定义用于预处理命令，它不同于定义的变量，只是做字符替换，不分配内存空间。</p>\n<p>PS： 不带参数的宏定义使用标示符替换固定的字符串</p>\n<p>1.2）带参数的宏定义<br>带有参数的宏定义不是简单的字符串替换，还要替换参数 ——————&gt; 替换字符串和参数</p>\n<p>#define 红名(参数表) 字符串<br>eg： #define MIX(a,b) ((a)*(b)+(b)) // 宏定义求两个数的混合运算<br>用宏替换代替实在的函数的一个好处是可以提升代码的速度，因为不存在函数调用。但提升速度也是有代价的： 由于重复编码，而增加了程序长度。【使用宏的地方都会替代，所以会变长】<br>注意事项：<br>1）宏定义时，参数要加括号。   如不加括号，则结果可能是正确的，也可能是错误的。<br>2）宏扩展必须使用括号来保护表达式中低优先级的操作符，以确保调用时能达到想要的结果。<br>3）对带参数的宏的展开，只是将语句中的宏名后面括号内的实参字符串代替#define命令行中的形参<br>4）在宏定义时，宏名与带有参数的括号之间不可以加空格，否则会将空格以后的字符都作为替代字符串的一部分<br>5）在带参宏定义中，形式参数不分配内存单元，因此不必做类型定义</p>\n<p>2、#include 指令<br>文件包含在c语言中是什么意思？ 因为有.h 、.c 文件，具体是怎么样的? 有点困惑</p>\n<p>功能：在一个源文件中使用#include指令可以将另一个源文件的全部内容包含进来，也就是将另外的文件包含到本文件中。 // 这里的全部内容指的是.h 文件还是.c 文件还是引入那个就是指的那个文件罢了。</p>\n<p>#include使编译程序将另一个文件嵌入带有#include的源文件，被读入的源文件必须用双引号或尖括号括起来。<br>eg： #include &lt;stdio.h&gt; / #include “stdio.h”<br>这两种方式均是使用C编译程序读入并编译，用于处理磁盘文件库的子程序。</p>\n<p>#include &lt;stdio.h&gt; 系统到存放c库函数头文件所在的目录中寻找要包含的文件（标准方式）【引入库经常是这样】【省时间】</p>\n<p>#include “stdio.h” 系统现在用户当前目录中寻找要包含的文件，若是找不到，再到存放C库函数头肩所在的目录中寻找要包含的文件。【自己写的通常这样使用】</p>\n<p>将文件嵌入#include命令中的文件内是可行的，这种方式称为嵌套的嵌入文件，嵌套层次依赖于具体的实现。<br>通常用在文件头部的被包含的文件称为“标题文件”或“头部文件”，一般是以.h 作为后缀。<br>一般将如下内容放在.h文件中：<br>（1）宏定义<br>（2）结构、联合和枚举声明<br>（3）typedef 声明<br>（4）外部函数声明<br>（5）全局变量声明</p>\n<p>注意事项：<br>（1）一个#include 命令只能指定一个被包含的文件<br>（2）文件包含可以嵌套的，即在一个被包含文件中还可以包含另一个被包含的文件<br>（3）file1.c中包含file2.h，那么在预编译后就成为一个文件，而不是两个文件，这时如果file2.h中全局静态变量，则该全局变量在file1.c文件中也有效，这时就不需要extern声明。</p>\n<p>现在的理解是: #include “***.h” 引入的是这个头文件，实现的部分没有进行引入。这个命令就是简单的复制拷贝。</p>\n<p>这个需要解决一个问题： 避免文件包含“嵌套重复”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">清楚两点：</span><br><span class=\"line\">(1) 处理时间：文件包含也是以&quot;#&quot;开头来写的(#include ),那么它就是写给预处理器来看了, 也就是说文件包含是会在编译预处理阶段进行处理的。</span><br><span class=\"line\">(2) 处理方法：在预处理阶段，系统自动对#include命令进行处理，具体做法是:降包含文件的内容复制到包含语句(#include )处，得到新的文件，然后再对这个新的文件进行编译。</span><br></pre></td></tr></table></figure>\n<p>Q : 引入头文件，没有引入实现的源文件，编译运行过程是怎么样的？</p>\n<p>一般情况下文件包含分为两种：包含.h文件 和 包含.c文件<br>（1）. 当然对于这两情况也都是按照上面说的方法来处理的。就是简单的拷贝到当前的文件中.<br>（2）. 包含.c文件 和编译多文件程序 是不同的。<br>   多文件程序: 是在源文件编译时把多个文件进行编译、连接在一起生成一个可执行文件。<br>   包含.c文件: 按照我们上边的说法则是把多个文件合并为一个文件进行编译。</p>\n<p>1&gt; 包含.c文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//file1:  main.c </span><br><span class=\"line\">#include &quot;main.h&quot;</span><br><span class=\"line\">#include &quot;fun.c&quot;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int a=5,b=19;</span><br><span class=\"line\">  c = a;    </span><br><span class=\"line\">  sun(a,b);</span><br><span class=\"line\">  printf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//file2: fun.c</span><br><span class=\"line\">int c=0;</span><br><span class=\"line\">void sun(int a, int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(&quot;a+b=%d\\n&quot;,a+b);</span><br><span class=\"line\">\tc=0;</span><br><span class=\"line\">\tprintf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面例子中采用包含.c文件的方式实现的。<br>在编译时，直接去编译main.c文件，预处理器会先把fun.c文件中的内容复制到main.c中来，然后再对新的main.c进行编译。<br>编译命令：gcc main.c -o main<br>这里并没有对fun.c文件进行编译，但是还是生成了最终的main可执行程序。</p>\n<p>&amp;&amp;&amp; 也可以通过命令来看一下预处理的结果：<br>   gcc -E main.c -o main.cpp<br>在main.cpp文件末尾可以看来下面一段代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//main.cpp文件中</span><br><span class=\"line\"># 2 &quot;main.c&quot; 2</span><br><span class=\"line\">#  &quot;fun.c&quot; 1</span><br><span class=\"line\">//注意这里是fun.c里边的内容</span><br><span class=\"line\">int c=0;</span><br><span class=\"line\">void sun(int a, int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(&quot;a+b=%d\\n&quot;,a+b);</span><br><span class=\"line\">\tc=0;</span><br><span class=\"line\">\tprintf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">//这里是main函数</span><br><span class=\"line\"># 3 &quot;main.c&quot; 2</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123; </span><br><span class=\"line\">\tint a=5,b=19;</span><br><span class=\"line\">\tc = a;</span><br><span class=\"line\">\tprintf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">\tsun(a,b);</span><br><span class=\"line\">\tprintf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可见，其实就是将fun.c文件中的内容添加到了main函数之前，然后对新的文件进行编译，生成最终的可执行程序。</p>\n<p>(2)编译多文件程序：<br>同样是上边的例子，把main.c中“ #include “fun.c” ”注释掉，加上一句：“extern int c;”因为 c 变量在另外一个文件(fun.c)中定义。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//file1:  main.c </span><br><span class=\"line\">#include &quot;main.h&quot;</span><br><span class=\"line\">//#include &quot;fun.c&quot;</span><br><span class=\"line\">extern int c;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int a=5,b=19;</span><br><span class=\"line\">  c = a;    </span><br><span class=\"line\">  sun(a,b);</span><br><span class=\"line\">  printf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//file2: fun.c</span><br><span class=\"line\">int c=0;</span><br><span class=\"line\">void sun(int a, int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(&quot;a+b=%d\\n&quot;,a+b);</span><br><span class=\"line\">\tc=0;</span><br><span class=\"line\">\tprintf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">如果还是按照上面的方法只编译main.c的话就会出错，因为变量c和函数sun并没有在main.c中定义，所以编译时需要将fun.c一起编译</span><br><span class=\"line\"></span><br><span class=\"line\">编译命令：   </span><br><span class=\"line\">    gcc -c main.c -o main.o                 #编译main.c</span><br><span class=\"line\">    gcc -c fun.c -o fun.o                       #编译fun.c</span><br><span class=\"line\">    gcc main.o fun.o -o main              #用main.o fun.o生成main</span><br><span class=\"line\">PS： 从上面可以了解到包含.c 文件和多文件的区别了；</span><br><span class=\"line\"></span><br><span class=\"line\">1. 包含.c文件的方法: 容易产生&quot;重定义&quot;,大家想想如果一个工程中有多个文件都同时包含了某一个件，那么这个被包含文件的内容就会被复制到多个文件中去，也就相当于每个包含该文件的文件中都定义被包含文件中的变量和函数，这样在链接时就会产生&quot;重定义&quot;错误。</span><br><span class=\"line\">2. 多文件分开编译的方法: 这个比较好，不容易出现&quot;重定义&quot;之类的问题，这也是我们最常用的一种方法，但是并不是像上面这个例子中这样直接去用，而是使用&quot;头文件&quot;将各个.c文件联系起来。</span><br><span class=\"line\">上边这个例子大家会发现，在main.c中需要加上“extern int c;”这样一句声明，如果包含的文件较多？如果全局变量较多？...这个我们可以省掉吗？回答是肯定的！方法就是给它写上一个头文件。</span><br><span class=\"line\"></span><br><span class=\"line\">接下来使用头文件(.h)来了实现这个例子的方法：</span><br></pre></td></tr></table></figure>\n<p>//file1:  main.c </p>\n<p>#include “main.h”</p>\n<p>#include “fun.h”<br>int main()<br>{<br>  int a=5,b=19;<br>  c = a;<br>  sun(a,b);<br>  printf(“c=%d\\n”,c);<br>  return 0;<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>//file2: fun.c<br>int c=0;<br>void sun(int a, int b)<br>{<br>    printf(“a+b=%d\\n”,a+b);<br>    c=0;<br>    printf(“c=%d\\n”,c);<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\">//file3: fun.h </span><br><span class=\"line\">extern int c;             //把c声明为外部可用的</span><br><span class=\"line\">void sun(int a, int b);   //sun()函数的声明</span><br></pre></td></tr></table></figure></p>\n<p>在要用到fun.c中定义的函数或变量的文件中只要包含fun.h文件就可以了<br>预处理时会把fun.h中的内容复制到包含它的文件中去，而复制的这些内容只是声名，不是定义，所以它被复制再多份也不会出现”重定义”的错误。。。<br>呵呵，对，就是这样，这就是头文件给我们再来的好处。<br>把同一类功能写到一个.c文件中，这样可以把他们划为一个模块，另外再对应的写上一个.h文件做它的声明。这样以后再使用这个模块时只需要把这两个文件添加进工程，同时在要使用模块内函数或变量的文件中包含.h文件就可以了。</p>\n<p>所以关于头文件的写法个人总结以下几点:<br>(1) 对应的.c文件中写变量、函数的定义<br>(2) 对应的.h文件中写变量、函数的声明<br>(3) 如果有数据类型的定义 和 宏定义 ，请写的头文件(.h)中<br>(4) 头文件中一定加上#ifndef…#define….#endif之类的防止重包含的语句<br>(5) 模块的.c文件中别忘包含自己的.h文件</p>\n<p>参考链接： <a href=\"https://www.cnblogs.com/Bonker/p/3548276.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/Bonker/p/3548276.html</a></p>\n<p>3、条件编译<br>一般情况下， 源程序所有的行都会参与编译， 但是有时候需要特定满足环境才可以进行编译，这个时候就需要一些条件编译了。</p>\n<p>功用：非常方便处理程序的调试版本和正式版本，同时还会增强程序的可移植性。</p>\n<p>1) #if 命令<br>含义： 如果#if 命令后的参数表达为真，则编译#if到#endif之间的程序段，否则跳过这段程序。#endif命令用来表示#if段结束。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if 常数表达式</span><br><span class=\"line\">\t语句段</span><br><span class=\"line\">#endif</span><br><span class=\"line\">如果常数表达式为真，该语句段就会被编译，否则跳过不编译。</span><br></pre></td></tr></table></figure></p>\n<p>#else 作用是给#if为假的时候，提供另外一种选择，其作用和前面讲过的条件判断中的else相近。</p>\n<p>#elif 指令表示 简历一种“如果……或者如果……”这样阶梯状多重编译操作选择，这与多分支if语句中的else if类似。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if 表达式</span><br><span class=\"line\">\t语句段</span><br><span class=\"line\">#elif 表达式1</span><br><span class=\"line\">\t语句段</span><br><span class=\"line\">#elif 表达式2</span><br><span class=\"line\">\t语句段</span><br><span class=\"line\">...</span><br><span class=\"line\">#elif 表达式n</span><br><span class=\"line\">语句段</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure></p>\n<p>2)#ifdef 及#ifndef 命令<br>在#if条件编译的命令中，需要判断符号常量所定义的具体值。 但是有时候并不是需要判断具体值，只需要知道这个符号常量是否给定义了，这时候就不需要#if了。<br>可以采用另外一种条件编译的方法，即为：#ifdef与#ifndef命令。<br>分别表示： “如果有定义”以及“如果无定义”<br>形式如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ifdef 宏替换名</span><br><span class=\"line\">语句段</span><br><span class=\"line\">#endif</span><br><span class=\"line\">表示： 如果宏替换名已被定义过，则对“语句段”进行编译；如果没有定义#ifdef后面的宏替换名，则不对语句段进行编译</span><br><span class=\"line\"></span><br><span class=\"line\">#ifdef 宏替换名</span><br><span class=\"line\">语句段1</span><br><span class=\"line\">#else </span><br><span class=\"line\">语句段2</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ifdef 宏替换名</span><br><span class=\"line\">语句段</span><br><span class=\"line\">#endif</span><br><span class=\"line\">表示： 如果宏替换名未被定义过，则对“语句段”进行编译；如果定义过#ifdef后面的宏替换名，则不对语句段进行编译</span><br><span class=\"line\"></span><br><span class=\"line\">#ifndef 宏替换名</span><br><span class=\"line\">语句段1</span><br><span class=\"line\">#else </span><br><span class=\"line\">语句段2</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p>3）#undef命令<br>表示： 删除事先定义好的宏定义</p>\n<p>#undef 宏替换名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg: </span><br><span class=\"line\">#define MAX_SIZE 100</span><br><span class=\"line\">char array[MAX_SIZE]</span><br><span class=\"line\">#undef MAX_SIZE</span><br><span class=\"line\">#define定义了宏MAX_SIZE， 然后使用undef删除MAX_SIZE，接下来MAX_SIZE 就失效了；</span><br><span class=\"line\">说明：undef 的主要目的是讲宏名局限在仅需要它的代码中。</span><br></pre></td></tr></table></figure></p>\n<p>4）#line 命令</p>\n<p>#line命令用于显示<em>LINE</em>与<em>FILE</em>的内容。 <em>LINE</em>存放当前编译行的行号，<em>FILE</em>存放当前编译的文件名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">形式：</span><br><span class=\"line\">#line 行号[&quot;文件名&quot;]</span><br></pre></td></tr></table></figure>\n<p>行号为任一正整数，可选的文件名为任意有效文件标示符。行号为源程序中当前行号，文件名为原文件名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printf(&quot;当前行号%d \\n&quot;,__LINE__);</span><br><span class=\"line\">printf(&quot;当前文件名%s \\n&quot;,__FILE__);</span><br><span class=\"line\">输出结果：</span><br><span class=\"line\">当前行号18 </span><br><span class=\"line\">当前文件名/Users/felix/Desktop/test/test/main.cpp</span><br></pre></td></tr></table></figure></p>\n<p>5）#pragma 命令<br>《1》#pragma 命令<br>功用：设置编译器的状态，或者指示编译器完成一些特定的动作<br>eg：</p>\n<p>#pragma 参数<br>参数类型：<br>（1）message参数：在编译信息窗口中输出相应的信息<br>（2）code_seg参数：设置程序中函数代码存放的代码段<br>（3）once参数：保证头文件被编译一次<br>《2》预定义宏名<br>ANSI标准说明了一下5个预定义替换名<br>（1）<strong>LINE</strong>: 当前被编译代码的行号<br>（2）<strong>FILE</strong>: 当前源程序的文件名称<br>（3）<strong>DATE</strong>: 当前源程序的创建日期<br>（4）<strong>TIME</strong>: 当前源程序的创建时间<br>（5）<strong>STDC</strong>: 用来判断当前编译器是否为标准C；若是为1，白鸥是符合标准C，否则不是<br>&amp;&amp; 如果编译不是标准的，则可能仅支持以上宏名中的几个，或根本不支持。编译程序有时还提供其他预定义的宏名。</p>\n<blockquote>\n<blockquote>\n<blockquote>\n</blockquote>\n<p>PS：宏定义、文件包含、条件编译<br>宏定义：用一个标示符表示一个字符串，在宏调用中将该字符串替换宏名。分为不带参数和带有参数的两种形式。<br>文件包含：预处理的一个重要功能，可用于将多个源文件链接成为一个源文件进行编译，并且生成一个目标文件。<br>条件编译：允许只编译源程序中满足条件的程序段，从而减少内存开销，并提高了程序的效率。</p>\n</blockquote>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>一、 C语言的预处理 【C++、oc等其他语言的预处理应该也是一样的】</p>\n<p><1>预处理是C语言特有的功能；</1></p>\n<p><2>可以使用预处理和具有预处理的功能是C语言和其他高级语言的去呗之一</2></p>\n<p><3>预处理包含许多功能：eg：宏定义、条件编译等，</3></p>\n<p><4>预处理功能便于程序的修改、阅读、移植和调试</4></p>\n<p><5>便于实现模块化程序设计</5></p>\n<p>预处理<br>1）宏定义相关的内容<br>2）文件包含的内容<br>3）条件编译的相关的内容</p>\n<p>1、 宏定义</p>\n<p>#define 命令定义符号常量<br>目的： 使用#define命令就是要定义一个可替换的宏，——————&gt; 编程中简短语句替换长的。</p>\n<p>1.1）不带参数的宏定义</p>\n<p>#define 宏名/标示符 字符串<br>详解：#define用来定义一个标示符和一个字符串，以标示符来替换字符串。<br>【程序中每次遇到该标示符就用所定义的字符串替代它；宏定义的作用相当于给指定到的字符串起个别名】<br>注意事项：<br>（1）#表示这是一条预处理命令<br>（2）宏名是一个标示符，必须符合C语言标示符规定<br>（3）字符串可以是常熟、表达式、格式字符串等。<br>eg：#define PI 3.14159 使用了PI替换掉3.14159<br>注意：<br>（1） 宏定义名字（标示符）一般为大写字母，便于与变量名区别；<br>（2）宏定义不是C语句，不需要在行末加分号</p>\n<p>不带参数的宏定义的强调重点：<br>（1）如果串中带有宏名，则不进行替换； eg： char exp[30]=”This is not that TEST” // 其中TEST是宏定义的<br>（2）如果串长于一行  ，可以在该行末用反斜杠”\\”续行<br>（3）#define 命令出现在程序中行数的外面，宏名的有效范围为定义 “命令之后到此源文件结束”。<br>【编写程序时，通常将所有的#define放到文件的开始处或者独立的文件中，而不是将他们分散到整个程序中】<br>（4）可以用#undef 命令终止宏定义的作用域<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#define TEST &quot;this is an example&quot;</span><br><span class=\"line\">main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(TEST);</span><br><span class=\"line\">\t#undef TEST  // 这里就终止了</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>（5）宏定义用于预处理命令，它不同于定义的变量，只是做字符替换，不分配内存空间。</p>\n<p>PS： 不带参数的宏定义使用标示符替换固定的字符串</p>\n<p>1.2）带参数的宏定义<br>带有参数的宏定义不是简单的字符串替换，还要替换参数 ——————&gt; 替换字符串和参数</p>\n<p>#define 红名(参数表) 字符串<br>eg： #define MIX(a,b) ((a)*(b)+(b)) // 宏定义求两个数的混合运算<br>用宏替换代替实在的函数的一个好处是可以提升代码的速度，因为不存在函数调用。但提升速度也是有代价的： 由于重复编码，而增加了程序长度。【使用宏的地方都会替代，所以会变长】<br>注意事项：<br>1）宏定义时，参数要加括号。   如不加括号，则结果可能是正确的，也可能是错误的。<br>2）宏扩展必须使用括号来保护表达式中低优先级的操作符，以确保调用时能达到想要的结果。<br>3）对带参数的宏的展开，只是将语句中的宏名后面括号内的实参字符串代替#define命令行中的形参<br>4）在宏定义时，宏名与带有参数的括号之间不可以加空格，否则会将空格以后的字符都作为替代字符串的一部分<br>5）在带参宏定义中，形式参数不分配内存单元，因此不必做类型定义</p>\n<p>2、#include 指令<br>文件包含在c语言中是什么意思？ 因为有.h 、.c 文件，具体是怎么样的? 有点困惑</p>\n<p>功能：在一个源文件中使用#include指令可以将另一个源文件的全部内容包含进来，也就是将另外的文件包含到本文件中。 // 这里的全部内容指的是.h 文件还是.c 文件还是引入那个就是指的那个文件罢了。</p>\n<p>#include使编译程序将另一个文件嵌入带有#include的源文件，被读入的源文件必须用双引号或尖括号括起来。<br>eg： #include &lt;stdio.h&gt; / #include “stdio.h”<br>这两种方式均是使用C编译程序读入并编译，用于处理磁盘文件库的子程序。</p>\n<p>#include &lt;stdio.h&gt; 系统到存放c库函数头文件所在的目录中寻找要包含的文件（标准方式）【引入库经常是这样】【省时间】</p>\n<p>#include “stdio.h” 系统现在用户当前目录中寻找要包含的文件，若是找不到，再到存放C库函数头肩所在的目录中寻找要包含的文件。【自己写的通常这样使用】</p>\n<p>将文件嵌入#include命令中的文件内是可行的，这种方式称为嵌套的嵌入文件，嵌套层次依赖于具体的实现。<br>通常用在文件头部的被包含的文件称为“标题文件”或“头部文件”，一般是以.h 作为后缀。<br>一般将如下内容放在.h文件中：<br>（1）宏定义<br>（2）结构、联合和枚举声明<br>（3）typedef 声明<br>（4）外部函数声明<br>（5）全局变量声明</p>\n<p>注意事项：<br>（1）一个#include 命令只能指定一个被包含的文件<br>（2）文件包含可以嵌套的，即在一个被包含文件中还可以包含另一个被包含的文件<br>（3）file1.c中包含file2.h，那么在预编译后就成为一个文件，而不是两个文件，这时如果file2.h中全局静态变量，则该全局变量在file1.c文件中也有效，这时就不需要extern声明。</p>\n<p>现在的理解是: #include “***.h” 引入的是这个头文件，实现的部分没有进行引入。这个命令就是简单的复制拷贝。</p>\n<p>这个需要解决一个问题： 避免文件包含“嵌套重复”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">清楚两点：</span><br><span class=\"line\">(1) 处理时间：文件包含也是以&quot;#&quot;开头来写的(#include ),那么它就是写给预处理器来看了, 也就是说文件包含是会在编译预处理阶段进行处理的。</span><br><span class=\"line\">(2) 处理方法：在预处理阶段，系统自动对#include命令进行处理，具体做法是:降包含文件的内容复制到包含语句(#include )处，得到新的文件，然后再对这个新的文件进行编译。</span><br></pre></td></tr></table></figure>\n<p>Q : 引入头文件，没有引入实现的源文件，编译运行过程是怎么样的？</p>\n<p>一般情况下文件包含分为两种：包含.h文件 和 包含.c文件<br>（1）. 当然对于这两情况也都是按照上面说的方法来处理的。就是简单的拷贝到当前的文件中.<br>（2）. 包含.c文件 和编译多文件程序 是不同的。<br>   多文件程序: 是在源文件编译时把多个文件进行编译、连接在一起生成一个可执行文件。<br>   包含.c文件: 按照我们上边的说法则是把多个文件合并为一个文件进行编译。</p>\n<p>1&gt; 包含.c文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//file1:  main.c </span><br><span class=\"line\">#include &quot;main.h&quot;</span><br><span class=\"line\">#include &quot;fun.c&quot;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int a=5,b=19;</span><br><span class=\"line\">  c = a;    </span><br><span class=\"line\">  sun(a,b);</span><br><span class=\"line\">  printf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//file2: fun.c</span><br><span class=\"line\">int c=0;</span><br><span class=\"line\">void sun(int a, int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(&quot;a+b=%d\\n&quot;,a+b);</span><br><span class=\"line\">\tc=0;</span><br><span class=\"line\">\tprintf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面例子中采用包含.c文件的方式实现的。<br>在编译时，直接去编译main.c文件，预处理器会先把fun.c文件中的内容复制到main.c中来，然后再对新的main.c进行编译。<br>编译命令：gcc main.c -o main<br>这里并没有对fun.c文件进行编译，但是还是生成了最终的main可执行程序。</p>\n<p>&amp;&amp;&amp; 也可以通过命令来看一下预处理的结果：<br>   gcc -E main.c -o main.cpp<br>在main.cpp文件末尾可以看来下面一段代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//main.cpp文件中</span><br><span class=\"line\"># 2 &quot;main.c&quot; 2</span><br><span class=\"line\">#  &quot;fun.c&quot; 1</span><br><span class=\"line\">//注意这里是fun.c里边的内容</span><br><span class=\"line\">int c=0;</span><br><span class=\"line\">void sun(int a, int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(&quot;a+b=%d\\n&quot;,a+b);</span><br><span class=\"line\">\tc=0;</span><br><span class=\"line\">\tprintf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">//这里是main函数</span><br><span class=\"line\"># 3 &quot;main.c&quot; 2</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123; </span><br><span class=\"line\">\tint a=5,b=19;</span><br><span class=\"line\">\tc = a;</span><br><span class=\"line\">\tprintf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">\tsun(a,b);</span><br><span class=\"line\">\tprintf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可见，其实就是将fun.c文件中的内容添加到了main函数之前，然后对新的文件进行编译，生成最终的可执行程序。</p>\n<p>(2)编译多文件程序：<br>同样是上边的例子，把main.c中“ #include “fun.c” ”注释掉，加上一句：“extern int c;”因为 c 变量在另外一个文件(fun.c)中定义。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//file1:  main.c </span><br><span class=\"line\">#include &quot;main.h&quot;</span><br><span class=\"line\">//#include &quot;fun.c&quot;</span><br><span class=\"line\">extern int c;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int a=5,b=19;</span><br><span class=\"line\">  c = a;    </span><br><span class=\"line\">  sun(a,b);</span><br><span class=\"line\">  printf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//file2: fun.c</span><br><span class=\"line\">int c=0;</span><br><span class=\"line\">void sun(int a, int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(&quot;a+b=%d\\n&quot;,a+b);</span><br><span class=\"line\">\tc=0;</span><br><span class=\"line\">\tprintf(&quot;c=%d\\n&quot;,c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">如果还是按照上面的方法只编译main.c的话就会出错，因为变量c和函数sun并没有在main.c中定义，所以编译时需要将fun.c一起编译</span><br><span class=\"line\"></span><br><span class=\"line\">编译命令：   </span><br><span class=\"line\">    gcc -c main.c -o main.o                 #编译main.c</span><br><span class=\"line\">    gcc -c fun.c -o fun.o                       #编译fun.c</span><br><span class=\"line\">    gcc main.o fun.o -o main              #用main.o fun.o生成main</span><br><span class=\"line\">PS： 从上面可以了解到包含.c 文件和多文件的区别了；</span><br><span class=\"line\"></span><br><span class=\"line\">1. 包含.c文件的方法: 容易产生&quot;重定义&quot;,大家想想如果一个工程中有多个文件都同时包含了某一个件，那么这个被包含文件的内容就会被复制到多个文件中去，也就相当于每个包含该文件的文件中都定义被包含文件中的变量和函数，这样在链接时就会产生&quot;重定义&quot;错误。</span><br><span class=\"line\">2. 多文件分开编译的方法: 这个比较好，不容易出现&quot;重定义&quot;之类的问题，这也是我们最常用的一种方法，但是并不是像上面这个例子中这样直接去用，而是使用&quot;头文件&quot;将各个.c文件联系起来。</span><br><span class=\"line\">上边这个例子大家会发现，在main.c中需要加上“extern int c;”这样一句声明，如果包含的文件较多？如果全局变量较多？...这个我们可以省掉吗？回答是肯定的！方法就是给它写上一个头文件。</span><br><span class=\"line\"></span><br><span class=\"line\">接下来使用头文件(.h)来了实现这个例子的方法：</span><br></pre></td></tr></table></figure>\n<p>//file1:  main.c </p>\n<p>#include “main.h”</p>\n<p>#include “fun.h”<br>int main()<br>{<br>  int a=5,b=19;<br>  c = a;<br>  sun(a,b);<br>  printf(“c=%d\\n”,c);<br>  return 0;<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>//file2: fun.c<br>int c=0;<br>void sun(int a, int b)<br>{<br>    printf(“a+b=%d\\n”,a+b);<br>    c=0;<br>    printf(“c=%d\\n”,c);<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\">//file3: fun.h </span><br><span class=\"line\">extern int c;             //把c声明为外部可用的</span><br><span class=\"line\">void sun(int a, int b);   //sun()函数的声明</span><br></pre></td></tr></table></figure></p>\n<p>在要用到fun.c中定义的函数或变量的文件中只要包含fun.h文件就可以了<br>预处理时会把fun.h中的内容复制到包含它的文件中去，而复制的这些内容只是声名，不是定义，所以它被复制再多份也不会出现”重定义”的错误。。。<br>呵呵，对，就是这样，这就是头文件给我们再来的好处。<br>把同一类功能写到一个.c文件中，这样可以把他们划为一个模块，另外再对应的写上一个.h文件做它的声明。这样以后再使用这个模块时只需要把这两个文件添加进工程，同时在要使用模块内函数或变量的文件中包含.h文件就可以了。</p>\n<p>所以关于头文件的写法个人总结以下几点:<br>(1) 对应的.c文件中写变量、函数的定义<br>(2) 对应的.h文件中写变量、函数的声明<br>(3) 如果有数据类型的定义 和 宏定义 ，请写的头文件(.h)中<br>(4) 头文件中一定加上#ifndef…#define….#endif之类的防止重包含的语句<br>(5) 模块的.c文件中别忘包含自己的.h文件</p>\n<p>参考链接： <a href=\"https://www.cnblogs.com/Bonker/p/3548276.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/Bonker/p/3548276.html</a></p>\n<p>3、条件编译<br>一般情况下， 源程序所有的行都会参与编译， 但是有时候需要特定满足环境才可以进行编译，这个时候就需要一些条件编译了。</p>\n<p>功用：非常方便处理程序的调试版本和正式版本，同时还会增强程序的可移植性。</p>\n<p>1) #if 命令<br>含义： 如果#if 命令后的参数表达为真，则编译#if到#endif之间的程序段，否则跳过这段程序。#endif命令用来表示#if段结束。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if 常数表达式</span><br><span class=\"line\">\t语句段</span><br><span class=\"line\">#endif</span><br><span class=\"line\">如果常数表达式为真，该语句段就会被编译，否则跳过不编译。</span><br></pre></td></tr></table></figure></p>\n<p>#else 作用是给#if为假的时候，提供另外一种选择，其作用和前面讲过的条件判断中的else相近。</p>\n<p>#elif 指令表示 简历一种“如果……或者如果……”这样阶梯状多重编译操作选择，这与多分支if语句中的else if类似。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if 表达式</span><br><span class=\"line\">\t语句段</span><br><span class=\"line\">#elif 表达式1</span><br><span class=\"line\">\t语句段</span><br><span class=\"line\">#elif 表达式2</span><br><span class=\"line\">\t语句段</span><br><span class=\"line\">...</span><br><span class=\"line\">#elif 表达式n</span><br><span class=\"line\">语句段</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure></p>\n<p>2)#ifdef 及#ifndef 命令<br>在#if条件编译的命令中，需要判断符号常量所定义的具体值。 但是有时候并不是需要判断具体值，只需要知道这个符号常量是否给定义了，这时候就不需要#if了。<br>可以采用另外一种条件编译的方法，即为：#ifdef与#ifndef命令。<br>分别表示： “如果有定义”以及“如果无定义”<br>形式如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ifdef 宏替换名</span><br><span class=\"line\">语句段</span><br><span class=\"line\">#endif</span><br><span class=\"line\">表示： 如果宏替换名已被定义过，则对“语句段”进行编译；如果没有定义#ifdef后面的宏替换名，则不对语句段进行编译</span><br><span class=\"line\"></span><br><span class=\"line\">#ifdef 宏替换名</span><br><span class=\"line\">语句段1</span><br><span class=\"line\">#else </span><br><span class=\"line\">语句段2</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ifdef 宏替换名</span><br><span class=\"line\">语句段</span><br><span class=\"line\">#endif</span><br><span class=\"line\">表示： 如果宏替换名未被定义过，则对“语句段”进行编译；如果定义过#ifdef后面的宏替换名，则不对语句段进行编译</span><br><span class=\"line\"></span><br><span class=\"line\">#ifndef 宏替换名</span><br><span class=\"line\">语句段1</span><br><span class=\"line\">#else </span><br><span class=\"line\">语句段2</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p>3）#undef命令<br>表示： 删除事先定义好的宏定义</p>\n<p>#undef 宏替换名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg: </span><br><span class=\"line\">#define MAX_SIZE 100</span><br><span class=\"line\">char array[MAX_SIZE]</span><br><span class=\"line\">#undef MAX_SIZE</span><br><span class=\"line\">#define定义了宏MAX_SIZE， 然后使用undef删除MAX_SIZE，接下来MAX_SIZE 就失效了；</span><br><span class=\"line\">说明：undef 的主要目的是讲宏名局限在仅需要它的代码中。</span><br></pre></td></tr></table></figure></p>\n<p>4）#line 命令</p>\n<p>#line命令用于显示<em>LINE</em>与<em>FILE</em>的内容。 <em>LINE</em>存放当前编译行的行号，<em>FILE</em>存放当前编译的文件名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">形式：</span><br><span class=\"line\">#line 行号[&quot;文件名&quot;]</span><br></pre></td></tr></table></figure>\n<p>行号为任一正整数，可选的文件名为任意有效文件标示符。行号为源程序中当前行号，文件名为原文件名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printf(&quot;当前行号%d \\n&quot;,__LINE__);</span><br><span class=\"line\">printf(&quot;当前文件名%s \\n&quot;,__FILE__);</span><br><span class=\"line\">输出结果：</span><br><span class=\"line\">当前行号18 </span><br><span class=\"line\">当前文件名/Users/felix/Desktop/test/test/main.cpp</span><br></pre></td></tr></table></figure></p>\n<p>5）#pragma 命令<br>《1》#pragma 命令<br>功用：设置编译器的状态，或者指示编译器完成一些特定的动作<br>eg：</p>\n<p>#pragma 参数<br>参数类型：<br>（1）message参数：在编译信息窗口中输出相应的信息<br>（2）code_seg参数：设置程序中函数代码存放的代码段<br>（3）once参数：保证头文件被编译一次<br>《2》预定义宏名<br>ANSI标准说明了一下5个预定义替换名<br>（1）<strong>LINE</strong>: 当前被编译代码的行号<br>（2）<strong>FILE</strong>: 当前源程序的文件名称<br>（3）<strong>DATE</strong>: 当前源程序的创建日期<br>（4）<strong>TIME</strong>: 当前源程序的创建时间<br>（5）<strong>STDC</strong>: 用来判断当前编译器是否为标准C；若是为1，白鸥是符合标准C，否则不是<br>&amp;&amp; 如果编译不是标准的，则可能仅支持以上宏名中的几个，或根本不支持。编译程序有时还提供其他预定义的宏名。</p>\n<blockquote>\n<blockquote>\n<blockquote>\n</blockquote>\n<p>PS：宏定义、文件包含、条件编译<br>宏定义：用一个标示符表示一个字符串，在宏调用中将该字符串替换宏名。分为不带参数和带有参数的两种形式。<br>文件包含：预处理的一个重要功能，可用于将多个源文件链接成为一个源文件进行编译，并且生成一个目标文件。<br>条件编译：允许只编译源程序中满足条件的程序段，从而减少内存开销，并提高了程序的效率。</p>\n</blockquote>\n</blockquote>\n"},{"title":"C语言标准库等","date":"2019-02-17T11:57:42.000Z","_content":"\n1、C语言的基本内容暂时就先不看了， 可以参考这里的基本内容：\n[C语言的内容参考链接](http://www.runoob.com/cprogramming/c-standard-library.html)\n[C语言学习资源](https://github.com/jobbole/awesome-c-cn)\n\n2、系统函数\n &&&&\n系统库里面的内容；\nusr/include 开发环境下提供对应的系统库[开发对应系统上面的应用都是有这个系统库的]\n&&& 有时间也要熟悉一下系统常用的函数内容\n>了解:ANSI C\nANSI C是由美国国家标准协会（ANSI）及国际标准化组织（ISO）推出的关于C语言的标准。ANSI C 主要标准化了现存的实践， 同时增加了一些来自 C++ 的内容 （主要是函数原型） 并支持多国字符集 （包括备受争议的三字符序列）。 ANSI C 标准同时规定了 C 运行期库例程的标准。\n\n&&&\n\n3、下面会对C语言中系统的一些标准库的了解：\n1）<assert.h>\nC 标准库的 assert.h头文件提供了一个名为 assert 的宏，它可用于验证程序做出的假设，并在假设为假时输出诊断消息。\n```\nvoid assert(int expression);\nexpression： 一个变量或任何C表达式；true， assert不执行任何动作。否则，assert（）会在标准错误stderr上显示错误消息，并且终止程序。\n[可以查看一下里面的几个内部的使用方法，上面的这个方法最常用]\n```\n\n2)<ctype.h> /<_ctype.h>文件\n1>提供一些函数用于测试和映射字符。\n2>函数接受 int 作为参数，它的值必须是 EOF 或表示为一个无符号字符。\n3> 如果参数 c 满足描述的条件，则这些函数返回非零（true）。如果参数 c 不满足描述的条件，则这些函数返回零。\n```\n1\tint isalnum(int c)\n该函数检查所传的字符是否是字母和数字。\n2\tint isalpha(int c)\n该函数检查所传的字符是否是字母。\n3\tint iscntrl(int c)\n该函数检查所传的字符是否是控制字符。\n4\tint isdigit(int c)\n该函数检查所传的字符是否是十进制数字。\n5\tint isgraph(int c)\n该函数检查所传的字符是否有图形表示法。\n6\tint islower(int c)\n该函数检查所传的字符是否是小写字母。\n7\tint isprint(int c)\n该函数检查所传的字符是否是可打印的。\n8\tint ispunct(int c)\n该函数检查所传的字符是否是标点符号字符。\n9\tint isspace(int c)\n该函数检查所传的字符是否是空白字符。\n10\tint isupper(int c)\n该函数检查所传的字符是否是大写字母。\n11\tint isxdigit(int c)\n该函数检查所传的字符是否是十六进制数字。\n标准库还包含了两个转换函数，它们接受并返回一个 \"int\"\n13 int tolower(int c)\n该函数把大写字母转换为小写字母。\n14 int toupper(int c)\n该函数把小写字母转换为大写字母。\n```\n\n3)<errno.h> 文件\n1>定义了整数变量 errno，它是通过系统调用设置的，在错误事件中的某些库函数表明了什么发生了错误。该宏扩展为类型为 int 的可更改的左值，因此它可以被一个程序读取和修改。\n2>在程序启动时，errno 设置为零，C 标准库中的特定函数修改它的值为一些非零值以表示某些类型的错误。您也可以在适当的时候修改它的值或重置为零。\n3>errno.h 头文件定义了一系列表示不同错误代码的宏，这些宏应扩展为类型为 int 的整数常量表达式。\n```\n1\textern int errno\n这是通过系统调用设置的宏，在错误事件中的某些库函数表明了什么发生了错误。\n2\tEDOM Domain Error\n这个宏表示一个域错误，它在输入参数超出数学函数定义的域时发生，errno 被设置为 EDOM。\n3\tERANGE Range Error\n这个宏表示一个范围错误，它在输入参数超出数学函数定义的范围时发生，errno 被设置为 ERANGE。\n4、在对应的头文件中看到了对应的1~106的错误码。\n```\n\n4）<float.h> 头文件\n1>包含了一组与浮点值相关的依赖于平台的常量。\n```\n浮点数是由下面四个元素组成的：\n组件\t组件描述\nS\t符号 ( +/- )\nb\t指数表示的基数，2 表示二进制，10 表示十进制，16 表示十六进制，等等...\ne\t指数，一个介于最小值 emin 和最大值 emax 之间的整数。\np\t精度，基数 b 的有效位数\neg: 表示一个浮点数的值如下：\nfloating-point = ( S ) p x be\n或\nfloating-point = (+/-) precision x baseexponent\n```\n2> 库宏：【注意，所有的实例 FLT 是指类型 float，DBL 是指类型 double，LDBL 是指类型 long double。】\n```\nFLT_ROUNDS\t定义浮点加法的舍入模式，它可以是下列任何一个值：\n-1 - 无法确定\n0 - 趋向于零\n1 - 去最近的值\n2 - 趋向于正无穷\n3 - 趋向于负无穷\nFLT_RADIX 2\t这个宏定义了指数表示的基数。基数 2 表示二进制，基数 10 表示十进制，基数 16 表示十六进制。\n\nFLT_MANT_DIG\nDBL_MANT_DIG\nLDBL_MANT_DIG\n这些宏定义了 FLT_RADIX 基数中的位数。\n\nFLT_DIG 6\nDBL_DIG 10\nLDBL_DIG 10\n这些宏定义了舍入后不会改变表示的十进制数字的最大值（基数 10）。\n\nFLT_MIN_EXP\nDBL_MIN_EXP\nLDBL_MIN_EXP\n这些宏定义了基数为 FLT_RADIX 时的指数的最小负整数值。\n\nFLT_MIN_10_EXP -37\nDBL_MIN_10_EXP -37\nLDBL_MIN_10_EXP -37\n这些宏定义了基数为 10 时的指数的最小负整数值。\n\nFLT_MAX_EXP\nDBL_MAX_EXP\nLDBL_MAX_EXP\n这些宏定义了基数为 FLT_RADIX 时的指数的最大整数值。\n\nFLT_MAX_10_EXP +37\nDBL_MAX_10_EXP +37\nLDBL_MAX_10_EXP +37\n这些宏定义了基数为 10 时的指数的最大整数值。\n\nFLT_MAX 1E+37\nDBL_MAX 1E+37\nLDBL_MAX 1E+37\n这些宏定义最大的有限浮点值。\n\nFLT_EPSILON 1E-5\nDBL_EPSILON 1E-9\nLDBL_EPSILON 1E-9\n这些宏定义了可表示的最小有效数字。\n\nFLT_MIN 1E-37\nDBL_MIN 1E-37\nLDBL_MIN 1E-37\n这些宏定义了最小的浮点值。\n```\n\n5) <limits.h>\nlimits.h 头文件决定了各种变量类型的各种属性。定义在该头文件中的宏限制了各种变量类型（比如 char、int 和 long）的值。\n这些限制指定了变量不能存储任何超出这些限制的值，例如一个无符号可以存储的最大值是 255。\n```\n宏\t  \t\t值\t描述\nCHAR_BIT\t8\t\t定义一个字节的比特数。\nSCHAR_MIN\t-128\t定义一个有符号字符的最小值。\nSCHAR_MAX\t127\t\t定义一个有符号字符的最大值。\nUCHAR_MAX\t255\t\t定义一个无符号字符的最大值。\nCHAR_MIN\t0\t\t定义类型 char 的最小值，如果 char 表示负值，则它的值等于 SCHAR_MIN，否则等于 0。\nCHAR_MAX\t127\t\t定义类型 char 的最大值，如果 char 表示负值，则它的值等于 SCHAR_MAX，否则等于 UCHAR_MAX。\nMB_LEN_MAX\t1\t\t定义多字节字符中的最大字节数。\nSHRT_MIN\t-32768\t定义一个短整型的最小值。\nSHRT_MAX\t+32767\t定义一个短整型的最大值。\nUSHRT_MAX\t65535\t定义一个无符号短整型的最大值。\nINT_MIN\t\t-32768\t定义一个整型的最小值。\nINT_MAX\t\t+32767\t定义一个整型的最大值。\nUINT_MAX\t65535\t定义一个无符号整型的最大值。\nLONG_MIN\t-2147483648\t定义一个长整型的最小值。\nLONG_MAX\t+2147483647\t定义一个长整型的最大值。\nULONG_MAX\t4294967295\t定义一个无符号长整型的最大值。\n```\n\n6) <locale.h>\nlocale.h 头文件定义了特定地域的设置，比如日期格式和货币符号。接下来我们将介绍一些宏，以及一个重要的结构 struct lconv 和两个重要的函数。\n```\n库函数\n序号\t函数 & 描述\n1\tchar *setlocale(int category, const char *locale)\n设置或读取地域化信息。\n2\tstruct lconv *localeconv(void)\n设置或读取地域化信息。\n\n会使用到下面的宏：\n序号\t宏 & 描述\n1\tLC_ALL\n设置下面的所有选项。\n2\tLC_COLLATE\n影响 strcoll 和 strxfrm 函数。\n3\tLC_CTYPE\n影响所有字符函数。\n4\tLC_MONETARY\n影响 localeconv 函数提供的货币信息。\n5\tLC_NUMERIC\n影响 localeconv 函数提供的小数点格式化和信息。\n6\tLC_TIME\n影响 strftime 函数。\n```\n\n```\n库结构\ntypedef struct {\n   char *decimal_point; 用于非货币值的小数点字符.\n   char *thousands_sep;  用于非货币值的千位分隔符。\n   char *grouping;     一个表示非货币量中每组数字大小的字符串。每个字符代表一个整数值，每个整数指定当前组的位数。值为 0 意味着前一个值将应用于剩余的分组。\n   char *int_curr_symbol; 国际货币符号使用的字符串。前三个字符是由 ISO 4217:1987 指定的，第四个字符用于分隔货币符号和货币量。\n   char *currency_symbol;  用于货币的本地符号。\n   char *mon_decimal_point;  用于货币值的小数点字符。\n   char *mon_thousands_sep;  用于货币值的千位分隔符。\n   char *mon_grouping;   一个表示货币值中每组数字大小的字符串。每个字符代表一个整数值，每个整数指定当前组的位数。值为 0 意味着前一个值将应用于剩余的分组。\n   char *positive_sign;  用于正货币值的字符。\n   char *negative_sign;  用于负货币值的字符。\n   char int_frac_digits;  国际货币值中小数点后要显示的位数。\n   char frac_digits;\t\t货币值中小数点后要显示的位数。\n   char p_cs_precedes;\t\t如果等于 1，则 currency_symbol 出现在正货币值之前。如果等于 0，则 currency_symbol 出现在正货币值之后。\n   char p_sep_by_space;\t\t如果等于 1，则 currency_symbol 和正货币值之间使用空格分隔。如果等于 0，则 currency_symbol 和正货币值之间不使用空格分隔。\n   char n_cs_precedes;\t\t如果等于 1，则 currency_symbol 出现在负货币值之前。如果等于 0，则 currency_symbol 出现在负货币值之后。\n   char n_sep_by_space;\t\t如果等于 1，则 currency_symbol 和负货币值之间使用空格分隔。如果等于 0，则 currency_symbol 和负货币值之间不使用空格分隔。\n   char p_sign_posn;\t表示正货币值中正号的位置。\n   char n_sign_posn;  表示负货币值中负号的位置。\n} lconv\n\n下面的值用于 p_sign_posn 和 n_sign_posn:\n值\t描述\n0\t封装值和 currency_symbol 的括号。\n1\t放置在值和 currency_symbol 之前的符号。\n2\t放置在值和 currency_symbol 之后的符号。\n3\t紧挨着放置在值和 currency_symbol 之前的符号。\n4\t紧挨着放置在值和 currency_symbol 之后的符号。\n\n```\n7) <math.h> \nmath.h 头文件定义了各种数学函数和一个宏。在这个库中所有可用的功能都带有一个 double 类型的参数，且都返回 double 类型的结果。\n>HUGE_VAL\n当函数的结果不可以表示为浮点数时。如果是因为结果的幅度太大以致于无法表示，则函数会设置 errno 为 ERANGE 来表示范围错误，并返回一个由宏 HUGE_VAL 或者它的否定（- HUGE_VAL）命名的一个特定的很大的值。\n如果结果的幅度太小，则会返回零值。在这种情况下，error 可能会被设置为 ERANGE，也有可能不会被设置为 ERANGE。\n函数内容查看头文件。\n\n8） <setjmp.h>\n定义了宏 setjmp()、函数 longjmp() 和变量类型 jmp_buf，该变量类型会绕过正常的函数调用和返回规则。\n\njmp_buf \n这是一个用于存储宏 setjmp() 和函数 longjmp() 相关信息的数组类型。\n\n> int setjmp(jmp_buf environment)\n这个宏把当前环境保存在变量 environment 中，以便函数 longjmp() 后续使用。如果这个宏直接从宏调用中返回，则它会返回零，但是如果它从 longjmp() 函数调用中返回，则它会返回一个非零值。\n\n> void longjmp(jmp_buf environment, int value)\n该函数恢复最近一次调用 setjmp() 宏时保存的环境，jmp_buf 参数的设置是由之前调用 setjmp() 生成的。  || setjmp 中的唯一的一个函数\n\n9）<signal.h>\nsignal.h 头文件定义了一个变量类型 sig_atomic_t、两个函数调用和一些宏来处理程序执行期间报告的不同信号。\n|| 也就是处理系统信息的内容\n\n10）  <stdarg.h>\nstdarg.h 头文件定义了一个变量类型 va_list 和三个宏，这三个宏可用于在参数个数未知（即参数个数可变）时获取函数中的参数。\n可变参数的函数通在参数列表的末尾是使用省略号(,...)定义的。\n\n11）<stddef.h>\n义了各种变量类型和宏。这些定义中的大部分也出现在其它头文件中。\n\n12）stdio .h \n头文件定义了三个变量类型、一些宏和各种函数来执行输入和输出。\n\n13） stdlib .h \n头文件定义了四个变量类型、一些宏和各种通用工具函数。\n\n14）string .h\n 头文件定义了一个变量类型、一个宏和各种操作字符数组的函数。\n\n15）time.h \n头文件定义了四个变量类型、两个宏和各种操作日期和时间的函数。\n\n\n\n\n","source":"_posts/C语言标准库等.md","raw":"---\ntitle: C语言标准库等\ndate: 2019-02-17 19:57:42\ntags: C\ncategories: C\n---\n\n1、C语言的基本内容暂时就先不看了， 可以参考这里的基本内容：\n[C语言的内容参考链接](http://www.runoob.com/cprogramming/c-standard-library.html)\n[C语言学习资源](https://github.com/jobbole/awesome-c-cn)\n\n2、系统函数\n &&&&\n系统库里面的内容；\nusr/include 开发环境下提供对应的系统库[开发对应系统上面的应用都是有这个系统库的]\n&&& 有时间也要熟悉一下系统常用的函数内容\n>了解:ANSI C\nANSI C是由美国国家标准协会（ANSI）及国际标准化组织（ISO）推出的关于C语言的标准。ANSI C 主要标准化了现存的实践， 同时增加了一些来自 C++ 的内容 （主要是函数原型） 并支持多国字符集 （包括备受争议的三字符序列）。 ANSI C 标准同时规定了 C 运行期库例程的标准。\n\n&&&\n\n3、下面会对C语言中系统的一些标准库的了解：\n1）<assert.h>\nC 标准库的 assert.h头文件提供了一个名为 assert 的宏，它可用于验证程序做出的假设，并在假设为假时输出诊断消息。\n```\nvoid assert(int expression);\nexpression： 一个变量或任何C表达式；true， assert不执行任何动作。否则，assert（）会在标准错误stderr上显示错误消息，并且终止程序。\n[可以查看一下里面的几个内部的使用方法，上面的这个方法最常用]\n```\n\n2)<ctype.h> /<_ctype.h>文件\n1>提供一些函数用于测试和映射字符。\n2>函数接受 int 作为参数，它的值必须是 EOF 或表示为一个无符号字符。\n3> 如果参数 c 满足描述的条件，则这些函数返回非零（true）。如果参数 c 不满足描述的条件，则这些函数返回零。\n```\n1\tint isalnum(int c)\n该函数检查所传的字符是否是字母和数字。\n2\tint isalpha(int c)\n该函数检查所传的字符是否是字母。\n3\tint iscntrl(int c)\n该函数检查所传的字符是否是控制字符。\n4\tint isdigit(int c)\n该函数检查所传的字符是否是十进制数字。\n5\tint isgraph(int c)\n该函数检查所传的字符是否有图形表示法。\n6\tint islower(int c)\n该函数检查所传的字符是否是小写字母。\n7\tint isprint(int c)\n该函数检查所传的字符是否是可打印的。\n8\tint ispunct(int c)\n该函数检查所传的字符是否是标点符号字符。\n9\tint isspace(int c)\n该函数检查所传的字符是否是空白字符。\n10\tint isupper(int c)\n该函数检查所传的字符是否是大写字母。\n11\tint isxdigit(int c)\n该函数检查所传的字符是否是十六进制数字。\n标准库还包含了两个转换函数，它们接受并返回一个 \"int\"\n13 int tolower(int c)\n该函数把大写字母转换为小写字母。\n14 int toupper(int c)\n该函数把小写字母转换为大写字母。\n```\n\n3)<errno.h> 文件\n1>定义了整数变量 errno，它是通过系统调用设置的，在错误事件中的某些库函数表明了什么发生了错误。该宏扩展为类型为 int 的可更改的左值，因此它可以被一个程序读取和修改。\n2>在程序启动时，errno 设置为零，C 标准库中的特定函数修改它的值为一些非零值以表示某些类型的错误。您也可以在适当的时候修改它的值或重置为零。\n3>errno.h 头文件定义了一系列表示不同错误代码的宏，这些宏应扩展为类型为 int 的整数常量表达式。\n```\n1\textern int errno\n这是通过系统调用设置的宏，在错误事件中的某些库函数表明了什么发生了错误。\n2\tEDOM Domain Error\n这个宏表示一个域错误，它在输入参数超出数学函数定义的域时发生，errno 被设置为 EDOM。\n3\tERANGE Range Error\n这个宏表示一个范围错误，它在输入参数超出数学函数定义的范围时发生，errno 被设置为 ERANGE。\n4、在对应的头文件中看到了对应的1~106的错误码。\n```\n\n4）<float.h> 头文件\n1>包含了一组与浮点值相关的依赖于平台的常量。\n```\n浮点数是由下面四个元素组成的：\n组件\t组件描述\nS\t符号 ( +/- )\nb\t指数表示的基数，2 表示二进制，10 表示十进制，16 表示十六进制，等等...\ne\t指数，一个介于最小值 emin 和最大值 emax 之间的整数。\np\t精度，基数 b 的有效位数\neg: 表示一个浮点数的值如下：\nfloating-point = ( S ) p x be\n或\nfloating-point = (+/-) precision x baseexponent\n```\n2> 库宏：【注意，所有的实例 FLT 是指类型 float，DBL 是指类型 double，LDBL 是指类型 long double。】\n```\nFLT_ROUNDS\t定义浮点加法的舍入模式，它可以是下列任何一个值：\n-1 - 无法确定\n0 - 趋向于零\n1 - 去最近的值\n2 - 趋向于正无穷\n3 - 趋向于负无穷\nFLT_RADIX 2\t这个宏定义了指数表示的基数。基数 2 表示二进制，基数 10 表示十进制，基数 16 表示十六进制。\n\nFLT_MANT_DIG\nDBL_MANT_DIG\nLDBL_MANT_DIG\n这些宏定义了 FLT_RADIX 基数中的位数。\n\nFLT_DIG 6\nDBL_DIG 10\nLDBL_DIG 10\n这些宏定义了舍入后不会改变表示的十进制数字的最大值（基数 10）。\n\nFLT_MIN_EXP\nDBL_MIN_EXP\nLDBL_MIN_EXP\n这些宏定义了基数为 FLT_RADIX 时的指数的最小负整数值。\n\nFLT_MIN_10_EXP -37\nDBL_MIN_10_EXP -37\nLDBL_MIN_10_EXP -37\n这些宏定义了基数为 10 时的指数的最小负整数值。\n\nFLT_MAX_EXP\nDBL_MAX_EXP\nLDBL_MAX_EXP\n这些宏定义了基数为 FLT_RADIX 时的指数的最大整数值。\n\nFLT_MAX_10_EXP +37\nDBL_MAX_10_EXP +37\nLDBL_MAX_10_EXP +37\n这些宏定义了基数为 10 时的指数的最大整数值。\n\nFLT_MAX 1E+37\nDBL_MAX 1E+37\nLDBL_MAX 1E+37\n这些宏定义最大的有限浮点值。\n\nFLT_EPSILON 1E-5\nDBL_EPSILON 1E-9\nLDBL_EPSILON 1E-9\n这些宏定义了可表示的最小有效数字。\n\nFLT_MIN 1E-37\nDBL_MIN 1E-37\nLDBL_MIN 1E-37\n这些宏定义了最小的浮点值。\n```\n\n5) <limits.h>\nlimits.h 头文件决定了各种变量类型的各种属性。定义在该头文件中的宏限制了各种变量类型（比如 char、int 和 long）的值。\n这些限制指定了变量不能存储任何超出这些限制的值，例如一个无符号可以存储的最大值是 255。\n```\n宏\t  \t\t值\t描述\nCHAR_BIT\t8\t\t定义一个字节的比特数。\nSCHAR_MIN\t-128\t定义一个有符号字符的最小值。\nSCHAR_MAX\t127\t\t定义一个有符号字符的最大值。\nUCHAR_MAX\t255\t\t定义一个无符号字符的最大值。\nCHAR_MIN\t0\t\t定义类型 char 的最小值，如果 char 表示负值，则它的值等于 SCHAR_MIN，否则等于 0。\nCHAR_MAX\t127\t\t定义类型 char 的最大值，如果 char 表示负值，则它的值等于 SCHAR_MAX，否则等于 UCHAR_MAX。\nMB_LEN_MAX\t1\t\t定义多字节字符中的最大字节数。\nSHRT_MIN\t-32768\t定义一个短整型的最小值。\nSHRT_MAX\t+32767\t定义一个短整型的最大值。\nUSHRT_MAX\t65535\t定义一个无符号短整型的最大值。\nINT_MIN\t\t-32768\t定义一个整型的最小值。\nINT_MAX\t\t+32767\t定义一个整型的最大值。\nUINT_MAX\t65535\t定义一个无符号整型的最大值。\nLONG_MIN\t-2147483648\t定义一个长整型的最小值。\nLONG_MAX\t+2147483647\t定义一个长整型的最大值。\nULONG_MAX\t4294967295\t定义一个无符号长整型的最大值。\n```\n\n6) <locale.h>\nlocale.h 头文件定义了特定地域的设置，比如日期格式和货币符号。接下来我们将介绍一些宏，以及一个重要的结构 struct lconv 和两个重要的函数。\n```\n库函数\n序号\t函数 & 描述\n1\tchar *setlocale(int category, const char *locale)\n设置或读取地域化信息。\n2\tstruct lconv *localeconv(void)\n设置或读取地域化信息。\n\n会使用到下面的宏：\n序号\t宏 & 描述\n1\tLC_ALL\n设置下面的所有选项。\n2\tLC_COLLATE\n影响 strcoll 和 strxfrm 函数。\n3\tLC_CTYPE\n影响所有字符函数。\n4\tLC_MONETARY\n影响 localeconv 函数提供的货币信息。\n5\tLC_NUMERIC\n影响 localeconv 函数提供的小数点格式化和信息。\n6\tLC_TIME\n影响 strftime 函数。\n```\n\n```\n库结构\ntypedef struct {\n   char *decimal_point; 用于非货币值的小数点字符.\n   char *thousands_sep;  用于非货币值的千位分隔符。\n   char *grouping;     一个表示非货币量中每组数字大小的字符串。每个字符代表一个整数值，每个整数指定当前组的位数。值为 0 意味着前一个值将应用于剩余的分组。\n   char *int_curr_symbol; 国际货币符号使用的字符串。前三个字符是由 ISO 4217:1987 指定的，第四个字符用于分隔货币符号和货币量。\n   char *currency_symbol;  用于货币的本地符号。\n   char *mon_decimal_point;  用于货币值的小数点字符。\n   char *mon_thousands_sep;  用于货币值的千位分隔符。\n   char *mon_grouping;   一个表示货币值中每组数字大小的字符串。每个字符代表一个整数值，每个整数指定当前组的位数。值为 0 意味着前一个值将应用于剩余的分组。\n   char *positive_sign;  用于正货币值的字符。\n   char *negative_sign;  用于负货币值的字符。\n   char int_frac_digits;  国际货币值中小数点后要显示的位数。\n   char frac_digits;\t\t货币值中小数点后要显示的位数。\n   char p_cs_precedes;\t\t如果等于 1，则 currency_symbol 出现在正货币值之前。如果等于 0，则 currency_symbol 出现在正货币值之后。\n   char p_sep_by_space;\t\t如果等于 1，则 currency_symbol 和正货币值之间使用空格分隔。如果等于 0，则 currency_symbol 和正货币值之间不使用空格分隔。\n   char n_cs_precedes;\t\t如果等于 1，则 currency_symbol 出现在负货币值之前。如果等于 0，则 currency_symbol 出现在负货币值之后。\n   char n_sep_by_space;\t\t如果等于 1，则 currency_symbol 和负货币值之间使用空格分隔。如果等于 0，则 currency_symbol 和负货币值之间不使用空格分隔。\n   char p_sign_posn;\t表示正货币值中正号的位置。\n   char n_sign_posn;  表示负货币值中负号的位置。\n} lconv\n\n下面的值用于 p_sign_posn 和 n_sign_posn:\n值\t描述\n0\t封装值和 currency_symbol 的括号。\n1\t放置在值和 currency_symbol 之前的符号。\n2\t放置在值和 currency_symbol 之后的符号。\n3\t紧挨着放置在值和 currency_symbol 之前的符号。\n4\t紧挨着放置在值和 currency_symbol 之后的符号。\n\n```\n7) <math.h> \nmath.h 头文件定义了各种数学函数和一个宏。在这个库中所有可用的功能都带有一个 double 类型的参数，且都返回 double 类型的结果。\n>HUGE_VAL\n当函数的结果不可以表示为浮点数时。如果是因为结果的幅度太大以致于无法表示，则函数会设置 errno 为 ERANGE 来表示范围错误，并返回一个由宏 HUGE_VAL 或者它的否定（- HUGE_VAL）命名的一个特定的很大的值。\n如果结果的幅度太小，则会返回零值。在这种情况下，error 可能会被设置为 ERANGE，也有可能不会被设置为 ERANGE。\n函数内容查看头文件。\n\n8） <setjmp.h>\n定义了宏 setjmp()、函数 longjmp() 和变量类型 jmp_buf，该变量类型会绕过正常的函数调用和返回规则。\n\njmp_buf \n这是一个用于存储宏 setjmp() 和函数 longjmp() 相关信息的数组类型。\n\n> int setjmp(jmp_buf environment)\n这个宏把当前环境保存在变量 environment 中，以便函数 longjmp() 后续使用。如果这个宏直接从宏调用中返回，则它会返回零，但是如果它从 longjmp() 函数调用中返回，则它会返回一个非零值。\n\n> void longjmp(jmp_buf environment, int value)\n该函数恢复最近一次调用 setjmp() 宏时保存的环境，jmp_buf 参数的设置是由之前调用 setjmp() 生成的。  || setjmp 中的唯一的一个函数\n\n9）<signal.h>\nsignal.h 头文件定义了一个变量类型 sig_atomic_t、两个函数调用和一些宏来处理程序执行期间报告的不同信号。\n|| 也就是处理系统信息的内容\n\n10）  <stdarg.h>\nstdarg.h 头文件定义了一个变量类型 va_list 和三个宏，这三个宏可用于在参数个数未知（即参数个数可变）时获取函数中的参数。\n可变参数的函数通在参数列表的末尾是使用省略号(,...)定义的。\n\n11）<stddef.h>\n义了各种变量类型和宏。这些定义中的大部分也出现在其它头文件中。\n\n12）stdio .h \n头文件定义了三个变量类型、一些宏和各种函数来执行输入和输出。\n\n13） stdlib .h \n头文件定义了四个变量类型、一些宏和各种通用工具函数。\n\n14）string .h\n 头文件定义了一个变量类型、一个宏和各种操作字符数组的函数。\n\n15）time.h \n头文件定义了四个变量类型、两个宏和各种操作日期和时间的函数。\n\n\n\n\n","slug":"C语言标准库等","published":1,"updated":"2019-02-18T16:14:13.226Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppckn0006qiojuwwuxmg4","content":"<p>1、C语言的基本内容暂时就先不看了， 可以参考这里的基本内容：<br><a href=\"http://www.runoob.com/cprogramming/c-standard-library.html\" target=\"_blank\" rel=\"noopener\">C语言的内容参考链接</a><br><a href=\"https://github.com/jobbole/awesome-c-cn\" target=\"_blank\" rel=\"noopener\">C语言学习资源</a></p>\n<p>2、系统函数<br> &amp;&amp;&amp;&amp;<br>系统库里面的内容；<br>usr/include 开发环境下提供对应的系统库[开发对应系统上面的应用都是有这个系统库的]<br>&amp;&amp;&amp; 有时间也要熟悉一下系统常用的函数内容</p>\n<blockquote>\n<p>了解:ANSI C<br>ANSI C是由美国国家标准协会（ANSI）及国际标准化组织（ISO）推出的关于C语言的标准。ANSI C 主要标准化了现存的实践， 同时增加了一些来自 C++ 的内容 （主要是函数原型） 并支持多国字符集 （包括备受争议的三字符序列）。 ANSI C 标准同时规定了 C 运行期库例程的标准。</p>\n</blockquote>\n<p>&amp;&amp;&amp;</p>\n<p>3、下面会对C语言中系统的一些标准库的了解：<br>1）&lt;assert.h&gt;<br>C 标准库的 assert.h头文件提供了一个名为 assert 的宏，它可用于验证程序做出的假设，并在假设为假时输出诊断消息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void assert(int expression);</span><br><span class=\"line\">expression： 一个变量或任何C表达式；true， assert不执行任何动作。否则，assert（）会在标准错误stderr上显示错误消息，并且终止程序。</span><br><span class=\"line\">[可以查看一下里面的几个内部的使用方法，上面的这个方法最常用]</span><br></pre></td></tr></table></figure></p>\n<p>2)&lt;ctype.h&gt; /&lt;_ctype.h&gt;文件<br>1&gt;提供一些函数用于测试和映射字符。<br>2&gt;函数接受 int 作为参数，它的值必须是 EOF 或表示为一个无符号字符。<br>3&gt; 如果参数 c 满足描述的条件，则这些函数返回非零（true）。如果参数 c 不满足描述的条件，则这些函数返回零。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1\tint isalnum(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是字母和数字。</span><br><span class=\"line\">2\tint isalpha(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是字母。</span><br><span class=\"line\">3\tint iscntrl(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是控制字符。</span><br><span class=\"line\">4\tint isdigit(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是十进制数字。</span><br><span class=\"line\">5\tint isgraph(int c)</span><br><span class=\"line\">该函数检查所传的字符是否有图形表示法。</span><br><span class=\"line\">6\tint islower(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是小写字母。</span><br><span class=\"line\">7\tint isprint(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是可打印的。</span><br><span class=\"line\">8\tint ispunct(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是标点符号字符。</span><br><span class=\"line\">9\tint isspace(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是空白字符。</span><br><span class=\"line\">10\tint isupper(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是大写字母。</span><br><span class=\"line\">11\tint isxdigit(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是十六进制数字。</span><br><span class=\"line\">标准库还包含了两个转换函数，它们接受并返回一个 &quot;int&quot;</span><br><span class=\"line\">13 int tolower(int c)</span><br><span class=\"line\">该函数把大写字母转换为小写字母。</span><br><span class=\"line\">14 int toupper(int c)</span><br><span class=\"line\">该函数把小写字母转换为大写字母。</span><br></pre></td></tr></table></figure></p>\n<p>3)&lt;errno.h&gt; 文件<br>1&gt;定义了整数变量 errno，它是通过系统调用设置的，在错误事件中的某些库函数表明了什么发生了错误。该宏扩展为类型为 int 的可更改的左值，因此它可以被一个程序读取和修改。<br>2&gt;在程序启动时，errno 设置为零，C 标准库中的特定函数修改它的值为一些非零值以表示某些类型的错误。您也可以在适当的时候修改它的值或重置为零。<br>3&gt;errno.h 头文件定义了一系列表示不同错误代码的宏，这些宏应扩展为类型为 int 的整数常量表达式。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1\textern int errno</span><br><span class=\"line\">这是通过系统调用设置的宏，在错误事件中的某些库函数表明了什么发生了错误。</span><br><span class=\"line\">2\tEDOM Domain Error</span><br><span class=\"line\">这个宏表示一个域错误，它在输入参数超出数学函数定义的域时发生，errno 被设置为 EDOM。</span><br><span class=\"line\">3\tERANGE Range Error</span><br><span class=\"line\">这个宏表示一个范围错误，它在输入参数超出数学函数定义的范围时发生，errno 被设置为 ERANGE。</span><br><span class=\"line\">4、在对应的头文件中看到了对应的1~106的错误码。</span><br></pre></td></tr></table></figure></p>\n<p>4）&lt;float.h&gt; 头文件<br>1&gt;包含了一组与浮点值相关的依赖于平台的常量。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">浮点数是由下面四个元素组成的：</span><br><span class=\"line\">组件\t组件描述</span><br><span class=\"line\">S\t符号 ( +/- )</span><br><span class=\"line\">b\t指数表示的基数，2 表示二进制，10 表示十进制，16 表示十六进制，等等...</span><br><span class=\"line\">e\t指数，一个介于最小值 emin 和最大值 emax 之间的整数。</span><br><span class=\"line\">p\t精度，基数 b 的有效位数</span><br><span class=\"line\">eg: 表示一个浮点数的值如下：</span><br><span class=\"line\">floating-point = ( S ) p x be</span><br><span class=\"line\">或</span><br><span class=\"line\">floating-point = (+/-) precision x baseexponent</span><br></pre></td></tr></table></figure></p>\n<p>2&gt; 库宏：【注意，所有的实例 FLT 是指类型 float，DBL 是指类型 double，LDBL 是指类型 long double。】<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FLT_ROUNDS\t定义浮点加法的舍入模式，它可以是下列任何一个值：</span><br><span class=\"line\">-1 - 无法确定</span><br><span class=\"line\">0 - 趋向于零</span><br><span class=\"line\">1 - 去最近的值</span><br><span class=\"line\">2 - 趋向于正无穷</span><br><span class=\"line\">3 - 趋向于负无穷</span><br><span class=\"line\">FLT_RADIX 2\t这个宏定义了指数表示的基数。基数 2 表示二进制，基数 10 表示十进制，基数 16 表示十六进制。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MANT_DIG</span><br><span class=\"line\">DBL_MANT_DIG</span><br><span class=\"line\">LDBL_MANT_DIG</span><br><span class=\"line\">这些宏定义了 FLT_RADIX 基数中的位数。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_DIG 6</span><br><span class=\"line\">DBL_DIG 10</span><br><span class=\"line\">LDBL_DIG 10</span><br><span class=\"line\">这些宏定义了舍入后不会改变表示的十进制数字的最大值（基数 10）。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MIN_EXP</span><br><span class=\"line\">DBL_MIN_EXP</span><br><span class=\"line\">LDBL_MIN_EXP</span><br><span class=\"line\">这些宏定义了基数为 FLT_RADIX 时的指数的最小负整数值。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MIN_10_EXP -37</span><br><span class=\"line\">DBL_MIN_10_EXP -37</span><br><span class=\"line\">LDBL_MIN_10_EXP -37</span><br><span class=\"line\">这些宏定义了基数为 10 时的指数的最小负整数值。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MAX_EXP</span><br><span class=\"line\">DBL_MAX_EXP</span><br><span class=\"line\">LDBL_MAX_EXP</span><br><span class=\"line\">这些宏定义了基数为 FLT_RADIX 时的指数的最大整数值。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MAX_10_EXP +37</span><br><span class=\"line\">DBL_MAX_10_EXP +37</span><br><span class=\"line\">LDBL_MAX_10_EXP +37</span><br><span class=\"line\">这些宏定义了基数为 10 时的指数的最大整数值。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MAX 1E+37</span><br><span class=\"line\">DBL_MAX 1E+37</span><br><span class=\"line\">LDBL_MAX 1E+37</span><br><span class=\"line\">这些宏定义最大的有限浮点值。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_EPSILON 1E-5</span><br><span class=\"line\">DBL_EPSILON 1E-9</span><br><span class=\"line\">LDBL_EPSILON 1E-9</span><br><span class=\"line\">这些宏定义了可表示的最小有效数字。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MIN 1E-37</span><br><span class=\"line\">DBL_MIN 1E-37</span><br><span class=\"line\">LDBL_MIN 1E-37</span><br><span class=\"line\">这些宏定义了最小的浮点值。</span><br></pre></td></tr></table></figure></p>\n<p>5) &lt;limits.h&gt;<br>limits.h 头文件决定了各种变量类型的各种属性。定义在该头文件中的宏限制了各种变量类型（比如 char、int 和 long）的值。<br>这些限制指定了变量不能存储任何超出这些限制的值，例如一个无符号可以存储的最大值是 255。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">宏\t  \t\t值\t描述</span><br><span class=\"line\">CHAR_BIT\t8\t\t定义一个字节的比特数。</span><br><span class=\"line\">SCHAR_MIN\t-128\t定义一个有符号字符的最小值。</span><br><span class=\"line\">SCHAR_MAX\t127\t\t定义一个有符号字符的最大值。</span><br><span class=\"line\">UCHAR_MAX\t255\t\t定义一个无符号字符的最大值。</span><br><span class=\"line\">CHAR_MIN\t0\t\t定义类型 char 的最小值，如果 char 表示负值，则它的值等于 SCHAR_MIN，否则等于 0。</span><br><span class=\"line\">CHAR_MAX\t127\t\t定义类型 char 的最大值，如果 char 表示负值，则它的值等于 SCHAR_MAX，否则等于 UCHAR_MAX。</span><br><span class=\"line\">MB_LEN_MAX\t1\t\t定义多字节字符中的最大字节数。</span><br><span class=\"line\">SHRT_MIN\t-32768\t定义一个短整型的最小值。</span><br><span class=\"line\">SHRT_MAX\t+32767\t定义一个短整型的最大值。</span><br><span class=\"line\">USHRT_MAX\t65535\t定义一个无符号短整型的最大值。</span><br><span class=\"line\">INT_MIN\t\t-32768\t定义一个整型的最小值。</span><br><span class=\"line\">INT_MAX\t\t+32767\t定义一个整型的最大值。</span><br><span class=\"line\">UINT_MAX\t65535\t定义一个无符号整型的最大值。</span><br><span class=\"line\">LONG_MIN\t-2147483648\t定义一个长整型的最小值。</span><br><span class=\"line\">LONG_MAX\t+2147483647\t定义一个长整型的最大值。</span><br><span class=\"line\">ULONG_MAX\t4294967295\t定义一个无符号长整型的最大值。</span><br></pre></td></tr></table></figure></p>\n<p>6) &lt;locale.h&gt;<br>locale.h 头文件定义了特定地域的设置，比如日期格式和货币符号。接下来我们将介绍一些宏，以及一个重要的结构 struct lconv 和两个重要的函数。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">库函数</span><br><span class=\"line\">序号\t函数 &amp; 描述</span><br><span class=\"line\">1\tchar *setlocale(int category, const char *locale)</span><br><span class=\"line\">设置或读取地域化信息。</span><br><span class=\"line\">2\tstruct lconv *localeconv(void)</span><br><span class=\"line\">设置或读取地域化信息。</span><br><span class=\"line\"></span><br><span class=\"line\">会使用到下面的宏：</span><br><span class=\"line\">序号\t宏 &amp; 描述</span><br><span class=\"line\">1\tLC_ALL</span><br><span class=\"line\">设置下面的所有选项。</span><br><span class=\"line\">2\tLC_COLLATE</span><br><span class=\"line\">影响 strcoll 和 strxfrm 函数。</span><br><span class=\"line\">3\tLC_CTYPE</span><br><span class=\"line\">影响所有字符函数。</span><br><span class=\"line\">4\tLC_MONETARY</span><br><span class=\"line\">影响 localeconv 函数提供的货币信息。</span><br><span class=\"line\">5\tLC_NUMERIC</span><br><span class=\"line\">影响 localeconv 函数提供的小数点格式化和信息。</span><br><span class=\"line\">6\tLC_TIME</span><br><span class=\"line\">影响 strftime 函数。</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">库结构</span><br><span class=\"line\">typedef struct &#123;</span><br><span class=\"line\">   char *decimal_point; 用于非货币值的小数点字符.</span><br><span class=\"line\">   char *thousands_sep;  用于非货币值的千位分隔符。</span><br><span class=\"line\">   char *grouping;     一个表示非货币量中每组数字大小的字符串。每个字符代表一个整数值，每个整数指定当前组的位数。值为 0 意味着前一个值将应用于剩余的分组。</span><br><span class=\"line\">   char *int_curr_symbol; 国际货币符号使用的字符串。前三个字符是由 ISO 4217:1987 指定的，第四个字符用于分隔货币符号和货币量。</span><br><span class=\"line\">   char *currency_symbol;  用于货币的本地符号。</span><br><span class=\"line\">   char *mon_decimal_point;  用于货币值的小数点字符。</span><br><span class=\"line\">   char *mon_thousands_sep;  用于货币值的千位分隔符。</span><br><span class=\"line\">   char *mon_grouping;   一个表示货币值中每组数字大小的字符串。每个字符代表一个整数值，每个整数指定当前组的位数。值为 0 意味着前一个值将应用于剩余的分组。</span><br><span class=\"line\">   char *positive_sign;  用于正货币值的字符。</span><br><span class=\"line\">   char *negative_sign;  用于负货币值的字符。</span><br><span class=\"line\">   char int_frac_digits;  国际货币值中小数点后要显示的位数。</span><br><span class=\"line\">   char frac_digits;\t\t货币值中小数点后要显示的位数。</span><br><span class=\"line\">   char p_cs_precedes;\t\t如果等于 1，则 currency_symbol 出现在正货币值之前。如果等于 0，则 currency_symbol 出现在正货币值之后。</span><br><span class=\"line\">   char p_sep_by_space;\t\t如果等于 1，则 currency_symbol 和正货币值之间使用空格分隔。如果等于 0，则 currency_symbol 和正货币值之间不使用空格分隔。</span><br><span class=\"line\">   char n_cs_precedes;\t\t如果等于 1，则 currency_symbol 出现在负货币值之前。如果等于 0，则 currency_symbol 出现在负货币值之后。</span><br><span class=\"line\">   char n_sep_by_space;\t\t如果等于 1，则 currency_symbol 和负货币值之间使用空格分隔。如果等于 0，则 currency_symbol 和负货币值之间不使用空格分隔。</span><br><span class=\"line\">   char p_sign_posn;\t表示正货币值中正号的位置。</span><br><span class=\"line\">   char n_sign_posn;  表示负货币值中负号的位置。</span><br><span class=\"line\">&#125; lconv</span><br><span class=\"line\"></span><br><span class=\"line\">下面的值用于 p_sign_posn 和 n_sign_posn:</span><br><span class=\"line\">值\t描述</span><br><span class=\"line\">0\t封装值和 currency_symbol 的括号。</span><br><span class=\"line\">1\t放置在值和 currency_symbol 之前的符号。</span><br><span class=\"line\">2\t放置在值和 currency_symbol 之后的符号。</span><br><span class=\"line\">3\t紧挨着放置在值和 currency_symbol 之前的符号。</span><br><span class=\"line\">4\t紧挨着放置在值和 currency_symbol 之后的符号。</span><br></pre></td></tr></table></figure>\n<p>7) &lt;math.h&gt;<br>math.h 头文件定义了各种数学函数和一个宏。在这个库中所有可用的功能都带有一个 double 类型的参数，且都返回 double 类型的结果。</p>\n<blockquote>\n<p>HUGE_VAL<br>当函数的结果不可以表示为浮点数时。如果是因为结果的幅度太大以致于无法表示，则函数会设置 errno 为 ERANGE 来表示范围错误，并返回一个由宏 HUGE_VAL 或者它的否定（- HUGE_VAL）命名的一个特定的很大的值。<br>如果结果的幅度太小，则会返回零值。在这种情况下，error 可能会被设置为 ERANGE，也有可能不会被设置为 ERANGE。<br>函数内容查看头文件。</p>\n</blockquote>\n<p>8） &lt;setjmp.h&gt;<br>定义了宏 setjmp()、函数 longjmp() 和变量类型 jmp_buf，该变量类型会绕过正常的函数调用和返回规则。</p>\n<p>jmp_buf<br>这是一个用于存储宏 setjmp() 和函数 longjmp() 相关信息的数组类型。</p>\n<blockquote>\n<p>int setjmp(jmp_buf environment)<br>这个宏把当前环境保存在变量 environment 中，以便函数 longjmp() 后续使用。如果这个宏直接从宏调用中返回，则它会返回零，但是如果它从 longjmp() 函数调用中返回，则它会返回一个非零值。</p>\n</blockquote>\n<blockquote>\n<p>void longjmp(jmp_buf environment, int value)<br>该函数恢复最近一次调用 setjmp() 宏时保存的环境，jmp_buf 参数的设置是由之前调用 setjmp() 生成的。  || setjmp 中的唯一的一个函数</p>\n</blockquote>\n<p>9）&lt;signal.h&gt;<br>signal.h 头文件定义了一个变量类型 sig_atomic_t、两个函数调用和一些宏来处理程序执行期间报告的不同信号。<br>|| 也就是处理系统信息的内容</p>\n<p>10）  &lt;stdarg.h&gt;<br>stdarg.h 头文件定义了一个变量类型 va_list 和三个宏，这三个宏可用于在参数个数未知（即参数个数可变）时获取函数中的参数。<br>可变参数的函数通在参数列表的末尾是使用省略号(,…)定义的。</p>\n<p>11）&lt;stddef.h&gt;<br>义了各种变量类型和宏。这些定义中的大部分也出现在其它头文件中。</p>\n<p>12）stdio .h<br>头文件定义了三个变量类型、一些宏和各种函数来执行输入和输出。</p>\n<p>13） stdlib .h<br>头文件定义了四个变量类型、一些宏和各种通用工具函数。</p>\n<p>14）string .h<br> 头文件定义了一个变量类型、一个宏和各种操作字符数组的函数。</p>\n<p>15）time.h<br>头文件定义了四个变量类型、两个宏和各种操作日期和时间的函数。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1、C语言的基本内容暂时就先不看了， 可以参考这里的基本内容：<br><a href=\"http://www.runoob.com/cprogramming/c-standard-library.html\" target=\"_blank\" rel=\"noopener\">C语言的内容参考链接</a><br><a href=\"https://github.com/jobbole/awesome-c-cn\" target=\"_blank\" rel=\"noopener\">C语言学习资源</a></p>\n<p>2、系统函数<br> &amp;&amp;&amp;&amp;<br>系统库里面的内容；<br>usr/include 开发环境下提供对应的系统库[开发对应系统上面的应用都是有这个系统库的]<br>&amp;&amp;&amp; 有时间也要熟悉一下系统常用的函数内容</p>\n<blockquote>\n<p>了解:ANSI C<br>ANSI C是由美国国家标准协会（ANSI）及国际标准化组织（ISO）推出的关于C语言的标准。ANSI C 主要标准化了现存的实践， 同时增加了一些来自 C++ 的内容 （主要是函数原型） 并支持多国字符集 （包括备受争议的三字符序列）。 ANSI C 标准同时规定了 C 运行期库例程的标准。</p>\n</blockquote>\n<p>&amp;&amp;&amp;</p>\n<p>3、下面会对C语言中系统的一些标准库的了解：<br>1）&lt;assert.h&gt;<br>C 标准库的 assert.h头文件提供了一个名为 assert 的宏，它可用于验证程序做出的假设，并在假设为假时输出诊断消息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void assert(int expression);</span><br><span class=\"line\">expression： 一个变量或任何C表达式；true， assert不执行任何动作。否则，assert（）会在标准错误stderr上显示错误消息，并且终止程序。</span><br><span class=\"line\">[可以查看一下里面的几个内部的使用方法，上面的这个方法最常用]</span><br></pre></td></tr></table></figure></p>\n<p>2)&lt;ctype.h&gt; /&lt;_ctype.h&gt;文件<br>1&gt;提供一些函数用于测试和映射字符。<br>2&gt;函数接受 int 作为参数，它的值必须是 EOF 或表示为一个无符号字符。<br>3&gt; 如果参数 c 满足描述的条件，则这些函数返回非零（true）。如果参数 c 不满足描述的条件，则这些函数返回零。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1\tint isalnum(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是字母和数字。</span><br><span class=\"line\">2\tint isalpha(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是字母。</span><br><span class=\"line\">3\tint iscntrl(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是控制字符。</span><br><span class=\"line\">4\tint isdigit(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是十进制数字。</span><br><span class=\"line\">5\tint isgraph(int c)</span><br><span class=\"line\">该函数检查所传的字符是否有图形表示法。</span><br><span class=\"line\">6\tint islower(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是小写字母。</span><br><span class=\"line\">7\tint isprint(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是可打印的。</span><br><span class=\"line\">8\tint ispunct(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是标点符号字符。</span><br><span class=\"line\">9\tint isspace(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是空白字符。</span><br><span class=\"line\">10\tint isupper(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是大写字母。</span><br><span class=\"line\">11\tint isxdigit(int c)</span><br><span class=\"line\">该函数检查所传的字符是否是十六进制数字。</span><br><span class=\"line\">标准库还包含了两个转换函数，它们接受并返回一个 &quot;int&quot;</span><br><span class=\"line\">13 int tolower(int c)</span><br><span class=\"line\">该函数把大写字母转换为小写字母。</span><br><span class=\"line\">14 int toupper(int c)</span><br><span class=\"line\">该函数把小写字母转换为大写字母。</span><br></pre></td></tr></table></figure></p>\n<p>3)&lt;errno.h&gt; 文件<br>1&gt;定义了整数变量 errno，它是通过系统调用设置的，在错误事件中的某些库函数表明了什么发生了错误。该宏扩展为类型为 int 的可更改的左值，因此它可以被一个程序读取和修改。<br>2&gt;在程序启动时，errno 设置为零，C 标准库中的特定函数修改它的值为一些非零值以表示某些类型的错误。您也可以在适当的时候修改它的值或重置为零。<br>3&gt;errno.h 头文件定义了一系列表示不同错误代码的宏，这些宏应扩展为类型为 int 的整数常量表达式。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1\textern int errno</span><br><span class=\"line\">这是通过系统调用设置的宏，在错误事件中的某些库函数表明了什么发生了错误。</span><br><span class=\"line\">2\tEDOM Domain Error</span><br><span class=\"line\">这个宏表示一个域错误，它在输入参数超出数学函数定义的域时发生，errno 被设置为 EDOM。</span><br><span class=\"line\">3\tERANGE Range Error</span><br><span class=\"line\">这个宏表示一个范围错误，它在输入参数超出数学函数定义的范围时发生，errno 被设置为 ERANGE。</span><br><span class=\"line\">4、在对应的头文件中看到了对应的1~106的错误码。</span><br></pre></td></tr></table></figure></p>\n<p>4）&lt;float.h&gt; 头文件<br>1&gt;包含了一组与浮点值相关的依赖于平台的常量。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">浮点数是由下面四个元素组成的：</span><br><span class=\"line\">组件\t组件描述</span><br><span class=\"line\">S\t符号 ( +/- )</span><br><span class=\"line\">b\t指数表示的基数，2 表示二进制，10 表示十进制，16 表示十六进制，等等...</span><br><span class=\"line\">e\t指数，一个介于最小值 emin 和最大值 emax 之间的整数。</span><br><span class=\"line\">p\t精度，基数 b 的有效位数</span><br><span class=\"line\">eg: 表示一个浮点数的值如下：</span><br><span class=\"line\">floating-point = ( S ) p x be</span><br><span class=\"line\">或</span><br><span class=\"line\">floating-point = (+/-) precision x baseexponent</span><br></pre></td></tr></table></figure></p>\n<p>2&gt; 库宏：【注意，所有的实例 FLT 是指类型 float，DBL 是指类型 double，LDBL 是指类型 long double。】<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FLT_ROUNDS\t定义浮点加法的舍入模式，它可以是下列任何一个值：</span><br><span class=\"line\">-1 - 无法确定</span><br><span class=\"line\">0 - 趋向于零</span><br><span class=\"line\">1 - 去最近的值</span><br><span class=\"line\">2 - 趋向于正无穷</span><br><span class=\"line\">3 - 趋向于负无穷</span><br><span class=\"line\">FLT_RADIX 2\t这个宏定义了指数表示的基数。基数 2 表示二进制，基数 10 表示十进制，基数 16 表示十六进制。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MANT_DIG</span><br><span class=\"line\">DBL_MANT_DIG</span><br><span class=\"line\">LDBL_MANT_DIG</span><br><span class=\"line\">这些宏定义了 FLT_RADIX 基数中的位数。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_DIG 6</span><br><span class=\"line\">DBL_DIG 10</span><br><span class=\"line\">LDBL_DIG 10</span><br><span class=\"line\">这些宏定义了舍入后不会改变表示的十进制数字的最大值（基数 10）。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MIN_EXP</span><br><span class=\"line\">DBL_MIN_EXP</span><br><span class=\"line\">LDBL_MIN_EXP</span><br><span class=\"line\">这些宏定义了基数为 FLT_RADIX 时的指数的最小负整数值。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MIN_10_EXP -37</span><br><span class=\"line\">DBL_MIN_10_EXP -37</span><br><span class=\"line\">LDBL_MIN_10_EXP -37</span><br><span class=\"line\">这些宏定义了基数为 10 时的指数的最小负整数值。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MAX_EXP</span><br><span class=\"line\">DBL_MAX_EXP</span><br><span class=\"line\">LDBL_MAX_EXP</span><br><span class=\"line\">这些宏定义了基数为 FLT_RADIX 时的指数的最大整数值。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MAX_10_EXP +37</span><br><span class=\"line\">DBL_MAX_10_EXP +37</span><br><span class=\"line\">LDBL_MAX_10_EXP +37</span><br><span class=\"line\">这些宏定义了基数为 10 时的指数的最大整数值。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MAX 1E+37</span><br><span class=\"line\">DBL_MAX 1E+37</span><br><span class=\"line\">LDBL_MAX 1E+37</span><br><span class=\"line\">这些宏定义最大的有限浮点值。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_EPSILON 1E-5</span><br><span class=\"line\">DBL_EPSILON 1E-9</span><br><span class=\"line\">LDBL_EPSILON 1E-9</span><br><span class=\"line\">这些宏定义了可表示的最小有效数字。</span><br><span class=\"line\"></span><br><span class=\"line\">FLT_MIN 1E-37</span><br><span class=\"line\">DBL_MIN 1E-37</span><br><span class=\"line\">LDBL_MIN 1E-37</span><br><span class=\"line\">这些宏定义了最小的浮点值。</span><br></pre></td></tr></table></figure></p>\n<p>5) &lt;limits.h&gt;<br>limits.h 头文件决定了各种变量类型的各种属性。定义在该头文件中的宏限制了各种变量类型（比如 char、int 和 long）的值。<br>这些限制指定了变量不能存储任何超出这些限制的值，例如一个无符号可以存储的最大值是 255。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">宏\t  \t\t值\t描述</span><br><span class=\"line\">CHAR_BIT\t8\t\t定义一个字节的比特数。</span><br><span class=\"line\">SCHAR_MIN\t-128\t定义一个有符号字符的最小值。</span><br><span class=\"line\">SCHAR_MAX\t127\t\t定义一个有符号字符的最大值。</span><br><span class=\"line\">UCHAR_MAX\t255\t\t定义一个无符号字符的最大值。</span><br><span class=\"line\">CHAR_MIN\t0\t\t定义类型 char 的最小值，如果 char 表示负值，则它的值等于 SCHAR_MIN，否则等于 0。</span><br><span class=\"line\">CHAR_MAX\t127\t\t定义类型 char 的最大值，如果 char 表示负值，则它的值等于 SCHAR_MAX，否则等于 UCHAR_MAX。</span><br><span class=\"line\">MB_LEN_MAX\t1\t\t定义多字节字符中的最大字节数。</span><br><span class=\"line\">SHRT_MIN\t-32768\t定义一个短整型的最小值。</span><br><span class=\"line\">SHRT_MAX\t+32767\t定义一个短整型的最大值。</span><br><span class=\"line\">USHRT_MAX\t65535\t定义一个无符号短整型的最大值。</span><br><span class=\"line\">INT_MIN\t\t-32768\t定义一个整型的最小值。</span><br><span class=\"line\">INT_MAX\t\t+32767\t定义一个整型的最大值。</span><br><span class=\"line\">UINT_MAX\t65535\t定义一个无符号整型的最大值。</span><br><span class=\"line\">LONG_MIN\t-2147483648\t定义一个长整型的最小值。</span><br><span class=\"line\">LONG_MAX\t+2147483647\t定义一个长整型的最大值。</span><br><span class=\"line\">ULONG_MAX\t4294967295\t定义一个无符号长整型的最大值。</span><br></pre></td></tr></table></figure></p>\n<p>6) &lt;locale.h&gt;<br>locale.h 头文件定义了特定地域的设置，比如日期格式和货币符号。接下来我们将介绍一些宏，以及一个重要的结构 struct lconv 和两个重要的函数。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">库函数</span><br><span class=\"line\">序号\t函数 &amp; 描述</span><br><span class=\"line\">1\tchar *setlocale(int category, const char *locale)</span><br><span class=\"line\">设置或读取地域化信息。</span><br><span class=\"line\">2\tstruct lconv *localeconv(void)</span><br><span class=\"line\">设置或读取地域化信息。</span><br><span class=\"line\"></span><br><span class=\"line\">会使用到下面的宏：</span><br><span class=\"line\">序号\t宏 &amp; 描述</span><br><span class=\"line\">1\tLC_ALL</span><br><span class=\"line\">设置下面的所有选项。</span><br><span class=\"line\">2\tLC_COLLATE</span><br><span class=\"line\">影响 strcoll 和 strxfrm 函数。</span><br><span class=\"line\">3\tLC_CTYPE</span><br><span class=\"line\">影响所有字符函数。</span><br><span class=\"line\">4\tLC_MONETARY</span><br><span class=\"line\">影响 localeconv 函数提供的货币信息。</span><br><span class=\"line\">5\tLC_NUMERIC</span><br><span class=\"line\">影响 localeconv 函数提供的小数点格式化和信息。</span><br><span class=\"line\">6\tLC_TIME</span><br><span class=\"line\">影响 strftime 函数。</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">库结构</span><br><span class=\"line\">typedef struct &#123;</span><br><span class=\"line\">   char *decimal_point; 用于非货币值的小数点字符.</span><br><span class=\"line\">   char *thousands_sep;  用于非货币值的千位分隔符。</span><br><span class=\"line\">   char *grouping;     一个表示非货币量中每组数字大小的字符串。每个字符代表一个整数值，每个整数指定当前组的位数。值为 0 意味着前一个值将应用于剩余的分组。</span><br><span class=\"line\">   char *int_curr_symbol; 国际货币符号使用的字符串。前三个字符是由 ISO 4217:1987 指定的，第四个字符用于分隔货币符号和货币量。</span><br><span class=\"line\">   char *currency_symbol;  用于货币的本地符号。</span><br><span class=\"line\">   char *mon_decimal_point;  用于货币值的小数点字符。</span><br><span class=\"line\">   char *mon_thousands_sep;  用于货币值的千位分隔符。</span><br><span class=\"line\">   char *mon_grouping;   一个表示货币值中每组数字大小的字符串。每个字符代表一个整数值，每个整数指定当前组的位数。值为 0 意味着前一个值将应用于剩余的分组。</span><br><span class=\"line\">   char *positive_sign;  用于正货币值的字符。</span><br><span class=\"line\">   char *negative_sign;  用于负货币值的字符。</span><br><span class=\"line\">   char int_frac_digits;  国际货币值中小数点后要显示的位数。</span><br><span class=\"line\">   char frac_digits;\t\t货币值中小数点后要显示的位数。</span><br><span class=\"line\">   char p_cs_precedes;\t\t如果等于 1，则 currency_symbol 出现在正货币值之前。如果等于 0，则 currency_symbol 出现在正货币值之后。</span><br><span class=\"line\">   char p_sep_by_space;\t\t如果等于 1，则 currency_symbol 和正货币值之间使用空格分隔。如果等于 0，则 currency_symbol 和正货币值之间不使用空格分隔。</span><br><span class=\"line\">   char n_cs_precedes;\t\t如果等于 1，则 currency_symbol 出现在负货币值之前。如果等于 0，则 currency_symbol 出现在负货币值之后。</span><br><span class=\"line\">   char n_sep_by_space;\t\t如果等于 1，则 currency_symbol 和负货币值之间使用空格分隔。如果等于 0，则 currency_symbol 和负货币值之间不使用空格分隔。</span><br><span class=\"line\">   char p_sign_posn;\t表示正货币值中正号的位置。</span><br><span class=\"line\">   char n_sign_posn;  表示负货币值中负号的位置。</span><br><span class=\"line\">&#125; lconv</span><br><span class=\"line\"></span><br><span class=\"line\">下面的值用于 p_sign_posn 和 n_sign_posn:</span><br><span class=\"line\">值\t描述</span><br><span class=\"line\">0\t封装值和 currency_symbol 的括号。</span><br><span class=\"line\">1\t放置在值和 currency_symbol 之前的符号。</span><br><span class=\"line\">2\t放置在值和 currency_symbol 之后的符号。</span><br><span class=\"line\">3\t紧挨着放置在值和 currency_symbol 之前的符号。</span><br><span class=\"line\">4\t紧挨着放置在值和 currency_symbol 之后的符号。</span><br></pre></td></tr></table></figure>\n<p>7) &lt;math.h&gt;<br>math.h 头文件定义了各种数学函数和一个宏。在这个库中所有可用的功能都带有一个 double 类型的参数，且都返回 double 类型的结果。</p>\n<blockquote>\n<p>HUGE_VAL<br>当函数的结果不可以表示为浮点数时。如果是因为结果的幅度太大以致于无法表示，则函数会设置 errno 为 ERANGE 来表示范围错误，并返回一个由宏 HUGE_VAL 或者它的否定（- HUGE_VAL）命名的一个特定的很大的值。<br>如果结果的幅度太小，则会返回零值。在这种情况下，error 可能会被设置为 ERANGE，也有可能不会被设置为 ERANGE。<br>函数内容查看头文件。</p>\n</blockquote>\n<p>8） &lt;setjmp.h&gt;<br>定义了宏 setjmp()、函数 longjmp() 和变量类型 jmp_buf，该变量类型会绕过正常的函数调用和返回规则。</p>\n<p>jmp_buf<br>这是一个用于存储宏 setjmp() 和函数 longjmp() 相关信息的数组类型。</p>\n<blockquote>\n<p>int setjmp(jmp_buf environment)<br>这个宏把当前环境保存在变量 environment 中，以便函数 longjmp() 后续使用。如果这个宏直接从宏调用中返回，则它会返回零，但是如果它从 longjmp() 函数调用中返回，则它会返回一个非零值。</p>\n</blockquote>\n<blockquote>\n<p>void longjmp(jmp_buf environment, int value)<br>该函数恢复最近一次调用 setjmp() 宏时保存的环境，jmp_buf 参数的设置是由之前调用 setjmp() 生成的。  || setjmp 中的唯一的一个函数</p>\n</blockquote>\n<p>9）&lt;signal.h&gt;<br>signal.h 头文件定义了一个变量类型 sig_atomic_t、两个函数调用和一些宏来处理程序执行期间报告的不同信号。<br>|| 也就是处理系统信息的内容</p>\n<p>10）  &lt;stdarg.h&gt;<br>stdarg.h 头文件定义了一个变量类型 va_list 和三个宏，这三个宏可用于在参数个数未知（即参数个数可变）时获取函数中的参数。<br>可变参数的函数通在参数列表的末尾是使用省略号(,…)定义的。</p>\n<p>11）&lt;stddef.h&gt;<br>义了各种变量类型和宏。这些定义中的大部分也出现在其它头文件中。</p>\n<p>12）stdio .h<br>头文件定义了三个变量类型、一些宏和各种函数来执行输入和输出。</p>\n<p>13） stdlib .h<br>头文件定义了四个变量类型、一些宏和各种通用工具函数。</p>\n<p>14）string .h<br> 头文件定义了一个变量类型、一个宏和各种操作字符数组的函数。</p>\n<p>15）time.h<br>头文件定义了四个变量类型、两个宏和各种操作日期和时间的函数。</p>\n"},{"title":"LLImageEditor","date":"2018-09-18T16:03:58.000Z","_content":"\n思路： 大概的内容处理的过程\n1、图片剪切\n2、滤镜\n3、贴纸 \n4、文案 ， 文字的颜色 ， common模块\n5、涂鸦 ， 文字的颜色 ，common 模块\n\n","source":"_posts/LLImageEditor.md","raw":"---\ntitle: LLImageEditor\ndate: 2018-09-19 00:03:58\ntags: oc\ncategories: iOS\n---\n\n思路： 大概的内容处理的过程\n1、图片剪切\n2、滤镜\n3、贴纸 \n4、文案 ， 文字的颜色 ， common模块\n5、涂鸦 ， 文字的颜色 ，common 模块\n\n","slug":"LLImageEditor","published":1,"updated":"2018-09-27T13:37:36.933Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcko0007qiojijj43rt3","content":"<p>思路： 大概的内容处理的过程<br>1、图片剪切<br>2、滤镜<br>3、贴纸<br>4、文案 ， 文字的颜色 ， common模块<br>5、涂鸦 ， 文字的颜色 ，common 模块</p>\n","site":{"data":{}},"excerpt":"","more":"<p>思路： 大概的内容处理的过程<br>1、图片剪切<br>2、滤镜<br>3、贴纸<br>4、文案 ， 文字的颜色 ， common模块<br>5、涂鸦 ， 文字的颜色 ，common 模块</p>\n"},{"title":"TCP和UDP","date":"2019-02-19T15:39:04.000Z","_content":"面试题：\n1、理解TCP、UDP网络协议，熟悉Socket网络程序设计方法；\n>1) 理解tcp、udp的简历\n2） 理解tcp、udp的详细格式的内容\n3） socket的编程， 我们应该是IM的那一个功能精心了处理； \n\ntcp和udp的基本简介\ntcp的三级握手\ntcp和udp的基本格式\nIM的实现方式，里面就使用了tcp或者udp上面的内容\n\n\n\n","source":"_posts/TCP和UDP.md","raw":"---\ntitle: TCP和UDP\ndate: 2019-02-19 23:39:04\ntags: 计算机网络\ncategories: 计算机网络\n---\n面试题：\n1、理解TCP、UDP网络协议，熟悉Socket网络程序设计方法；\n>1) 理解tcp、udp的简历\n2） 理解tcp、udp的详细格式的内容\n3） socket的编程， 我们应该是IM的那一个功能精心了处理； \n\ntcp和udp的基本简介\ntcp的三级握手\ntcp和udp的基本格式\nIM的实现方式，里面就使用了tcp或者udp上面的内容\n\n\n\n","slug":"TCP和UDP","published":1,"updated":"2019-02-20T11:09:52.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppckt000bqiojpjj6lmp1","content":"<p>面试题：<br>1、理解TCP、UDP网络协议，熟悉Socket网络程序设计方法；</p>\n<blockquote>\n<p>1) 理解tcp、udp的简历<br>2） 理解tcp、udp的详细格式的内容<br>3） socket的编程， 我们应该是IM的那一个功能精心了处理； </p>\n</blockquote>\n<p>tcp和udp的基本简介<br>tcp的三级握手<br>tcp和udp的基本格式<br>IM的实现方式，里面就使用了tcp或者udp上面的内容</p>\n","site":{"data":{}},"excerpt":"","more":"<p>面试题：<br>1、理解TCP、UDP网络协议，熟悉Socket网络程序设计方法；</p>\n<blockquote>\n<p>1) 理解tcp、udp的简历<br>2） 理解tcp、udp的详细格式的内容<br>3） socket的编程， 我们应该是IM的那一个功能精心了处理； </p>\n</blockquote>\n<p>tcp和udp的基本简介<br>tcp的三级握手<br>tcp和udp的基本格式<br>IM的实现方式，里面就使用了tcp或者udp上面的内容</p>\n"},{"title":"M3U8","date":"2018-10-28T08:34:52.000Z","_content":"\n<h2>一、视频文件转M3U8 </h2>\n1） 常见的流媒体文件格式， 主要是以文件列表的形式存在， 支持直播和点播 ，android 和iOS中很常用；\n\n使用ffmpeg 转化对应的mp4文件为M3u8 文件；\n> ffmpeg -i a.mp4 a.m3u8\n这命令将会生成对应的m3u8文件，将对应的mp4文件切成对应的小块；\n![MP4 文件转化为对应的m3u8文件](../../../../asset/Snip20181028_2.png)\n\nm3u8的基本格式：\n![m3u8的文件格式](../../../../asset/Snip20181028_1.png)\n详解：\nEXTM3U: m3u8文件必须包含的标签，并且必须在文件的第一行了；\nEXT-X—VERSION M3U8的文件版本，常见的是3； 【当然现在有很多版本了】\nEXT-X-TARGETDURATION 每个分片都有自己的duration， 这个分片的浮点数四舍五入的整数值 ，eg: 1.02 变为1；\nEXT-X-MEDIA-SEQUENCE 是m3u8直播时的直播切片系列，当播放打开m3u8时，将以这个值为参考；播放对应的系列号的切片；\n\t1）分片必须是动态改变的，系列不能够相同，并且系列是增序的；\n\t2）EXT-X-ENDLIST，当m3u8中没有出现这个标签的时候，无论这个m3u8 列表中有多少分片，播放分片都是从倒数第三片开始播放，如果没有满足3片，就不应该播放；当然，如果其他播放器有自己的定制，可以按照自己的定制来进行播放；\n\t3）EXT-X-DISCONTINUITY ： 如果前一分片与后一分片不连续，可能播放就会出现错误，就需要这个标签来解决错误；\n以播放当前分片的duration时间刷新M3U8列表，然后做对应的加载动作；\n如果播放列表在刷新之后与之前的列表相同，那么在博佛昂当前分片duration一半的时间内再刷新一次\n\nEXTINF: 为M3U列表中每个切片的duration；除了duration之外，还可以包含可选的描述信息，主要是标注切片信息，使用逗号分隔开。\nEXTINF 下面的信息为具体的分片信息，分片存储路径可以分为相对路径或者绝对路径；也可以是互联网上的链接；\n\nEXT-X-ENDLIST：表明该M3U8文件不会再产生更多的切片，可以理解为该M3U8已停止更新，并且播放分片到这个标签就结束。 也就是结束的标签\n\nEXT-X-STREAM-INF : (这个参数一般吧比较少见)\n在u3m8文件中，主要是出现在多级m3u8文件中；eg：m3u8中包含m3u8列表，或者主m3u8中包含多码率m3u8时，该标签后需要跟一些属性，下面是它的属性：\n\t1）BANDWIDTH 的值为最高码率值， 当播放EXT-X-STREAM-INF 下对应的m3u8时占用的最大码率，这个参数是在标签中必须要包含的；\n\t2）AVERAGE-BANDWIDTH 的值是平均码率值，当播放对应的m3u8时占用平均码率，这个参数是可选的；\n\t3）CODECS 用于声明EXT-X-STREAM-INF 下面对应m3u8里面的音频编码，视频编码的信息；\n\teg：\tAAC-LC音频与视频为H.264 main profile，level3.0的话，CODECS值为'mp4a.40.2,avc1.4d401e'\n\n\n\n\n\n\nhttps://www.zhihu.com/question/48914419\nm3u8 相关的内容\n\n","source":"_posts/M3U8.md","raw":"---\ntitle: M3U8\ndate: 2018-10-28 16:34:52\ntags: ffmpeg\ncategories: ffmpeg\n---\n\n<h2>一、视频文件转M3U8 </h2>\n1） 常见的流媒体文件格式， 主要是以文件列表的形式存在， 支持直播和点播 ，android 和iOS中很常用；\n\n使用ffmpeg 转化对应的mp4文件为M3u8 文件；\n> ffmpeg -i a.mp4 a.m3u8\n这命令将会生成对应的m3u8文件，将对应的mp4文件切成对应的小块；\n![MP4 文件转化为对应的m3u8文件](../../../../asset/Snip20181028_2.png)\n\nm3u8的基本格式：\n![m3u8的文件格式](../../../../asset/Snip20181028_1.png)\n详解：\nEXTM3U: m3u8文件必须包含的标签，并且必须在文件的第一行了；\nEXT-X—VERSION M3U8的文件版本，常见的是3； 【当然现在有很多版本了】\nEXT-X-TARGETDURATION 每个分片都有自己的duration， 这个分片的浮点数四舍五入的整数值 ，eg: 1.02 变为1；\nEXT-X-MEDIA-SEQUENCE 是m3u8直播时的直播切片系列，当播放打开m3u8时，将以这个值为参考；播放对应的系列号的切片；\n\t1）分片必须是动态改变的，系列不能够相同，并且系列是增序的；\n\t2）EXT-X-ENDLIST，当m3u8中没有出现这个标签的时候，无论这个m3u8 列表中有多少分片，播放分片都是从倒数第三片开始播放，如果没有满足3片，就不应该播放；当然，如果其他播放器有自己的定制，可以按照自己的定制来进行播放；\n\t3）EXT-X-DISCONTINUITY ： 如果前一分片与后一分片不连续，可能播放就会出现错误，就需要这个标签来解决错误；\n以播放当前分片的duration时间刷新M3U8列表，然后做对应的加载动作；\n如果播放列表在刷新之后与之前的列表相同，那么在博佛昂当前分片duration一半的时间内再刷新一次\n\nEXTINF: 为M3U列表中每个切片的duration；除了duration之外，还可以包含可选的描述信息，主要是标注切片信息，使用逗号分隔开。\nEXTINF 下面的信息为具体的分片信息，分片存储路径可以分为相对路径或者绝对路径；也可以是互联网上的链接；\n\nEXT-X-ENDLIST：表明该M3U8文件不会再产生更多的切片，可以理解为该M3U8已停止更新，并且播放分片到这个标签就结束。 也就是结束的标签\n\nEXT-X-STREAM-INF : (这个参数一般吧比较少见)\n在u3m8文件中，主要是出现在多级m3u8文件中；eg：m3u8中包含m3u8列表，或者主m3u8中包含多码率m3u8时，该标签后需要跟一些属性，下面是它的属性：\n\t1）BANDWIDTH 的值为最高码率值， 当播放EXT-X-STREAM-INF 下对应的m3u8时占用的最大码率，这个参数是在标签中必须要包含的；\n\t2）AVERAGE-BANDWIDTH 的值是平均码率值，当播放对应的m3u8时占用平均码率，这个参数是可选的；\n\t3）CODECS 用于声明EXT-X-STREAM-INF 下面对应m3u8里面的音频编码，视频编码的信息；\n\teg：\tAAC-LC音频与视频为H.264 main profile，level3.0的话，CODECS值为'mp4a.40.2,avc1.4d401e'\n\n\n\n\n\n\nhttps://www.zhihu.com/question/48914419\nm3u8 相关的内容\n\n","slug":"M3U8","published":1,"updated":"2018-10-30T17:09:43.133Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppckv000cqiojwwl738o4","content":"<p></p><h2>一、视频文件转M3U8 </h2><br>1） 常见的流媒体文件格式， 主要是以文件列表的形式存在， 支持直播和点播 ，android 和iOS中很常用；<p></p>\n<p>使用ffmpeg 转化对应的mp4文件为M3u8 文件；</p>\n<blockquote>\n<p>ffmpeg -i a.mp4 a.m3u8<br>这命令将会生成对应的m3u8文件，将对应的mp4文件切成对应的小块；<br><img src=\"../../../../asset/Snip20181028_2.png\" alt=\"MP4 文件转化为对应的m3u8文件\"></p>\n</blockquote>\n<p>m3u8的基本格式：<br><img src=\"../../../../asset/Snip20181028_1.png\" alt=\"m3u8的文件格式\"><br>详解：<br>EXTM3U: m3u8文件必须包含的标签，并且必须在文件的第一行了；<br>EXT-X—VERSION M3U8的文件版本，常见的是3； 【当然现在有很多版本了】<br>EXT-X-TARGETDURATION 每个分片都有自己的duration， 这个分片的浮点数四舍五入的整数值 ，eg: 1.02 变为1；<br>EXT-X-MEDIA-SEQUENCE 是m3u8直播时的直播切片系列，当播放打开m3u8时，将以这个值为参考；播放对应的系列号的切片；<br>    1）分片必须是动态改变的，系列不能够相同，并且系列是增序的；<br>    2）EXT-X-ENDLIST，当m3u8中没有出现这个标签的时候，无论这个m3u8 列表中有多少分片，播放分片都是从倒数第三片开始播放，如果没有满足3片，就不应该播放；当然，如果其他播放器有自己的定制，可以按照自己的定制来进行播放；<br>    3）EXT-X-DISCONTINUITY ： 如果前一分片与后一分片不连续，可能播放就会出现错误，就需要这个标签来解决错误；<br>以播放当前分片的duration时间刷新M3U8列表，然后做对应的加载动作；<br>如果播放列表在刷新之后与之前的列表相同，那么在博佛昂当前分片duration一半的时间内再刷新一次</p>\n<p>EXTINF: 为M3U列表中每个切片的duration；除了duration之外，还可以包含可选的描述信息，主要是标注切片信息，使用逗号分隔开。<br>EXTINF 下面的信息为具体的分片信息，分片存储路径可以分为相对路径或者绝对路径；也可以是互联网上的链接；</p>\n<p>EXT-X-ENDLIST：表明该M3U8文件不会再产生更多的切片，可以理解为该M3U8已停止更新，并且播放分片到这个标签就结束。 也就是结束的标签</p>\n<p>EXT-X-STREAM-INF : (这个参数一般吧比较少见)<br>在u3m8文件中，主要是出现在多级m3u8文件中；eg：m3u8中包含m3u8列表，或者主m3u8中包含多码率m3u8时，该标签后需要跟一些属性，下面是它的属性：<br>    1）BANDWIDTH 的值为最高码率值， 当播放EXT-X-STREAM-INF 下对应的m3u8时占用的最大码率，这个参数是在标签中必须要包含的；<br>    2）AVERAGE-BANDWIDTH 的值是平均码率值，当播放对应的m3u8时占用平均码率，这个参数是可选的；<br>    3）CODECS 用于声明EXT-X-STREAM-INF 下面对应m3u8里面的音频编码，视频编码的信息；<br>    eg：    AAC-LC音频与视频为H.264 main profile，level3.0的话，CODECS值为’mp4a.40.2,avc1.4d401e’</p>\n<p><a href=\"https://www.zhihu.com/question/48914419\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/48914419</a><br>m3u8 相关的内容</p>\n","site":{"data":{}},"excerpt":"","more":"<p></p><h2>一、视频文件转M3U8 </h2><br>1） 常见的流媒体文件格式， 主要是以文件列表的形式存在， 支持直播和点播 ，android 和iOS中很常用；<p></p>\n<p>使用ffmpeg 转化对应的mp4文件为M3u8 文件；</p>\n<blockquote>\n<p>ffmpeg -i a.mp4 a.m3u8<br>这命令将会生成对应的m3u8文件，将对应的mp4文件切成对应的小块；<br><img src=\"../../../../asset/Snip20181028_2.png\" alt=\"MP4 文件转化为对应的m3u8文件\"></p>\n</blockquote>\n<p>m3u8的基本格式：<br><img src=\"../../../../asset/Snip20181028_1.png\" alt=\"m3u8的文件格式\"><br>详解：<br>EXTM3U: m3u8文件必须包含的标签，并且必须在文件的第一行了；<br>EXT-X—VERSION M3U8的文件版本，常见的是3； 【当然现在有很多版本了】<br>EXT-X-TARGETDURATION 每个分片都有自己的duration， 这个分片的浮点数四舍五入的整数值 ，eg: 1.02 变为1；<br>EXT-X-MEDIA-SEQUENCE 是m3u8直播时的直播切片系列，当播放打开m3u8时，将以这个值为参考；播放对应的系列号的切片；<br>    1）分片必须是动态改变的，系列不能够相同，并且系列是增序的；<br>    2）EXT-X-ENDLIST，当m3u8中没有出现这个标签的时候，无论这个m3u8 列表中有多少分片，播放分片都是从倒数第三片开始播放，如果没有满足3片，就不应该播放；当然，如果其他播放器有自己的定制，可以按照自己的定制来进行播放；<br>    3）EXT-X-DISCONTINUITY ： 如果前一分片与后一分片不连续，可能播放就会出现错误，就需要这个标签来解决错误；<br>以播放当前分片的duration时间刷新M3U8列表，然后做对应的加载动作；<br>如果播放列表在刷新之后与之前的列表相同，那么在博佛昂当前分片duration一半的时间内再刷新一次</p>\n<p>EXTINF: 为M3U列表中每个切片的duration；除了duration之外，还可以包含可选的描述信息，主要是标注切片信息，使用逗号分隔开。<br>EXTINF 下面的信息为具体的分片信息，分片存储路径可以分为相对路径或者绝对路径；也可以是互联网上的链接；</p>\n<p>EXT-X-ENDLIST：表明该M3U8文件不会再产生更多的切片，可以理解为该M3U8已停止更新，并且播放分片到这个标签就结束。 也就是结束的标签</p>\n<p>EXT-X-STREAM-INF : (这个参数一般吧比较少见)<br>在u3m8文件中，主要是出现在多级m3u8文件中；eg：m3u8中包含m3u8列表，或者主m3u8中包含多码率m3u8时，该标签后需要跟一些属性，下面是它的属性：<br>    1）BANDWIDTH 的值为最高码率值， 当播放EXT-X-STREAM-INF 下对应的m3u8时占用的最大码率，这个参数是在标签中必须要包含的；<br>    2）AVERAGE-BANDWIDTH 的值是平均码率值，当播放对应的m3u8时占用平均码率，这个参数是可选的；<br>    3）CODECS 用于声明EXT-X-STREAM-INF 下面对应m3u8里面的音频编码，视频编码的信息；<br>    eg：    AAC-LC音频与视频为H.264 main profile，level3.0的话，CODECS值为’mp4a.40.2,avc1.4d401e’</p>\n<p><a href=\"https://www.zhihu.com/question/48914419\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/48914419</a><br>m3u8 相关的内容</p>\n"},{"title":"ModelCreation","date":"2018-10-10T14:18:18.000Z","_content":"\nModelCreation 模型创建\n\n\n<h3> 基本实现</h3>\n1、实现了基本的json数据解析为模型 <br/>\n2、实现了json数据里面的嵌套，eg：字典[key/value], 数组等<br/>\n3、添加了网络请求的参数来进行处理\n\n\n<h3>结果</h3>\n1、首先生成右边的模型 <br/>\n2、基于1的操作之后，点击生成文件。在log下找到路径，可以找到对应的文件 <br>\n\n若是出现什么错误，可以查看下面打印的log；\n<h3>操作详图</h3>\n![操作图像](../../../../asset/Snip20181010_4.png)\n","source":"_posts/ModelCreation.md","raw":"---\ntitle: ModelCreation\ndate: 2018-10-10 22:18:18\ntags: iOS \ncategories: oc\n---\n\nModelCreation 模型创建\n\n\n<h3> 基本实现</h3>\n1、实现了基本的json数据解析为模型 <br/>\n2、实现了json数据里面的嵌套，eg：字典[key/value], 数组等<br/>\n3、添加了网络请求的参数来进行处理\n\n\n<h3>结果</h3>\n1、首先生成右边的模型 <br/>\n2、基于1的操作之后，点击生成文件。在log下找到路径，可以找到对应的文件 <br>\n\n若是出现什么错误，可以查看下面打印的log；\n<h3>操作详图</h3>\n![操作图像](../../../../asset/Snip20181010_4.png)\n","slug":"ModelCreation","published":1,"updated":"2018-10-10T15:07:58.511Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcky000hqiojqwpet5hv","content":"<p>ModelCreation 模型创建</p>\n<p></p><h3> 基本实现</h3><br>1、实现了基本的json数据解析为模型 <br><br>2、实现了json数据里面的嵌套，eg：字典[key/value], 数组等<br><br>3、添加了网络请求的参数来进行处理<p></p>\n<p></p><h3>结果</h3><br>1、首先生成右边的模型 <br><br>2、基于1的操作之后，点击生成文件。在log下找到路径，可以找到对应的文件 <br><p></p>\n<p>若是出现什么错误，可以查看下面打印的log；</p>\n<p></p><h3>操作详图</h3><br><img src=\"../../../../asset/Snip20181010_4.png\" alt=\"操作图像\"><p></p>\n","site":{"data":{}},"excerpt":"","more":"<p>ModelCreation 模型创建</p>\n<p></p><h3> 基本实现</h3><br>1、实现了基本的json数据解析为模型 <br><br>2、实现了json数据里面的嵌套，eg：字典[key/value], 数组等<br><br>3、添加了网络请求的参数来进行处理<p></p>\n<p></p><h3>结果</h3><br>1、首先生成右边的模型 <br><br>2、基于1的操作之后，点击生成文件。在log下找到路径，可以找到对应的文件 <br><p></p>\n<p>若是出现什么错误，可以查看下面打印的log；</p>\n<p></p><h3>操作详图</h3><br><img src=\"../../../../asset/Snip20181010_4.png\" alt=\"操作图像\"><p></p>\n"},{"title":"CMake 以及衍生","date":"2019-02-24T13:40:28.000Z","_content":"CMake\n*****\n\n![cmake](../../../../asset/Snip20190226_3.png \"cmake 代码架构\")\n\nCMakeLists.txt /*.cmake 都是构建的配置文件\n\nCMake[cross platform make]是一个跨平台的安装（编译）工具，\n* 1）可以用简单的语句来描述所有平台的安装(编译过程)。\n* 2）输出各种各样的makefile或者project文件，能测试编译器所支持的C++特性,类似UNIX下的automake。只是 CMake 的组态档取名为 CMakeLists.txt。\n* 3）Cmake 并不直接建构出最终的软件，而是产生标准的建构档（如 Unix 的 Makefile 或 Windows Visual C++ 的 projects/workspaces），然后再依一般的建构方式使用。  这使得熟悉某个集成开发环境（IDE）的开发者可以用标准的方式建构他的软件，这种可以使用各平台的原生建构系统的能力是 CMake 和 SCons 等其他类似系统的区别之处。\n\n功能：\nCMake 可以编译源代码、制作程序库、产生适配器（wrapper）、还可以用任意的顺序建构执行档。CMake 支持 in-place 建构（二进档和源代码在同一个目录树中）和 out-of-place 建构（二进档在别的目录里），因此可以很容易从同一个源代码目录树中建构出多个二进档。CMake 也支持静态与动态程式库的建构。\n“CMake”这个名字是“cross platform make”的缩写。虽然名字中含有“make”，但是CMake和Unix上常见的“make”系统是分开的，而且更为高阶。\n\n\n```\nmake 和cmake有什么区别？\n*1、GCC是多种语言的编译器；（括C、C++、Objective-C、Fortran、Java等等）【如果你的源文件只有一个的时候，直接用gcc命令编译它； 多个源文件时，用gcc命令逐个去编译时，工作量大且混乱】\n*2、多个源文件如果编译？ ———>make\n一个只能批处理的工具，【本身没有编译和链接的功能】，通过调用makefile文件中用户指定的命令来进行编译和链接的（可能make文件里面就写了gcc的编译命令）\n3、makefile文件是什么? 上面： 存储编译命令，；比喻：简单的说就像一首歌的乐谱，make工具就像指挥家，指挥家根据乐谱指挥整个乐团怎么样演奏，make工具就根据makefile中的命令进行编译和链接的。(eg: makel命令中包含调用gcc编译某个源文件的命令)；make做一些简单的工程可以人手工在makefile文件里面添加编译等等命令；【（缺点）如果项目足够很大的时候，这样工作量也很大；如果换了平台，makefile又要重新修改】；\n4、[跨平台]CMake工具解决makefile上手工添加命令的缺点；cmake就可以更加简单的生成makefile文件给上面那个make用； 同时扩平台【不用修改makefile文件】， 等等其他功能；\n5、cmake如何生成makefile文件的？ —— CMakeLists.txt 文件（学名：组态档），通过它来生成makefile；所以，我们手工写CMakeLists.txt 这个文件即可【这个文件写入简单】\n6、\ncmake是用来生成Makefile文件的工具，生成Makefile文件的工具还有autotools，Qt环境下还有qmake\n参考链接:\nhttps://blog.csdn.net/jc_benben/article/details/78571728\nhttps://www.cnblogs.com/sunsky303/p/7750299.html?utm_source=debugrun&utm_medium=referral\n\nPS：cmake 不仅仅是make\n\n```\n>执行命令： cmake CMakeLists.txt \n\n看一下cmake的代码，里面写了什么， 建立系统、打包、创建测试环境；\n\n&& ————————————————cmake的简单实用————————————\ncmake_minimum_required(VERSION 3.12) // 这里的version要注意是当前系统的版本\n[项目简单实践](https://www.jianshu.com/p/8df5b2aba316)\n明天接着运行上面的例子；\n\nCMakeList.txt 文件构建（写） 这里就是cmake的写法 【注意，写的时候不要有逗号在参数见】\n\n好像SET这个命令有问题呀；??? 是不是我使用出现了错误还是在mac上不能够这样使用？\n有关的书籍， 我们应该如何去存储？\n\n[cmake实践](../../../../books/CMake Practice.pdf)\n[实践参考链接](https://www.hahack.com/codes/cmake/)\nset应该如何去使用？\n\n\nhttps://cmake.org/cmake/help/v3.12/index.html 文档链接 内容如下\n```\nCommand-Line Tools： 3个命令行\ncmake \nctest \ncpack\n\nInteractive Dialogs： 交互的窗口（可视化界面）\ncmake-gui(1)\nccmake(1)\n\nReference Manuals ： 参考手册\ncmake-buildsystem(7) 主要介绍链接了系统的库内容\ncmake-commands(7) 一些命令的设置\ncmake-compile-features(7) 编译特色 【也就是编译指定的特点或者针对支持】\ncmake-developer(7)\ncmake-env-variables(7)\ncmake-generator-expressions(7)\ncmake-generators(7)\ncmake-language(7)  语言，这个需要详细去查看\ncmake-modules(7)\ncmake-packages(7)\ncmake-policies(7)\ncmake-properties(7)\ncmake-qt(7)\ncmake-server(7)\ncmake-toolchains(7)\ncmake-variables(7)\n```\n总结： 这个项目主要是用cmake来构建代码编译打包等；有关内容，通过真实的项目来实现；\n\n>几个关键字：CMakeLists.txt Makefile make cmake \n\ncmake的源码应该怎么样子去看，我这里还不是很懂， 先看cmake里面的CMakeLists.txt文件吧；\n\n\n\n2、Doxygen是一种开源跨平台的，以类似JavaDoc风格描述的文档系统，完全支持C、C++、Java、Objective-C和IDL语言，部分支持PHP、C#。注释的语法与Qt-Doc、KDoc和JavaDoc兼容。Doxygen可以从一套归档源文件开始，生成HTML格式的在线类浏览器，或离线的LATEX、RTF参考手册。\n\nDoxygen 是一个程序的文件产生工具，可将程序中的特定注释转换成为说明文件。通常我们在写程序时，或多或少都会写上注释，但是对于其它人而言，要直接探索程序里的注释，与打捞泰坦尼克号同样的辛苦。大部分有用的注释都是属于针对函数、类型等等的说明。所以，如果能依据程序本身的结构，将注释经过处理重新整理成为一个纯粹的参考手册，对于后面利用您的程序代码的人而言将会减少许多的负担。不过，反过来说，整理文件的工作对于您来说，就是沉重的负担。\n\n[xcode上配置Doxygen](https://www.cnblogs.com/1-434/p/8086435.html)\n\n知道cmake里面使用了doxygen 来生成开发文档， 这里暂时先不管了； 到时候再去研究？？？？\n\n3、cmake项目的源代码以及配置的了解\nDartConfig.cmake 文件的内容\n[Dart 语言链接，dart就是D语言](https://www.dartlang.org/guides/language/language-tour)\n[Dart github地址](https://github.com/dart-atom)\n[dart 语言应用在flutter项目中](https://flutterchina.club/using-packages/)\n\n```\nDareconfig.cmake 文件的内容：\nset(CTEST_PROJECT_NAME \"CMake\") // 设置测试的项目名字\nset(CTEST_NIGHTLY_START_TIME \"21:00:00 EDT\") //每天晚上9点钟执行\n\nset(CTEST_DROP_METHOD \"http\")  // 方法使用http\nset(CTEST_DROP_SITE \"open.cdash.org\") // 测试地址\nset(CTEST_DROP_LOCATION \"/submit.php?project=CMake\") // 位置\nset(CTEST_DROP_SITE_CDASH TRUE) // 地址为真\n```\n上面的代码块中可以查找网址:<a href=\"https://cmake.org/cmake/help/v3.12/manual/ctest.1.html\">CTest的内容</a>\n```\nset(CTEST_PROJECT_NAME \"CMake\") // 设置测试的项目名字\n文档里面没有给出project name, 但是我们知道这个指定测试项目的名字了 【不过里面有个build name（也许可以替换）】\n\nset(CTEST_NIGHTLY_START_TIME \"21:00:00 EDT\") //每天晚上9点钟执行\n>  NightlyStartTime\n在夜间仪表盘模式，指定“夜间开始时间（nightly start time）”，带有确定的控制系统版本（cvs、svn），更新步骤检查软件的版本在这个时候所以，多客户端会选择一个共同的版本测试。 对于分布式版本控制不是很好定义，所以设置被忽略掉；\nCTest脚本变量: CTEST_NIGHTLY_START_TIME\n如果模块变量设置，则为NIGHTLY_START_TIME ，其他的是CTEST_NIGHTLY_START_TIME ；\n【符合ctest的定义和书写格式】 【一会其他特殊的才会标出来】\n\nset(CTEST_DROP_METHOD \"http\")  // 方法使用http\n> \tDropMethod\n指定提交到dashboard服务器的方法，值可以是：cp, ftp, http, https, scp, or xmlrpc（如果cmake支持它）\n同样也有脚本变量和模块变量以及其他的方式 和上面一样；\nCTEST_DROP_METHOD DROP_METHOD   CTEST_DROP_METHOD\n\nset(CTEST_DROP_SITE \"open.cdash.org\") // 测试地址\nDropSite （网址： 域名）\ndashboard server的名字（ftp, http, and https, scp, and xmlrpc 的目标服务器）\nCTEST_DROP_SITE   DROP_SITE\n\nset(CTEST_DROP_LOCATION \"/submit.php?project=CMake\") // 位置\nDropLocation （位置）\n服务器上面的路径 \n\nset(CTEST_DROP_SITE_CDASH TRUE)\nIsCDash\n判断dashboard server 是否是一个CDash 或者一个老的dashboard server  实现需求TriggerSite。\nscripte 变量： CTEST_DROP_SITE_CDASH\nmodule 变量： CTEST_DROP_SITE_CDASH\n[CDash 一个测试服务器，集成了CMake， CTest,CPack](https://www.cdash.org/overview/) \n这个东西怎么使用？ 以后需要使用的时候再进行使用吧？\n```\n>cmake 没有指定，应该是讲所有的CMakeLists.txt /*.cmake 的文件进行建立；\n\n\nCTestCustom.cmake.in 和CTestConfig.cmake 是什么关系？\nin文件：是对文件进行统一的管理\nCTestCustom.cmake.in  这个文件应该是对文件的同一管理的内容，也就是公共部分；\n\n```\nCTestCustom.cmake.in\n\nlist(APPEND CTEST_CUSTOM_ERROR_MATCH \"ERROR:\") \n// 匹配对应的错误（文档中没有找到） \n\n列出app 结束的时候的警告异常：\nlist(APPEND CTEST_CUSTOM_WARNING_EXCEPTION\n  \"warning: cast from 'char\\\\*' to 'cmCursesWidget\\\\*' increases required alignment of target type\" # Occurs when using Solaris's system libform\n  \"xtree.[0-9]+. : warning C4702: unreachable code\"\n  \"warning LNK4221\"\n  \"warning LNK4204\" # Occurs by race condition with objects in small libs\n  \"variable .var_args[2]*. is used before its value is set\"\n  \"jobserver unavailable\"\n  \"warning: \\\\(Long double usage is reported only once for each file\"\n  \"warning: To disable this warning use\"\n  \"could not be inlined\"\n  \"libcmcurl.*has no symbols\"\n  \"not sorted slower link editing will result\"\n  \"stl_deque.h:479\"\n  \"Utilities.cmzlib.\"\n  \"Utilities.cmbzip2.\"\n  \"Source.CTest.Curl\"\n  \"Source.CursesDialog.form\"\n  \"Utilities.cmcurl\"\n  \"Utilities.cmexpat.\"\n  \"Utilities.cmlibarchive\"\n  \"warning: declaration of .single. shadows a global declaration\"\n  \"/usr/include.*(warning|note).*shadowed declaration is here\"\n  \"/usr/bin/ld.*warning.*-..*directory.name.*bin.*does not exist\"\n  \"Redeclaration of .send..... with a different storage class specifier\"\n  \"is not used for resolving any symbol\"\n  \"Clock skew detected\"\n  \"remark\\\\(1209\"\n  \"remark: .*LOOP WAS VECTORIZED\"\n  \"warning .980: wrong number of actual arguments to intrinsic function .std::basic_\"\n  \"LINK : warning LNK4089: all references to.*ADVAPI32.dll.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*CRYPT32.dll.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*PSAPI.DLL.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*RPCRT4.dll.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*SHELL32.dll.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*USER32.dll.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*ole32.dll.*discarded by /OPT:REF\"\n  \"Warning.*: .*/Utilities/KWIML/test/test_int_format.h.* # Redundant preprocessing concatenation\"\n  \"Warning: library was too large for page size.*\"\n  \"Warning: public.*_archive_.*in module.*archive_*clashes with prior module.*archive_.*\"\n  \"Warning: public.*BZ2_bz.*in module.*bzlib.*clashes with prior module.*bzlib.*\"\n  \"Warning: public.*_archive.*clashes with prior module.*\"\n  \"Warning: LINN32: Last line.*is less.*\"\n  \"Warning: Olimit was exceeded on function.*\"\n  \"Warning: To override Olimit for all functions in file.*\"\n  \"Warning: Function .* can throw only the exceptions thrown by the function .* it overrides\\\\.\"\n  \"WarningMessagesDialog\\\\.cxx\"\n  \"warning.*directory name.*CMake-Xcode.*/bin/.*does not exist.*\"\n  \"stl_deque.h:1051\"\n  \"(Lexer|Parser).*warning.*conversion.*may (alter its value|change the sign)\"\n  \"(Lexer|Parser).*warning.*(statement is unreachable|will never be executed)\"\n  \"(Lexer|Parser).*warning.*variable.*was set but never used\"\n  \"PGC-W-0095-Type cast required for this conversion.*ProcessUNIX.c\"\n  \"[Qq]t([Cc]ore|[Gg]ui|[Ww]idgets).*warning.*conversion.*may alter its value\"\n  \"warning:.*is.*very unsafe.*consider using.*\"\n  \"warning:.*is.*misused, please use.*\"\n  \"cmake.version.manifest.*manifest authoring warning.*Unrecognized Element\"\n  \"cc-3968 CC: WARNING File.*\" # \"implicit\" truncation by static_cast\n  \"ld: warning: directory not found for option .-(F|L)\"\n  \"ld: warning .*/libgcc.a archive's cputype\"\n  \"ld: warning: ignoring file .*/libgcc.a, file was built for archive which is not the architecture being linked\"\n  \"ld: warning: in .*/libgcc.a, file is not of required architecture\"\n  \"warning.*This version of Mac OS X is unsupported\"\n  \"clang.*: warning: argument unused during compilation: .-g\"\n  \"note: in expansion of macro\" # diagnostic context note\n  \"note: expanded from macro\" # diagnostic context note\n  \"cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*rand.*may return deterministic values\"\n  \"cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*rand.*isn.*t random\" # we do not do crypto\n  \"cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*srand.*seed choices are.*poor\" # we do not do crypto\n  \"IPA warning: function.*multiply defined in\"\n\n  # Ignore compiler summary warning, assuming prior text has matched some\n  # other warning expression:\n  \"[0-9,]+ warnings? generated.\" # Clang\n  \"compilation completed with warnings\" # PGI\n  \"[0-9]+ Warning\\\\(s\\\\) detected\" # SunPro\n\n# scanbuild exceptions\n  \"char_traits.h:.*: warning: Null pointer argument in call to string length function\"\n  \"stl_construct.h:.*: warning: Forming reference to null pointer\"\n  \".*stl_uninitialized.h:75:19: warning: Forming reference to null pointer.*\"\n  \".*stl_vector.h:.*: warning: Returning null reference.*\"\n  \"warning: Value stored to 'yymsg' is never read\"\n  \"warning: Value stored to 'yytoken' is never read\"\n  \"index_encoder.c.241.2. warning: Value stored to .out_start. is never read\"\n  \"index.c.*warning: Access to field.*results in a dereference of a null pointer.*loaded from variable.*\"\n  \"cmCommandArgumentLexer.cxx:[0-9]+:[0-9]+: warning: Call to 'realloc' has an allocation size of 0 bytes\"\n  \"cmDependsJavaLexer.cxx:[0-9]+:[0-9]+: warning: Call to 'realloc' has an allocation size of 0 bytes\"\n  \"cmExprLexer.cxx:[0-9]+:[0-9]+: warning: Call to 'realloc' has an allocation size of 0 bytes\"\n  \"cmListFileLexer.c:[0-9]+:[0-9]+: warning: Call to 'realloc' has an allocation size of 0 bytes\"\n  \"cmFortranLexer.cxx:[0-9]+:[0-9]+: warning: Call to 'realloc' has an allocation size of 0 bytes\"\n  \"testProcess.*warning: Dereference of null pointer .loaded from variable .invalidAddress..\"\n  \"liblzma/simple/x86.c:[0-9]+:[0-9]+: warning: The result of the '<<' expression is undefined\"\n  \"liblzma/common/index_encoder.c:[0-9]+:[0-9]+: warning: Value stored to .* during its initialization is never read\"\n  \"libuv/src/.*:[0-9]+:[0-9]+: warning: Dereference of null pointer\"\n  \"libuv/src/.*:[0-9]+:[0-9]+: warning: The left operand of '==' is a garbage value\"\n  )\n\nCTEST_CUSTOM_WARNING_EXCEPTION 这个是警告的异常\n\n 这里是xcode结束的\nif(NOT \"@CMAKE_GENERATOR@\" MATCHES \"Xcode\")\n  list(APPEND CTEST_CUSTOM_COVERAGE_EXCLUDE \"XCode\")\nendif ()\n\n 覆盖率\nlist(APPEND CTEST_CUSTOM_COVERAGE_EXCLUDE\n  # Exclude kwsys files from coverage results. They are reported\n  # (with better coverage results) on kwsys dashboards...\n  \"/Source/(cm|kw)sys/\"\n\n  # Exclude try_compile sources from coverage results:\n  \"/CMakeFiles/CMakeTmp/\"\n\n  # Exclude Qt source files from coverage results:\n  \"[A-Za-z]./[Qq]t/qt-.+-opensource-src\"\n  )\n\n内存检查忽略\nlist(APPEND CTEST_CUSTOM_MEMCHECK_IGNORE\n  kwsys.testProcess-10 # See Source/kwsys/CTestCustom.cmake.in\n  )\n\nPS : 从上面可以看出，列出了很对对应的列表内容；\n```\n\n```\nset(CTEST_PROJECT_NAME \"CMake\") // 项目名字\nset(CTEST_NIGHTLY_START_TIME \"1:00:00 UTC\") // 执行时间\n\nset(CTEST_DROP_METHOD \"http\") // 方式\nset(CTEST_DROP_SITE \"open.cdash.org\") // 网址\nset(CTEST_DROP_LOCATION \"/submit.php?project=CMake\") // 存放位置\nset(CTEST_DROP_SITE_CDASH TRUE) // 是否使用CDash ，所以这个是CDash上面使用的\nset(CTEST_CDASH_VERSION \"1.6\") // CDash版本\nset(CTEST_CDASH_QUERY_VERSION TRUE)// CDash 请求版本\n\n```\n\n```\nconfigure 文件内容:\n\n其实就是shell脚本配置bootstrap 的脚本 ，其实这里启动了bootstrap这个命令\n#!/bin/sh\ncmake_source_dir=`cd \"\\`dirname \\\"$0\\\"\\`\";pwd` 获取到当前的目录下面，这个cmake_source_dir值（具体什么原理得看shell）\nexec \"${cmake_source_dir}/bootstrap\" \"$@\" //执行bootstrap\n\n\nshell脚本内容:\neg:新建了一个shell脚本 Test.sh 文件，内容：\n#!/bin/sh\necho \"shell脚本本身的名字: $0\"\necho \"传给shell的第一个参数: $1\"\necho \"传给shell的第二个参数: $2\"\n在Test.sh所在的目录下输入 bash Test.sh 1 2\n结果为:\nshell脚本本身的名字: Test.sh\n传给shell的第一个参数: 1\n传给shell的第二个参数:  2\n\n变量\t含义\n$0\t当前脚本的文件名\n$n\t传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2\n$#\t传递给脚本或函数的参数个数\n$*\t传递给脚本或函数的所有参数\n$@\t传递给脚本或函数的所有参数。被双引号(\" \")包含时，与 $* 稍有不同\n$?\t上个命令的退出状态，或函数的返回值\n$$\t当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID\n \n$* 和 $@ 的区别\n$* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号(\" \")包含时，都以\"$1\" \"$2\" … \"$n\" 的形式输出所有参数。但是当它们被双引号(\" \")包含时，\"$*\" 会将所有的参数作为一个整体，以\"$1 $2 … $n\"的形式输出所有参数；\"$@\" 会将各个参数分开，以\"$1\" \"$2\" … \"$n\" 的形式输出所有参数。\n参考链接：https://www.cnblogs.com/zhaohuiazl/p/7423779.html\n\ndirname (man dirname)\n脚本中获取 脚本文件所在的绝对路径\nshellPath=$(cd \"$(dirname \"$0\")\"; pwd)\necho $shellPaht\n\n[shell 命令大全](http://www.runoob.com/linux/linux-command-manual.html)\n```\n\n```\nbootstrap： 是shell脚本，这个有时间再去看一下 【很多项目构建都会写一个引导程序来处理编译打包的逻辑】\n\n```\n```\nCompileFlags.cmake : 编译的配置\n主要根据平台来设置一些标识，用于接下来的编译，所以做到了跨平台\n里面每个字段的定义，可以再一次去看看！\n```\n\n```\nCMakeLists.txt 真正构建cmake项目的文件 （详情细看）\n\n```\n\n```\nCMakeGraphVizOptions.cmake 图像的选择\n\n```\n```\nCMakeCPackOptions.cmake.in 打包选项的配置\n\n```\n```\nCMakeCPack.cmake 打包的cmake\n```\n```\ncmake_uninstall.cmake.in 卸载的cmake\n```\n```\n.hooks-config ： 这个不知道是配置什么来的 ，不知道这个是什么 [应该是属于git的内容]\n```\n```\n.gitignore git忽略的文件\n```\n```\n.gitattributes 这个配置git的属性\n```\n```\n.clang-tidy  clang tidy 是一个静态代码分析框架 https://www.jianshu.com/p/d6e12fc51294\n```\n```\n.clang-format 格式样式\n```\n```\nAuxiliary 辅助文件夹\nBootstrap.cmk 启动配置\nHelp 帮助文档\nLicenses \nModules 模块\nPackaging 打包\nsource 存放文件源代码\nTemplates 模板\nTests 测试代码\nUtilities 集合\n```\n\n[关于c/c++的后缀名](https://blog.csdn.net/u012662731/article/details/78531497?locationNum=5&fps=1)\n[.rst文件介绍](https://blog.csdn.net/grllery/article/details/80426875)\n\n—————————————————————————————————————————————\n这个项目无法再接着继续看了，因为太多东西了； 有一天写C项目的时候，在仔细去研究研究\n<font size=2 color=red>暂时先到这里</font>\n","source":"_posts/cmake-以及衍生.md","raw":"---\ntitle: CMake 以及衍生\ndate: 2019-02-24 21:40:28\ntags: tool\ncategories: tool\n---\nCMake\n*****\n\n![cmake](../../../../asset/Snip20190226_3.png \"cmake 代码架构\")\n\nCMakeLists.txt /*.cmake 都是构建的配置文件\n\nCMake[cross platform make]是一个跨平台的安装（编译）工具，\n* 1）可以用简单的语句来描述所有平台的安装(编译过程)。\n* 2）输出各种各样的makefile或者project文件，能测试编译器所支持的C++特性,类似UNIX下的automake。只是 CMake 的组态档取名为 CMakeLists.txt。\n* 3）Cmake 并不直接建构出最终的软件，而是产生标准的建构档（如 Unix 的 Makefile 或 Windows Visual C++ 的 projects/workspaces），然后再依一般的建构方式使用。  这使得熟悉某个集成开发环境（IDE）的开发者可以用标准的方式建构他的软件，这种可以使用各平台的原生建构系统的能力是 CMake 和 SCons 等其他类似系统的区别之处。\n\n功能：\nCMake 可以编译源代码、制作程序库、产生适配器（wrapper）、还可以用任意的顺序建构执行档。CMake 支持 in-place 建构（二进档和源代码在同一个目录树中）和 out-of-place 建构（二进档在别的目录里），因此可以很容易从同一个源代码目录树中建构出多个二进档。CMake 也支持静态与动态程式库的建构。\n“CMake”这个名字是“cross platform make”的缩写。虽然名字中含有“make”，但是CMake和Unix上常见的“make”系统是分开的，而且更为高阶。\n\n\n```\nmake 和cmake有什么区别？\n*1、GCC是多种语言的编译器；（括C、C++、Objective-C、Fortran、Java等等）【如果你的源文件只有一个的时候，直接用gcc命令编译它； 多个源文件时，用gcc命令逐个去编译时，工作量大且混乱】\n*2、多个源文件如果编译？ ———>make\n一个只能批处理的工具，【本身没有编译和链接的功能】，通过调用makefile文件中用户指定的命令来进行编译和链接的（可能make文件里面就写了gcc的编译命令）\n3、makefile文件是什么? 上面： 存储编译命令，；比喻：简单的说就像一首歌的乐谱，make工具就像指挥家，指挥家根据乐谱指挥整个乐团怎么样演奏，make工具就根据makefile中的命令进行编译和链接的。(eg: makel命令中包含调用gcc编译某个源文件的命令)；make做一些简单的工程可以人手工在makefile文件里面添加编译等等命令；【（缺点）如果项目足够很大的时候，这样工作量也很大；如果换了平台，makefile又要重新修改】；\n4、[跨平台]CMake工具解决makefile上手工添加命令的缺点；cmake就可以更加简单的生成makefile文件给上面那个make用； 同时扩平台【不用修改makefile文件】， 等等其他功能；\n5、cmake如何生成makefile文件的？ —— CMakeLists.txt 文件（学名：组态档），通过它来生成makefile；所以，我们手工写CMakeLists.txt 这个文件即可【这个文件写入简单】\n6、\ncmake是用来生成Makefile文件的工具，生成Makefile文件的工具还有autotools，Qt环境下还有qmake\n参考链接:\nhttps://blog.csdn.net/jc_benben/article/details/78571728\nhttps://www.cnblogs.com/sunsky303/p/7750299.html?utm_source=debugrun&utm_medium=referral\n\nPS：cmake 不仅仅是make\n\n```\n>执行命令： cmake CMakeLists.txt \n\n看一下cmake的代码，里面写了什么， 建立系统、打包、创建测试环境；\n\n&& ————————————————cmake的简单实用————————————\ncmake_minimum_required(VERSION 3.12) // 这里的version要注意是当前系统的版本\n[项目简单实践](https://www.jianshu.com/p/8df5b2aba316)\n明天接着运行上面的例子；\n\nCMakeList.txt 文件构建（写） 这里就是cmake的写法 【注意，写的时候不要有逗号在参数见】\n\n好像SET这个命令有问题呀；??? 是不是我使用出现了错误还是在mac上不能够这样使用？\n有关的书籍， 我们应该如何去存储？\n\n[cmake实践](../../../../books/CMake Practice.pdf)\n[实践参考链接](https://www.hahack.com/codes/cmake/)\nset应该如何去使用？\n\n\nhttps://cmake.org/cmake/help/v3.12/index.html 文档链接 内容如下\n```\nCommand-Line Tools： 3个命令行\ncmake \nctest \ncpack\n\nInteractive Dialogs： 交互的窗口（可视化界面）\ncmake-gui(1)\nccmake(1)\n\nReference Manuals ： 参考手册\ncmake-buildsystem(7) 主要介绍链接了系统的库内容\ncmake-commands(7) 一些命令的设置\ncmake-compile-features(7) 编译特色 【也就是编译指定的特点或者针对支持】\ncmake-developer(7)\ncmake-env-variables(7)\ncmake-generator-expressions(7)\ncmake-generators(7)\ncmake-language(7)  语言，这个需要详细去查看\ncmake-modules(7)\ncmake-packages(7)\ncmake-policies(7)\ncmake-properties(7)\ncmake-qt(7)\ncmake-server(7)\ncmake-toolchains(7)\ncmake-variables(7)\n```\n总结： 这个项目主要是用cmake来构建代码编译打包等；有关内容，通过真实的项目来实现；\n\n>几个关键字：CMakeLists.txt Makefile make cmake \n\ncmake的源码应该怎么样子去看，我这里还不是很懂， 先看cmake里面的CMakeLists.txt文件吧；\n\n\n\n2、Doxygen是一种开源跨平台的，以类似JavaDoc风格描述的文档系统，完全支持C、C++、Java、Objective-C和IDL语言，部分支持PHP、C#。注释的语法与Qt-Doc、KDoc和JavaDoc兼容。Doxygen可以从一套归档源文件开始，生成HTML格式的在线类浏览器，或离线的LATEX、RTF参考手册。\n\nDoxygen 是一个程序的文件产生工具，可将程序中的特定注释转换成为说明文件。通常我们在写程序时，或多或少都会写上注释，但是对于其它人而言，要直接探索程序里的注释，与打捞泰坦尼克号同样的辛苦。大部分有用的注释都是属于针对函数、类型等等的说明。所以，如果能依据程序本身的结构，将注释经过处理重新整理成为一个纯粹的参考手册，对于后面利用您的程序代码的人而言将会减少许多的负担。不过，反过来说，整理文件的工作对于您来说，就是沉重的负担。\n\n[xcode上配置Doxygen](https://www.cnblogs.com/1-434/p/8086435.html)\n\n知道cmake里面使用了doxygen 来生成开发文档， 这里暂时先不管了； 到时候再去研究？？？？\n\n3、cmake项目的源代码以及配置的了解\nDartConfig.cmake 文件的内容\n[Dart 语言链接，dart就是D语言](https://www.dartlang.org/guides/language/language-tour)\n[Dart github地址](https://github.com/dart-atom)\n[dart 语言应用在flutter项目中](https://flutterchina.club/using-packages/)\n\n```\nDareconfig.cmake 文件的内容：\nset(CTEST_PROJECT_NAME \"CMake\") // 设置测试的项目名字\nset(CTEST_NIGHTLY_START_TIME \"21:00:00 EDT\") //每天晚上9点钟执行\n\nset(CTEST_DROP_METHOD \"http\")  // 方法使用http\nset(CTEST_DROP_SITE \"open.cdash.org\") // 测试地址\nset(CTEST_DROP_LOCATION \"/submit.php?project=CMake\") // 位置\nset(CTEST_DROP_SITE_CDASH TRUE) // 地址为真\n```\n上面的代码块中可以查找网址:<a href=\"https://cmake.org/cmake/help/v3.12/manual/ctest.1.html\">CTest的内容</a>\n```\nset(CTEST_PROJECT_NAME \"CMake\") // 设置测试的项目名字\n文档里面没有给出project name, 但是我们知道这个指定测试项目的名字了 【不过里面有个build name（也许可以替换）】\n\nset(CTEST_NIGHTLY_START_TIME \"21:00:00 EDT\") //每天晚上9点钟执行\n>  NightlyStartTime\n在夜间仪表盘模式，指定“夜间开始时间（nightly start time）”，带有确定的控制系统版本（cvs、svn），更新步骤检查软件的版本在这个时候所以，多客户端会选择一个共同的版本测试。 对于分布式版本控制不是很好定义，所以设置被忽略掉；\nCTest脚本变量: CTEST_NIGHTLY_START_TIME\n如果模块变量设置，则为NIGHTLY_START_TIME ，其他的是CTEST_NIGHTLY_START_TIME ；\n【符合ctest的定义和书写格式】 【一会其他特殊的才会标出来】\n\nset(CTEST_DROP_METHOD \"http\")  // 方法使用http\n> \tDropMethod\n指定提交到dashboard服务器的方法，值可以是：cp, ftp, http, https, scp, or xmlrpc（如果cmake支持它）\n同样也有脚本变量和模块变量以及其他的方式 和上面一样；\nCTEST_DROP_METHOD DROP_METHOD   CTEST_DROP_METHOD\n\nset(CTEST_DROP_SITE \"open.cdash.org\") // 测试地址\nDropSite （网址： 域名）\ndashboard server的名字（ftp, http, and https, scp, and xmlrpc 的目标服务器）\nCTEST_DROP_SITE   DROP_SITE\n\nset(CTEST_DROP_LOCATION \"/submit.php?project=CMake\") // 位置\nDropLocation （位置）\n服务器上面的路径 \n\nset(CTEST_DROP_SITE_CDASH TRUE)\nIsCDash\n判断dashboard server 是否是一个CDash 或者一个老的dashboard server  实现需求TriggerSite。\nscripte 变量： CTEST_DROP_SITE_CDASH\nmodule 变量： CTEST_DROP_SITE_CDASH\n[CDash 一个测试服务器，集成了CMake， CTest,CPack](https://www.cdash.org/overview/) \n这个东西怎么使用？ 以后需要使用的时候再进行使用吧？\n```\n>cmake 没有指定，应该是讲所有的CMakeLists.txt /*.cmake 的文件进行建立；\n\n\nCTestCustom.cmake.in 和CTestConfig.cmake 是什么关系？\nin文件：是对文件进行统一的管理\nCTestCustom.cmake.in  这个文件应该是对文件的同一管理的内容，也就是公共部分；\n\n```\nCTestCustom.cmake.in\n\nlist(APPEND CTEST_CUSTOM_ERROR_MATCH \"ERROR:\") \n// 匹配对应的错误（文档中没有找到） \n\n列出app 结束的时候的警告异常：\nlist(APPEND CTEST_CUSTOM_WARNING_EXCEPTION\n  \"warning: cast from 'char\\\\*' to 'cmCursesWidget\\\\*' increases required alignment of target type\" # Occurs when using Solaris's system libform\n  \"xtree.[0-9]+. : warning C4702: unreachable code\"\n  \"warning LNK4221\"\n  \"warning LNK4204\" # Occurs by race condition with objects in small libs\n  \"variable .var_args[2]*. is used before its value is set\"\n  \"jobserver unavailable\"\n  \"warning: \\\\(Long double usage is reported only once for each file\"\n  \"warning: To disable this warning use\"\n  \"could not be inlined\"\n  \"libcmcurl.*has no symbols\"\n  \"not sorted slower link editing will result\"\n  \"stl_deque.h:479\"\n  \"Utilities.cmzlib.\"\n  \"Utilities.cmbzip2.\"\n  \"Source.CTest.Curl\"\n  \"Source.CursesDialog.form\"\n  \"Utilities.cmcurl\"\n  \"Utilities.cmexpat.\"\n  \"Utilities.cmlibarchive\"\n  \"warning: declaration of .single. shadows a global declaration\"\n  \"/usr/include.*(warning|note).*shadowed declaration is here\"\n  \"/usr/bin/ld.*warning.*-..*directory.name.*bin.*does not exist\"\n  \"Redeclaration of .send..... with a different storage class specifier\"\n  \"is not used for resolving any symbol\"\n  \"Clock skew detected\"\n  \"remark\\\\(1209\"\n  \"remark: .*LOOP WAS VECTORIZED\"\n  \"warning .980: wrong number of actual arguments to intrinsic function .std::basic_\"\n  \"LINK : warning LNK4089: all references to.*ADVAPI32.dll.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*CRYPT32.dll.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*PSAPI.DLL.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*RPCRT4.dll.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*SHELL32.dll.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*USER32.dll.*discarded by /OPT:REF\"\n  \"LINK : warning LNK4089: all references to.*ole32.dll.*discarded by /OPT:REF\"\n  \"Warning.*: .*/Utilities/KWIML/test/test_int_format.h.* # Redundant preprocessing concatenation\"\n  \"Warning: library was too large for page size.*\"\n  \"Warning: public.*_archive_.*in module.*archive_*clashes with prior module.*archive_.*\"\n  \"Warning: public.*BZ2_bz.*in module.*bzlib.*clashes with prior module.*bzlib.*\"\n  \"Warning: public.*_archive.*clashes with prior module.*\"\n  \"Warning: LINN32: Last line.*is less.*\"\n  \"Warning: Olimit was exceeded on function.*\"\n  \"Warning: To override Olimit for all functions in file.*\"\n  \"Warning: Function .* can throw only the exceptions thrown by the function .* it overrides\\\\.\"\n  \"WarningMessagesDialog\\\\.cxx\"\n  \"warning.*directory name.*CMake-Xcode.*/bin/.*does not exist.*\"\n  \"stl_deque.h:1051\"\n  \"(Lexer|Parser).*warning.*conversion.*may (alter its value|change the sign)\"\n  \"(Lexer|Parser).*warning.*(statement is unreachable|will never be executed)\"\n  \"(Lexer|Parser).*warning.*variable.*was set but never used\"\n  \"PGC-W-0095-Type cast required for this conversion.*ProcessUNIX.c\"\n  \"[Qq]t([Cc]ore|[Gg]ui|[Ww]idgets).*warning.*conversion.*may alter its value\"\n  \"warning:.*is.*very unsafe.*consider using.*\"\n  \"warning:.*is.*misused, please use.*\"\n  \"cmake.version.manifest.*manifest authoring warning.*Unrecognized Element\"\n  \"cc-3968 CC: WARNING File.*\" # \"implicit\" truncation by static_cast\n  \"ld: warning: directory not found for option .-(F|L)\"\n  \"ld: warning .*/libgcc.a archive's cputype\"\n  \"ld: warning: ignoring file .*/libgcc.a, file was built for archive which is not the architecture being linked\"\n  \"ld: warning: in .*/libgcc.a, file is not of required architecture\"\n  \"warning.*This version of Mac OS X is unsupported\"\n  \"clang.*: warning: argument unused during compilation: .-g\"\n  \"note: in expansion of macro\" # diagnostic context note\n  \"note: expanded from macro\" # diagnostic context note\n  \"cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*rand.*may return deterministic values\"\n  \"cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*rand.*isn.*t random\" # we do not do crypto\n  \"cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*srand.*seed choices are.*poor\" # we do not do crypto\n  \"IPA warning: function.*multiply defined in\"\n\n  # Ignore compiler summary warning, assuming prior text has matched some\n  # other warning expression:\n  \"[0-9,]+ warnings? generated.\" # Clang\n  \"compilation completed with warnings\" # PGI\n  \"[0-9]+ Warning\\\\(s\\\\) detected\" # SunPro\n\n# scanbuild exceptions\n  \"char_traits.h:.*: warning: Null pointer argument in call to string length function\"\n  \"stl_construct.h:.*: warning: Forming reference to null pointer\"\n  \".*stl_uninitialized.h:75:19: warning: Forming reference to null pointer.*\"\n  \".*stl_vector.h:.*: warning: Returning null reference.*\"\n  \"warning: Value stored to 'yymsg' is never read\"\n  \"warning: Value stored to 'yytoken' is never read\"\n  \"index_encoder.c.241.2. warning: Value stored to .out_start. is never read\"\n  \"index.c.*warning: Access to field.*results in a dereference of a null pointer.*loaded from variable.*\"\n  \"cmCommandArgumentLexer.cxx:[0-9]+:[0-9]+: warning: Call to 'realloc' has an allocation size of 0 bytes\"\n  \"cmDependsJavaLexer.cxx:[0-9]+:[0-9]+: warning: Call to 'realloc' has an allocation size of 0 bytes\"\n  \"cmExprLexer.cxx:[0-9]+:[0-9]+: warning: Call to 'realloc' has an allocation size of 0 bytes\"\n  \"cmListFileLexer.c:[0-9]+:[0-9]+: warning: Call to 'realloc' has an allocation size of 0 bytes\"\n  \"cmFortranLexer.cxx:[0-9]+:[0-9]+: warning: Call to 'realloc' has an allocation size of 0 bytes\"\n  \"testProcess.*warning: Dereference of null pointer .loaded from variable .invalidAddress..\"\n  \"liblzma/simple/x86.c:[0-9]+:[0-9]+: warning: The result of the '<<' expression is undefined\"\n  \"liblzma/common/index_encoder.c:[0-9]+:[0-9]+: warning: Value stored to .* during its initialization is never read\"\n  \"libuv/src/.*:[0-9]+:[0-9]+: warning: Dereference of null pointer\"\n  \"libuv/src/.*:[0-9]+:[0-9]+: warning: The left operand of '==' is a garbage value\"\n  )\n\nCTEST_CUSTOM_WARNING_EXCEPTION 这个是警告的异常\n\n 这里是xcode结束的\nif(NOT \"@CMAKE_GENERATOR@\" MATCHES \"Xcode\")\n  list(APPEND CTEST_CUSTOM_COVERAGE_EXCLUDE \"XCode\")\nendif ()\n\n 覆盖率\nlist(APPEND CTEST_CUSTOM_COVERAGE_EXCLUDE\n  # Exclude kwsys files from coverage results. They are reported\n  # (with better coverage results) on kwsys dashboards...\n  \"/Source/(cm|kw)sys/\"\n\n  # Exclude try_compile sources from coverage results:\n  \"/CMakeFiles/CMakeTmp/\"\n\n  # Exclude Qt source files from coverage results:\n  \"[A-Za-z]./[Qq]t/qt-.+-opensource-src\"\n  )\n\n内存检查忽略\nlist(APPEND CTEST_CUSTOM_MEMCHECK_IGNORE\n  kwsys.testProcess-10 # See Source/kwsys/CTestCustom.cmake.in\n  )\n\nPS : 从上面可以看出，列出了很对对应的列表内容；\n```\n\n```\nset(CTEST_PROJECT_NAME \"CMake\") // 项目名字\nset(CTEST_NIGHTLY_START_TIME \"1:00:00 UTC\") // 执行时间\n\nset(CTEST_DROP_METHOD \"http\") // 方式\nset(CTEST_DROP_SITE \"open.cdash.org\") // 网址\nset(CTEST_DROP_LOCATION \"/submit.php?project=CMake\") // 存放位置\nset(CTEST_DROP_SITE_CDASH TRUE) // 是否使用CDash ，所以这个是CDash上面使用的\nset(CTEST_CDASH_VERSION \"1.6\") // CDash版本\nset(CTEST_CDASH_QUERY_VERSION TRUE)// CDash 请求版本\n\n```\n\n```\nconfigure 文件内容:\n\n其实就是shell脚本配置bootstrap 的脚本 ，其实这里启动了bootstrap这个命令\n#!/bin/sh\ncmake_source_dir=`cd \"\\`dirname \\\"$0\\\"\\`\";pwd` 获取到当前的目录下面，这个cmake_source_dir值（具体什么原理得看shell）\nexec \"${cmake_source_dir}/bootstrap\" \"$@\" //执行bootstrap\n\n\nshell脚本内容:\neg:新建了一个shell脚本 Test.sh 文件，内容：\n#!/bin/sh\necho \"shell脚本本身的名字: $0\"\necho \"传给shell的第一个参数: $1\"\necho \"传给shell的第二个参数: $2\"\n在Test.sh所在的目录下输入 bash Test.sh 1 2\n结果为:\nshell脚本本身的名字: Test.sh\n传给shell的第一个参数: 1\n传给shell的第二个参数:  2\n\n变量\t含义\n$0\t当前脚本的文件名\n$n\t传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2\n$#\t传递给脚本或函数的参数个数\n$*\t传递给脚本或函数的所有参数\n$@\t传递给脚本或函数的所有参数。被双引号(\" \")包含时，与 $* 稍有不同\n$?\t上个命令的退出状态，或函数的返回值\n$$\t当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID\n \n$* 和 $@ 的区别\n$* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号(\" \")包含时，都以\"$1\" \"$2\" … \"$n\" 的形式输出所有参数。但是当它们被双引号(\" \")包含时，\"$*\" 会将所有的参数作为一个整体，以\"$1 $2 … $n\"的形式输出所有参数；\"$@\" 会将各个参数分开，以\"$1\" \"$2\" … \"$n\" 的形式输出所有参数。\n参考链接：https://www.cnblogs.com/zhaohuiazl/p/7423779.html\n\ndirname (man dirname)\n脚本中获取 脚本文件所在的绝对路径\nshellPath=$(cd \"$(dirname \"$0\")\"; pwd)\necho $shellPaht\n\n[shell 命令大全](http://www.runoob.com/linux/linux-command-manual.html)\n```\n\n```\nbootstrap： 是shell脚本，这个有时间再去看一下 【很多项目构建都会写一个引导程序来处理编译打包的逻辑】\n\n```\n```\nCompileFlags.cmake : 编译的配置\n主要根据平台来设置一些标识，用于接下来的编译，所以做到了跨平台\n里面每个字段的定义，可以再一次去看看！\n```\n\n```\nCMakeLists.txt 真正构建cmake项目的文件 （详情细看）\n\n```\n\n```\nCMakeGraphVizOptions.cmake 图像的选择\n\n```\n```\nCMakeCPackOptions.cmake.in 打包选项的配置\n\n```\n```\nCMakeCPack.cmake 打包的cmake\n```\n```\ncmake_uninstall.cmake.in 卸载的cmake\n```\n```\n.hooks-config ： 这个不知道是配置什么来的 ，不知道这个是什么 [应该是属于git的内容]\n```\n```\n.gitignore git忽略的文件\n```\n```\n.gitattributes 这个配置git的属性\n```\n```\n.clang-tidy  clang tidy 是一个静态代码分析框架 https://www.jianshu.com/p/d6e12fc51294\n```\n```\n.clang-format 格式样式\n```\n```\nAuxiliary 辅助文件夹\nBootstrap.cmk 启动配置\nHelp 帮助文档\nLicenses \nModules 模块\nPackaging 打包\nsource 存放文件源代码\nTemplates 模板\nTests 测试代码\nUtilities 集合\n```\n\n[关于c/c++的后缀名](https://blog.csdn.net/u012662731/article/details/78531497?locationNum=5&fps=1)\n[.rst文件介绍](https://blog.csdn.net/grllery/article/details/80426875)\n\n—————————————————————————————————————————————\n这个项目无法再接着继续看了，因为太多东西了； 有一天写C项目的时候，在仔细去研究研究\n<font size=2 color=red>暂时先到这里</font>\n","slug":"cmake-以及衍生","published":1,"updated":"2019-02-25T18:44:21.787Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcl1000iqiojgulhch61","content":"<p>CMake</p>\n<hr>\n<p><img src=\"../../../../asset/Snip20190226_3.png\" alt=\"cmake\" title=\"cmake 代码架构\"></p>\n<p>CMakeLists.txt /*.cmake 都是构建的配置文件</p>\n<p>CMake[cross platform make]是一个跨平台的安装（编译）工具，</p>\n<ul>\n<li>1）可以用简单的语句来描述所有平台的安装(编译过程)。</li>\n<li>2）输出各种各样的makefile或者project文件，能测试编译器所支持的C++特性,类似UNIX下的automake。只是 CMake 的组态档取名为 CMakeLists.txt。</li>\n<li>3）Cmake 并不直接建构出最终的软件，而是产生标准的建构档（如 Unix 的 Makefile 或 Windows Visual C++ 的 projects/workspaces），然后再依一般的建构方式使用。  这使得熟悉某个集成开发环境（IDE）的开发者可以用标准的方式建构他的软件，这种可以使用各平台的原生建构系统的能力是 CMake 和 SCons 等其他类似系统的区别之处。</li>\n</ul>\n<p>功能：<br>CMake 可以编译源代码、制作程序库、产生适配器（wrapper）、还可以用任意的顺序建构执行档。CMake 支持 in-place 建构（二进档和源代码在同一个目录树中）和 out-of-place 建构（二进档在别的目录里），因此可以很容易从同一个源代码目录树中建构出多个二进档。CMake 也支持静态与动态程式库的建构。<br>“CMake”这个名字是“cross platform make”的缩写。虽然名字中含有“make”，但是CMake和Unix上常见的“make”系统是分开的，而且更为高阶。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make 和cmake有什么区别？</span><br><span class=\"line\">*1、GCC是多种语言的编译器；（括C、C++、Objective-C、Fortran、Java等等）【如果你的源文件只有一个的时候，直接用gcc命令编译它； 多个源文件时，用gcc命令逐个去编译时，工作量大且混乱】</span><br><span class=\"line\">*2、多个源文件如果编译？ ———&gt;make</span><br><span class=\"line\">一个只能批处理的工具，【本身没有编译和链接的功能】，通过调用makefile文件中用户指定的命令来进行编译和链接的（可能make文件里面就写了gcc的编译命令）</span><br><span class=\"line\">3、makefile文件是什么? 上面： 存储编译命令，；比喻：简单的说就像一首歌的乐谱，make工具就像指挥家，指挥家根据乐谱指挥整个乐团怎么样演奏，make工具就根据makefile中的命令进行编译和链接的。(eg: makel命令中包含调用gcc编译某个源文件的命令)；make做一些简单的工程可以人手工在makefile文件里面添加编译等等命令；【（缺点）如果项目足够很大的时候，这样工作量也很大；如果换了平台，makefile又要重新修改】；</span><br><span class=\"line\">4、[跨平台]CMake工具解决makefile上手工添加命令的缺点；cmake就可以更加简单的生成makefile文件给上面那个make用； 同时扩平台【不用修改makefile文件】， 等等其他功能；</span><br><span class=\"line\">5、cmake如何生成makefile文件的？ —— CMakeLists.txt 文件（学名：组态档），通过它来生成makefile；所以，我们手工写CMakeLists.txt 这个文件即可【这个文件写入简单】</span><br><span class=\"line\">6、</span><br><span class=\"line\">cmake是用来生成Makefile文件的工具，生成Makefile文件的工具还有autotools，Qt环境下还有qmake</span><br><span class=\"line\">参考链接:</span><br><span class=\"line\">https://blog.csdn.net/jc_benben/article/details/78571728</span><br><span class=\"line\">https://www.cnblogs.com/sunsky303/p/7750299.html?utm_source=debugrun&amp;utm_medium=referral</span><br><span class=\"line\"></span><br><span class=\"line\">PS：cmake 不仅仅是make</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>执行命令： cmake CMakeLists.txt </p>\n</blockquote>\n<p>看一下cmake的代码，里面写了什么， 建立系统、打包、创建测试环境；</p>\n<p>&amp;&amp; ————————————————cmake的简单实用————————————<br>cmake_minimum_required(VERSION 3.12) // 这里的version要注意是当前系统的版本<br><a href=\"https://www.jianshu.com/p/8df5b2aba316\" target=\"_blank\" rel=\"noopener\">项目简单实践</a><br>明天接着运行上面的例子；</p>\n<p>CMakeList.txt 文件构建（写） 这里就是cmake的写法 【注意，写的时候不要有逗号在参数见】</p>\n<p>好像SET这个命令有问题呀；??? 是不是我使用出现了错误还是在mac上不能够这样使用？<br>有关的书籍， 我们应该如何去存储？</p>\n<p><a href=\"../../../../books/CMake Practice.pdf\">cmake实践</a><br><a href=\"https://www.hahack.com/codes/cmake/\" target=\"_blank\" rel=\"noopener\">实践参考链接</a><br>set应该如何去使用？</p>\n<p><a href=\"https://cmake.org/cmake/help/v3.12/index.html\" target=\"_blank\" rel=\"noopener\">https://cmake.org/cmake/help/v3.12/index.html</a> 文档链接 内容如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Command-Line Tools： 3个命令行</span><br><span class=\"line\">cmake </span><br><span class=\"line\">ctest </span><br><span class=\"line\">cpack</span><br><span class=\"line\"></span><br><span class=\"line\">Interactive Dialogs： 交互的窗口（可视化界面）</span><br><span class=\"line\">cmake-gui(1)</span><br><span class=\"line\">ccmake(1)</span><br><span class=\"line\"></span><br><span class=\"line\">Reference Manuals ： 参考手册</span><br><span class=\"line\">cmake-buildsystem(7) 主要介绍链接了系统的库内容</span><br><span class=\"line\">cmake-commands(7) 一些命令的设置</span><br><span class=\"line\">cmake-compile-features(7) 编译特色 【也就是编译指定的特点或者针对支持】</span><br><span class=\"line\">cmake-developer(7)</span><br><span class=\"line\">cmake-env-variables(7)</span><br><span class=\"line\">cmake-generator-expressions(7)</span><br><span class=\"line\">cmake-generators(7)</span><br><span class=\"line\">cmake-language(7)  语言，这个需要详细去查看</span><br><span class=\"line\">cmake-modules(7)</span><br><span class=\"line\">cmake-packages(7)</span><br><span class=\"line\">cmake-policies(7)</span><br><span class=\"line\">cmake-properties(7)</span><br><span class=\"line\">cmake-qt(7)</span><br><span class=\"line\">cmake-server(7)</span><br><span class=\"line\">cmake-toolchains(7)</span><br><span class=\"line\">cmake-variables(7)</span><br></pre></td></tr></table></figure></p>\n<p>总结： 这个项目主要是用cmake来构建代码编译打包等；有关内容，通过真实的项目来实现；</p>\n<blockquote>\n<p>几个关键字：CMakeLists.txt Makefile make cmake </p>\n</blockquote>\n<p>cmake的源码应该怎么样子去看，我这里还不是很懂， 先看cmake里面的CMakeLists.txt文件吧；</p>\n<p>2、Doxygen是一种开源跨平台的，以类似JavaDoc风格描述的文档系统，完全支持C、C++、Java、Objective-C和IDL语言，部分支持PHP、C#。注释的语法与Qt-Doc、KDoc和JavaDoc兼容。Doxygen可以从一套归档源文件开始，生成HTML格式的在线类浏览器，或离线的LATEX、RTF参考手册。</p>\n<p>Doxygen 是一个程序的文件产生工具，可将程序中的特定注释转换成为说明文件。通常我们在写程序时，或多或少都会写上注释，但是对于其它人而言，要直接探索程序里的注释，与打捞泰坦尼克号同样的辛苦。大部分有用的注释都是属于针对函数、类型等等的说明。所以，如果能依据程序本身的结构，将注释经过处理重新整理成为一个纯粹的参考手册，对于后面利用您的程序代码的人而言将会减少许多的负担。不过，反过来说，整理文件的工作对于您来说，就是沉重的负担。</p>\n<p><a href=\"https://www.cnblogs.com/1-434/p/8086435.html\" target=\"_blank\" rel=\"noopener\">xcode上配置Doxygen</a></p>\n<p>知道cmake里面使用了doxygen 来生成开发文档， 这里暂时先不管了； 到时候再去研究？？？？</p>\n<p>3、cmake项目的源代码以及配置的了解<br>DartConfig.cmake 文件的内容<br><a href=\"https://www.dartlang.org/guides/language/language-tour\" target=\"_blank\" rel=\"noopener\">Dart 语言链接，dart就是D语言</a><br><a href=\"https://github.com/dart-atom\" target=\"_blank\" rel=\"noopener\">Dart github地址</a><br><a href=\"https://flutterchina.club/using-packages/\" target=\"_blank\" rel=\"noopener\">dart 语言应用在flutter项目中</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dareconfig.cmake 文件的内容：</span><br><span class=\"line\">set(CTEST_PROJECT_NAME &quot;CMake&quot;) // 设置测试的项目名字</span><br><span class=\"line\">set(CTEST_NIGHTLY_START_TIME &quot;21:00:00 EDT&quot;) //每天晚上9点钟执行</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_METHOD &quot;http&quot;)  // 方法使用http</span><br><span class=\"line\">set(CTEST_DROP_SITE &quot;open.cdash.org&quot;) // 测试地址</span><br><span class=\"line\">set(CTEST_DROP_LOCATION &quot;/submit.php?project=CMake&quot;) // 位置</span><br><span class=\"line\">set(CTEST_DROP_SITE_CDASH TRUE) // 地址为真</span><br></pre></td></tr></table></figure>\n<p>上面的代码块中可以查找网址:<a href=\"https://cmake.org/cmake/help/v3.12/manual/ctest.1.html\" target=\"_blank\" rel=\"noopener\">CTest的内容</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set(CTEST_PROJECT_NAME &quot;CMake&quot;) // 设置测试的项目名字</span><br><span class=\"line\">文档里面没有给出project name, 但是我们知道这个指定测试项目的名字了 【不过里面有个build name（也许可以替换）】</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_NIGHTLY_START_TIME &quot;21:00:00 EDT&quot;) //每天晚上9点钟执行</span><br><span class=\"line\">&gt;  NightlyStartTime</span><br><span class=\"line\">在夜间仪表盘模式，指定“夜间开始时间（nightly start time）”，带有确定的控制系统版本（cvs、svn），更新步骤检查软件的版本在这个时候所以，多客户端会选择一个共同的版本测试。 对于分布式版本控制不是很好定义，所以设置被忽略掉；</span><br><span class=\"line\">CTest脚本变量: CTEST_NIGHTLY_START_TIME</span><br><span class=\"line\">如果模块变量设置，则为NIGHTLY_START_TIME ，其他的是CTEST_NIGHTLY_START_TIME ；</span><br><span class=\"line\">【符合ctest的定义和书写格式】 【一会其他特殊的才会标出来】</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_METHOD &quot;http&quot;)  // 方法使用http</span><br><span class=\"line\">&gt; \tDropMethod</span><br><span class=\"line\">指定提交到dashboard服务器的方法，值可以是：cp, ftp, http, https, scp, or xmlrpc（如果cmake支持它）</span><br><span class=\"line\">同样也有脚本变量和模块变量以及其他的方式 和上面一样；</span><br><span class=\"line\">CTEST_DROP_METHOD DROP_METHOD   CTEST_DROP_METHOD</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_SITE &quot;open.cdash.org&quot;) // 测试地址</span><br><span class=\"line\">DropSite （网址： 域名）</span><br><span class=\"line\">dashboard server的名字（ftp, http, and https, scp, and xmlrpc 的目标服务器）</span><br><span class=\"line\">CTEST_DROP_SITE   DROP_SITE</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_LOCATION &quot;/submit.php?project=CMake&quot;) // 位置</span><br><span class=\"line\">DropLocation （位置）</span><br><span class=\"line\">服务器上面的路径 </span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_SITE_CDASH TRUE)</span><br><span class=\"line\">IsCDash</span><br><span class=\"line\">判断dashboard server 是否是一个CDash 或者一个老的dashboard server  实现需求TriggerSite。</span><br><span class=\"line\">scripte 变量： CTEST_DROP_SITE_CDASH</span><br><span class=\"line\">module 变量： CTEST_DROP_SITE_CDASH</span><br><span class=\"line\">[CDash 一个测试服务器，集成了CMake， CTest,CPack](https://www.cdash.org/overview/) </span><br><span class=\"line\">这个东西怎么使用？ 以后需要使用的时候再进行使用吧？</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>cmake 没有指定，应该是讲所有的CMakeLists.txt /*.cmake 的文件进行建立；</p>\n</blockquote>\n<p>CTestCustom.cmake.in 和CTestConfig.cmake 是什么关系？<br>in文件：是对文件进行统一的管理<br>CTestCustom.cmake.in  这个文件应该是对文件的同一管理的内容，也就是公共部分；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CTestCustom.cmake.in</span><br><span class=\"line\"></span><br><span class=\"line\">list(APPEND CTEST_CUSTOM_ERROR_MATCH &quot;ERROR:&quot;) </span><br><span class=\"line\">// 匹配对应的错误（文档中没有找到） </span><br><span class=\"line\"></span><br><span class=\"line\">列出app 结束的时候的警告异常：</span><br><span class=\"line\">list(APPEND CTEST_CUSTOM_WARNING_EXCEPTION</span><br><span class=\"line\">  &quot;warning: cast from &apos;char\\\\*&apos; to &apos;cmCursesWidget\\\\*&apos; increases required alignment of target type&quot; # Occurs when using Solaris&apos;s system libform</span><br><span class=\"line\">  &quot;xtree.[0-9]+. : warning C4702: unreachable code&quot;</span><br><span class=\"line\">  &quot;warning LNK4221&quot;</span><br><span class=\"line\">  &quot;warning LNK4204&quot; # Occurs by race condition with objects in small libs</span><br><span class=\"line\">  &quot;variable .var_args[2]*. is used before its value is set&quot;</span><br><span class=\"line\">  &quot;jobserver unavailable&quot;</span><br><span class=\"line\">  &quot;warning: \\\\(Long double usage is reported only once for each file&quot;</span><br><span class=\"line\">  &quot;warning: To disable this warning use&quot;</span><br><span class=\"line\">  &quot;could not be inlined&quot;</span><br><span class=\"line\">  &quot;libcmcurl.*has no symbols&quot;</span><br><span class=\"line\">  &quot;not sorted slower link editing will result&quot;</span><br><span class=\"line\">  &quot;stl_deque.h:479&quot;</span><br><span class=\"line\">  &quot;Utilities.cmzlib.&quot;</span><br><span class=\"line\">  &quot;Utilities.cmbzip2.&quot;</span><br><span class=\"line\">  &quot;Source.CTest.Curl&quot;</span><br><span class=\"line\">  &quot;Source.CursesDialog.form&quot;</span><br><span class=\"line\">  &quot;Utilities.cmcurl&quot;</span><br><span class=\"line\">  &quot;Utilities.cmexpat.&quot;</span><br><span class=\"line\">  &quot;Utilities.cmlibarchive&quot;</span><br><span class=\"line\">  &quot;warning: declaration of .single. shadows a global declaration&quot;</span><br><span class=\"line\">  &quot;/usr/include.*(warning|note).*shadowed declaration is here&quot;</span><br><span class=\"line\">  &quot;/usr/bin/ld.*warning.*-..*directory.name.*bin.*does not exist&quot;</span><br><span class=\"line\">  &quot;Redeclaration of .send..... with a different storage class specifier&quot;</span><br><span class=\"line\">  &quot;is not used for resolving any symbol&quot;</span><br><span class=\"line\">  &quot;Clock skew detected&quot;</span><br><span class=\"line\">  &quot;remark\\\\(1209&quot;</span><br><span class=\"line\">  &quot;remark: .*LOOP WAS VECTORIZED&quot;</span><br><span class=\"line\">  &quot;warning .980: wrong number of actual arguments to intrinsic function .std::basic_&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*ADVAPI32.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*CRYPT32.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*PSAPI.DLL.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*RPCRT4.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*SHELL32.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*USER32.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*ole32.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;Warning.*: .*/Utilities/KWIML/test/test_int_format.h.* # Redundant preprocessing concatenation&quot;</span><br><span class=\"line\">  &quot;Warning: library was too large for page size.*&quot;</span><br><span class=\"line\">  &quot;Warning: public.*_archive_.*in module.*archive_*clashes with prior module.*archive_.*&quot;</span><br><span class=\"line\">  &quot;Warning: public.*BZ2_bz.*in module.*bzlib.*clashes with prior module.*bzlib.*&quot;</span><br><span class=\"line\">  &quot;Warning: public.*_archive.*clashes with prior module.*&quot;</span><br><span class=\"line\">  &quot;Warning: LINN32: Last line.*is less.*&quot;</span><br><span class=\"line\">  &quot;Warning: Olimit was exceeded on function.*&quot;</span><br><span class=\"line\">  &quot;Warning: To override Olimit for all functions in file.*&quot;</span><br><span class=\"line\">  &quot;Warning: Function .* can throw only the exceptions thrown by the function .* it overrides\\\\.&quot;</span><br><span class=\"line\">  &quot;WarningMessagesDialog\\\\.cxx&quot;</span><br><span class=\"line\">  &quot;warning.*directory name.*CMake-Xcode.*/bin/.*does not exist.*&quot;</span><br><span class=\"line\">  &quot;stl_deque.h:1051&quot;</span><br><span class=\"line\">  &quot;(Lexer|Parser).*warning.*conversion.*may (alter its value|change the sign)&quot;</span><br><span class=\"line\">  &quot;(Lexer|Parser).*warning.*(statement is unreachable|will never be executed)&quot;</span><br><span class=\"line\">  &quot;(Lexer|Parser).*warning.*variable.*was set but never used&quot;</span><br><span class=\"line\">  &quot;PGC-W-0095-Type cast required for this conversion.*ProcessUNIX.c&quot;</span><br><span class=\"line\">  &quot;[Qq]t([Cc]ore|[Gg]ui|[Ww]idgets).*warning.*conversion.*may alter its value&quot;</span><br><span class=\"line\">  &quot;warning:.*is.*very unsafe.*consider using.*&quot;</span><br><span class=\"line\">  &quot;warning:.*is.*misused, please use.*&quot;</span><br><span class=\"line\">  &quot;cmake.version.manifest.*manifest authoring warning.*Unrecognized Element&quot;</span><br><span class=\"line\">  &quot;cc-3968 CC: WARNING File.*&quot; # &quot;implicit&quot; truncation by static_cast</span><br><span class=\"line\">  &quot;ld: warning: directory not found for option .-(F|L)&quot;</span><br><span class=\"line\">  &quot;ld: warning .*/libgcc.a archive&apos;s cputype&quot;</span><br><span class=\"line\">  &quot;ld: warning: ignoring file .*/libgcc.a, file was built for archive which is not the architecture being linked&quot;</span><br><span class=\"line\">  &quot;ld: warning: in .*/libgcc.a, file is not of required architecture&quot;</span><br><span class=\"line\">  &quot;warning.*This version of Mac OS X is unsupported&quot;</span><br><span class=\"line\">  &quot;clang.*: warning: argument unused during compilation: .-g&quot;</span><br><span class=\"line\">  &quot;note: in expansion of macro&quot; # diagnostic context note</span><br><span class=\"line\">  &quot;note: expanded from macro&quot; # diagnostic context note</span><br><span class=\"line\">  &quot;cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*rand.*may return deterministic values&quot;</span><br><span class=\"line\">  &quot;cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*rand.*isn.*t random&quot; # we do not do crypto</span><br><span class=\"line\">  &quot;cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*srand.*seed choices are.*poor&quot; # we do not do crypto</span><br><span class=\"line\">  &quot;IPA warning: function.*multiply defined in&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  # Ignore compiler summary warning, assuming prior text has matched some</span><br><span class=\"line\">  # other warning expression:</span><br><span class=\"line\">  &quot;[0-9,]+ warnings? generated.&quot; # Clang</span><br><span class=\"line\">  &quot;compilation completed with warnings&quot; # PGI</span><br><span class=\"line\">  &quot;[0-9]+ Warning\\\\(s\\\\) detected&quot; # SunPro</span><br><span class=\"line\"></span><br><span class=\"line\"># scanbuild exceptions</span><br><span class=\"line\">  &quot;char_traits.h:.*: warning: Null pointer argument in call to string length function&quot;</span><br><span class=\"line\">  &quot;stl_construct.h:.*: warning: Forming reference to null pointer&quot;</span><br><span class=\"line\">  &quot;.*stl_uninitialized.h:75:19: warning: Forming reference to null pointer.*&quot;</span><br><span class=\"line\">  &quot;.*stl_vector.h:.*: warning: Returning null reference.*&quot;</span><br><span class=\"line\">  &quot;warning: Value stored to &apos;yymsg&apos; is never read&quot;</span><br><span class=\"line\">  &quot;warning: Value stored to &apos;yytoken&apos; is never read&quot;</span><br><span class=\"line\">  &quot;index_encoder.c.241.2. warning: Value stored to .out_start. is never read&quot;</span><br><span class=\"line\">  &quot;index.c.*warning: Access to field.*results in a dereference of a null pointer.*loaded from variable.*&quot;</span><br><span class=\"line\">  &quot;cmCommandArgumentLexer.cxx:[0-9]+:[0-9]+: warning: Call to &apos;realloc&apos; has an allocation size of 0 bytes&quot;</span><br><span class=\"line\">  &quot;cmDependsJavaLexer.cxx:[0-9]+:[0-9]+: warning: Call to &apos;realloc&apos; has an allocation size of 0 bytes&quot;</span><br><span class=\"line\">  &quot;cmExprLexer.cxx:[0-9]+:[0-9]+: warning: Call to &apos;realloc&apos; has an allocation size of 0 bytes&quot;</span><br><span class=\"line\">  &quot;cmListFileLexer.c:[0-9]+:[0-9]+: warning: Call to &apos;realloc&apos; has an allocation size of 0 bytes&quot;</span><br><span class=\"line\">  &quot;cmFortranLexer.cxx:[0-9]+:[0-9]+: warning: Call to &apos;realloc&apos; has an allocation size of 0 bytes&quot;</span><br><span class=\"line\">  &quot;testProcess.*warning: Dereference of null pointer .loaded from variable .invalidAddress..&quot;</span><br><span class=\"line\">  &quot;liblzma/simple/x86.c:[0-9]+:[0-9]+: warning: The result of the &apos;&lt;&lt;&apos; expression is undefined&quot;</span><br><span class=\"line\">  &quot;liblzma/common/index_encoder.c:[0-9]+:[0-9]+: warning: Value stored to .* during its initialization is never read&quot;</span><br><span class=\"line\">  &quot;libuv/src/.*:[0-9]+:[0-9]+: warning: Dereference of null pointer&quot;</span><br><span class=\"line\">  &quot;libuv/src/.*:[0-9]+:[0-9]+: warning: The left operand of &apos;==&apos; is a garbage value&quot;</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">CTEST_CUSTOM_WARNING_EXCEPTION 这个是警告的异常</span><br><span class=\"line\"></span><br><span class=\"line\"> 这里是xcode结束的</span><br><span class=\"line\">if(NOT &quot;@CMAKE_GENERATOR@&quot; MATCHES &quot;Xcode&quot;)</span><br><span class=\"line\">  list(APPEND CTEST_CUSTOM_COVERAGE_EXCLUDE &quot;XCode&quot;)</span><br><span class=\"line\">endif ()</span><br><span class=\"line\"></span><br><span class=\"line\"> 覆盖率</span><br><span class=\"line\">list(APPEND CTEST_CUSTOM_COVERAGE_EXCLUDE</span><br><span class=\"line\">  # Exclude kwsys files from coverage results. They are reported</span><br><span class=\"line\">  # (with better coverage results) on kwsys dashboards...</span><br><span class=\"line\">  &quot;/Source/(cm|kw)sys/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  # Exclude try_compile sources from coverage results:</span><br><span class=\"line\">  &quot;/CMakeFiles/CMakeTmp/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  # Exclude Qt source files from coverage results:</span><br><span class=\"line\">  &quot;[A-Za-z]./[Qq]t/qt-.+-opensource-src&quot;</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">内存检查忽略</span><br><span class=\"line\">list(APPEND CTEST_CUSTOM_MEMCHECK_IGNORE</span><br><span class=\"line\">  kwsys.testProcess-10 # See Source/kwsys/CTestCustom.cmake.in</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">PS : 从上面可以看出，列出了很对对应的列表内容；</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set(CTEST_PROJECT_NAME &quot;CMake&quot;) // 项目名字</span><br><span class=\"line\">set(CTEST_NIGHTLY_START_TIME &quot;1:00:00 UTC&quot;) // 执行时间</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_METHOD &quot;http&quot;) // 方式</span><br><span class=\"line\">set(CTEST_DROP_SITE &quot;open.cdash.org&quot;) // 网址</span><br><span class=\"line\">set(CTEST_DROP_LOCATION &quot;/submit.php?project=CMake&quot;) // 存放位置</span><br><span class=\"line\">set(CTEST_DROP_SITE_CDASH TRUE) // 是否使用CDash ，所以这个是CDash上面使用的</span><br><span class=\"line\">set(CTEST_CDASH_VERSION &quot;1.6&quot;) // CDash版本</span><br><span class=\"line\">set(CTEST_CDASH_QUERY_VERSION TRUE)// CDash 请求版本</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configure 文件内容:</span><br><span class=\"line\"></span><br><span class=\"line\">其实就是shell脚本配置bootstrap 的脚本 ，其实这里启动了bootstrap这个命令</span><br><span class=\"line\">#!/bin/sh</span><br><span class=\"line\">cmake_source_dir=`cd &quot;\\`dirname \\&quot;$0\\&quot;\\`&quot;;pwd` 获取到当前的目录下面，这个cmake_source_dir值（具体什么原理得看shell）</span><br><span class=\"line\">exec &quot;$&#123;cmake_source_dir&#125;/bootstrap&quot; &quot;$@&quot; //执行bootstrap</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">shell脚本内容:</span><br><span class=\"line\">eg:新建了一个shell脚本 Test.sh 文件，内容：</span><br><span class=\"line\">#!/bin/sh</span><br><span class=\"line\">echo &quot;shell脚本本身的名字: $0&quot;</span><br><span class=\"line\">echo &quot;传给shell的第一个参数: $1&quot;</span><br><span class=\"line\">echo &quot;传给shell的第二个参数: $2&quot;</span><br><span class=\"line\">在Test.sh所在的目录下输入 bash Test.sh 1 2</span><br><span class=\"line\">结果为:</span><br><span class=\"line\">shell脚本本身的名字: Test.sh</span><br><span class=\"line\">传给shell的第一个参数: 1</span><br><span class=\"line\">传给shell的第二个参数:  2</span><br><span class=\"line\"></span><br><span class=\"line\">变量\t含义</span><br><span class=\"line\">$0\t当前脚本的文件名</span><br><span class=\"line\">$n\t传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2</span><br><span class=\"line\">$#\t传递给脚本或函数的参数个数</span><br><span class=\"line\">$*\t传递给脚本或函数的所有参数</span><br><span class=\"line\">$@\t传递给脚本或函数的所有参数。被双引号(&quot; &quot;)包含时，与 $* 稍有不同</span><br><span class=\"line\">$?\t上个命令的退出状态，或函数的返回值</span><br><span class=\"line\">$$\t当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID</span><br><span class=\"line\"> </span><br><span class=\"line\">$* 和 $@ 的区别</span><br><span class=\"line\">$* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号(&quot; &quot;)包含时，都以&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数。但是当它们被双引号(&quot; &quot;)包含时，&quot;$*&quot; 会将所有的参数作为一个整体，以&quot;$1 $2 … $n&quot;的形式输出所有参数；&quot;$@&quot; 会将各个参数分开，以&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数。</span><br><span class=\"line\">参考链接：https://www.cnblogs.com/zhaohuiazl/p/7423779.html</span><br><span class=\"line\"></span><br><span class=\"line\">dirname (man dirname)</span><br><span class=\"line\">脚本中获取 脚本文件所在的绝对路径</span><br><span class=\"line\">shellPath=$(cd &quot;$(dirname &quot;$0&quot;)&quot;; pwd)</span><br><span class=\"line\">echo $shellPaht</span><br><span class=\"line\"></span><br><span class=\"line\">[shell 命令大全](http://www.runoob.com/linux/linux-command-manual.html)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bootstrap： 是shell脚本，这个有时间再去看一下 【很多项目构建都会写一个引导程序来处理编译打包的逻辑】</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CompileFlags.cmake : 编译的配置</span><br><span class=\"line\">主要根据平台来设置一些标识，用于接下来的编译，所以做到了跨平台</span><br><span class=\"line\">里面每个字段的定义，可以再一次去看看！</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CMakeLists.txt 真正构建cmake项目的文件 （详情细看）</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CMakeGraphVizOptions.cmake 图像的选择</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CMakeCPackOptions.cmake.in 打包选项的配置</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CMakeCPack.cmake 打包的cmake</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake_uninstall.cmake.in 卸载的cmake</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.hooks-config ： 这个不知道是配置什么来的 ，不知道这个是什么 [应该是属于git的内容]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.gitignore git忽略的文件</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.gitattributes 这个配置git的属性</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.clang-tidy  clang tidy 是一个静态代码分析框架 https://www.jianshu.com/p/d6e12fc51294</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.clang-format 格式样式</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Auxiliary 辅助文件夹</span><br><span class=\"line\">Bootstrap.cmk 启动配置</span><br><span class=\"line\">Help 帮助文档</span><br><span class=\"line\">Licenses </span><br><span class=\"line\">Modules 模块</span><br><span class=\"line\">Packaging 打包</span><br><span class=\"line\">source 存放文件源代码</span><br><span class=\"line\">Templates 模板</span><br><span class=\"line\">Tests 测试代码</span><br><span class=\"line\">Utilities 集合</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/u012662731/article/details/78531497?locationNum=5&amp;fps=1\" target=\"_blank\" rel=\"noopener\">关于c/c++的后缀名</a><br><a href=\"https://blog.csdn.net/grllery/article/details/80426875\" target=\"_blank\" rel=\"noopener\">.rst文件介绍</a></p>\n<p>—————————————————————————————————————————————<br>这个项目无法再接着继续看了，因为太多东西了； 有一天写C项目的时候，在仔细去研究研究</p>\n<font size=\"2\" color=\"red\">暂时先到这里</font>\n","site":{"data":{}},"excerpt":"","more":"<p>CMake</p>\n<hr>\n<p><img src=\"../../../../asset/Snip20190226_3.png\" alt=\"cmake\" title=\"cmake 代码架构\"></p>\n<p>CMakeLists.txt /*.cmake 都是构建的配置文件</p>\n<p>CMake[cross platform make]是一个跨平台的安装（编译）工具，</p>\n<ul>\n<li>1）可以用简单的语句来描述所有平台的安装(编译过程)。</li>\n<li>2）输出各种各样的makefile或者project文件，能测试编译器所支持的C++特性,类似UNIX下的automake。只是 CMake 的组态档取名为 CMakeLists.txt。</li>\n<li>3）Cmake 并不直接建构出最终的软件，而是产生标准的建构档（如 Unix 的 Makefile 或 Windows Visual C++ 的 projects/workspaces），然后再依一般的建构方式使用。  这使得熟悉某个集成开发环境（IDE）的开发者可以用标准的方式建构他的软件，这种可以使用各平台的原生建构系统的能力是 CMake 和 SCons 等其他类似系统的区别之处。</li>\n</ul>\n<p>功能：<br>CMake 可以编译源代码、制作程序库、产生适配器（wrapper）、还可以用任意的顺序建构执行档。CMake 支持 in-place 建构（二进档和源代码在同一个目录树中）和 out-of-place 建构（二进档在别的目录里），因此可以很容易从同一个源代码目录树中建构出多个二进档。CMake 也支持静态与动态程式库的建构。<br>“CMake”这个名字是“cross platform make”的缩写。虽然名字中含有“make”，但是CMake和Unix上常见的“make”系统是分开的，而且更为高阶。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make 和cmake有什么区别？</span><br><span class=\"line\">*1、GCC是多种语言的编译器；（括C、C++、Objective-C、Fortran、Java等等）【如果你的源文件只有一个的时候，直接用gcc命令编译它； 多个源文件时，用gcc命令逐个去编译时，工作量大且混乱】</span><br><span class=\"line\">*2、多个源文件如果编译？ ———&gt;make</span><br><span class=\"line\">一个只能批处理的工具，【本身没有编译和链接的功能】，通过调用makefile文件中用户指定的命令来进行编译和链接的（可能make文件里面就写了gcc的编译命令）</span><br><span class=\"line\">3、makefile文件是什么? 上面： 存储编译命令，；比喻：简单的说就像一首歌的乐谱，make工具就像指挥家，指挥家根据乐谱指挥整个乐团怎么样演奏，make工具就根据makefile中的命令进行编译和链接的。(eg: makel命令中包含调用gcc编译某个源文件的命令)；make做一些简单的工程可以人手工在makefile文件里面添加编译等等命令；【（缺点）如果项目足够很大的时候，这样工作量也很大；如果换了平台，makefile又要重新修改】；</span><br><span class=\"line\">4、[跨平台]CMake工具解决makefile上手工添加命令的缺点；cmake就可以更加简单的生成makefile文件给上面那个make用； 同时扩平台【不用修改makefile文件】， 等等其他功能；</span><br><span class=\"line\">5、cmake如何生成makefile文件的？ —— CMakeLists.txt 文件（学名：组态档），通过它来生成makefile；所以，我们手工写CMakeLists.txt 这个文件即可【这个文件写入简单】</span><br><span class=\"line\">6、</span><br><span class=\"line\">cmake是用来生成Makefile文件的工具，生成Makefile文件的工具还有autotools，Qt环境下还有qmake</span><br><span class=\"line\">参考链接:</span><br><span class=\"line\">https://blog.csdn.net/jc_benben/article/details/78571728</span><br><span class=\"line\">https://www.cnblogs.com/sunsky303/p/7750299.html?utm_source=debugrun&amp;utm_medium=referral</span><br><span class=\"line\"></span><br><span class=\"line\">PS：cmake 不仅仅是make</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>执行命令： cmake CMakeLists.txt </p>\n</blockquote>\n<p>看一下cmake的代码，里面写了什么， 建立系统、打包、创建测试环境；</p>\n<p>&amp;&amp; ————————————————cmake的简单实用————————————<br>cmake_minimum_required(VERSION 3.12) // 这里的version要注意是当前系统的版本<br><a href=\"https://www.jianshu.com/p/8df5b2aba316\" target=\"_blank\" rel=\"noopener\">项目简单实践</a><br>明天接着运行上面的例子；</p>\n<p>CMakeList.txt 文件构建（写） 这里就是cmake的写法 【注意，写的时候不要有逗号在参数见】</p>\n<p>好像SET这个命令有问题呀；??? 是不是我使用出现了错误还是在mac上不能够这样使用？<br>有关的书籍， 我们应该如何去存储？</p>\n<p><a href=\"../../../../books/CMake Practice.pdf\">cmake实践</a><br><a href=\"https://www.hahack.com/codes/cmake/\" target=\"_blank\" rel=\"noopener\">实践参考链接</a><br>set应该如何去使用？</p>\n<p><a href=\"https://cmake.org/cmake/help/v3.12/index.html\" target=\"_blank\" rel=\"noopener\">https://cmake.org/cmake/help/v3.12/index.html</a> 文档链接 内容如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Command-Line Tools： 3个命令行</span><br><span class=\"line\">cmake </span><br><span class=\"line\">ctest </span><br><span class=\"line\">cpack</span><br><span class=\"line\"></span><br><span class=\"line\">Interactive Dialogs： 交互的窗口（可视化界面）</span><br><span class=\"line\">cmake-gui(1)</span><br><span class=\"line\">ccmake(1)</span><br><span class=\"line\"></span><br><span class=\"line\">Reference Manuals ： 参考手册</span><br><span class=\"line\">cmake-buildsystem(7) 主要介绍链接了系统的库内容</span><br><span class=\"line\">cmake-commands(7) 一些命令的设置</span><br><span class=\"line\">cmake-compile-features(7) 编译特色 【也就是编译指定的特点或者针对支持】</span><br><span class=\"line\">cmake-developer(7)</span><br><span class=\"line\">cmake-env-variables(7)</span><br><span class=\"line\">cmake-generator-expressions(7)</span><br><span class=\"line\">cmake-generators(7)</span><br><span class=\"line\">cmake-language(7)  语言，这个需要详细去查看</span><br><span class=\"line\">cmake-modules(7)</span><br><span class=\"line\">cmake-packages(7)</span><br><span class=\"line\">cmake-policies(7)</span><br><span class=\"line\">cmake-properties(7)</span><br><span class=\"line\">cmake-qt(7)</span><br><span class=\"line\">cmake-server(7)</span><br><span class=\"line\">cmake-toolchains(7)</span><br><span class=\"line\">cmake-variables(7)</span><br></pre></td></tr></table></figure></p>\n<p>总结： 这个项目主要是用cmake来构建代码编译打包等；有关内容，通过真实的项目来实现；</p>\n<blockquote>\n<p>几个关键字：CMakeLists.txt Makefile make cmake </p>\n</blockquote>\n<p>cmake的源码应该怎么样子去看，我这里还不是很懂， 先看cmake里面的CMakeLists.txt文件吧；</p>\n<p>2、Doxygen是一种开源跨平台的，以类似JavaDoc风格描述的文档系统，完全支持C、C++、Java、Objective-C和IDL语言，部分支持PHP、C#。注释的语法与Qt-Doc、KDoc和JavaDoc兼容。Doxygen可以从一套归档源文件开始，生成HTML格式的在线类浏览器，或离线的LATEX、RTF参考手册。</p>\n<p>Doxygen 是一个程序的文件产生工具，可将程序中的特定注释转换成为说明文件。通常我们在写程序时，或多或少都会写上注释，但是对于其它人而言，要直接探索程序里的注释，与打捞泰坦尼克号同样的辛苦。大部分有用的注释都是属于针对函数、类型等等的说明。所以，如果能依据程序本身的结构，将注释经过处理重新整理成为一个纯粹的参考手册，对于后面利用您的程序代码的人而言将会减少许多的负担。不过，反过来说，整理文件的工作对于您来说，就是沉重的负担。</p>\n<p><a href=\"https://www.cnblogs.com/1-434/p/8086435.html\" target=\"_blank\" rel=\"noopener\">xcode上配置Doxygen</a></p>\n<p>知道cmake里面使用了doxygen 来生成开发文档， 这里暂时先不管了； 到时候再去研究？？？？</p>\n<p>3、cmake项目的源代码以及配置的了解<br>DartConfig.cmake 文件的内容<br><a href=\"https://www.dartlang.org/guides/language/language-tour\" target=\"_blank\" rel=\"noopener\">Dart 语言链接，dart就是D语言</a><br><a href=\"https://github.com/dart-atom\" target=\"_blank\" rel=\"noopener\">Dart github地址</a><br><a href=\"https://flutterchina.club/using-packages/\" target=\"_blank\" rel=\"noopener\">dart 语言应用在flutter项目中</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dareconfig.cmake 文件的内容：</span><br><span class=\"line\">set(CTEST_PROJECT_NAME &quot;CMake&quot;) // 设置测试的项目名字</span><br><span class=\"line\">set(CTEST_NIGHTLY_START_TIME &quot;21:00:00 EDT&quot;) //每天晚上9点钟执行</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_METHOD &quot;http&quot;)  // 方法使用http</span><br><span class=\"line\">set(CTEST_DROP_SITE &quot;open.cdash.org&quot;) // 测试地址</span><br><span class=\"line\">set(CTEST_DROP_LOCATION &quot;/submit.php?project=CMake&quot;) // 位置</span><br><span class=\"line\">set(CTEST_DROP_SITE_CDASH TRUE) // 地址为真</span><br></pre></td></tr></table></figure>\n<p>上面的代码块中可以查找网址:<a href=\"https://cmake.org/cmake/help/v3.12/manual/ctest.1.html\" target=\"_blank\" rel=\"noopener\">CTest的内容</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set(CTEST_PROJECT_NAME &quot;CMake&quot;) // 设置测试的项目名字</span><br><span class=\"line\">文档里面没有给出project name, 但是我们知道这个指定测试项目的名字了 【不过里面有个build name（也许可以替换）】</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_NIGHTLY_START_TIME &quot;21:00:00 EDT&quot;) //每天晚上9点钟执行</span><br><span class=\"line\">&gt;  NightlyStartTime</span><br><span class=\"line\">在夜间仪表盘模式，指定“夜间开始时间（nightly start time）”，带有确定的控制系统版本（cvs、svn），更新步骤检查软件的版本在这个时候所以，多客户端会选择一个共同的版本测试。 对于分布式版本控制不是很好定义，所以设置被忽略掉；</span><br><span class=\"line\">CTest脚本变量: CTEST_NIGHTLY_START_TIME</span><br><span class=\"line\">如果模块变量设置，则为NIGHTLY_START_TIME ，其他的是CTEST_NIGHTLY_START_TIME ；</span><br><span class=\"line\">【符合ctest的定义和书写格式】 【一会其他特殊的才会标出来】</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_METHOD &quot;http&quot;)  // 方法使用http</span><br><span class=\"line\">&gt; \tDropMethod</span><br><span class=\"line\">指定提交到dashboard服务器的方法，值可以是：cp, ftp, http, https, scp, or xmlrpc（如果cmake支持它）</span><br><span class=\"line\">同样也有脚本变量和模块变量以及其他的方式 和上面一样；</span><br><span class=\"line\">CTEST_DROP_METHOD DROP_METHOD   CTEST_DROP_METHOD</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_SITE &quot;open.cdash.org&quot;) // 测试地址</span><br><span class=\"line\">DropSite （网址： 域名）</span><br><span class=\"line\">dashboard server的名字（ftp, http, and https, scp, and xmlrpc 的目标服务器）</span><br><span class=\"line\">CTEST_DROP_SITE   DROP_SITE</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_LOCATION &quot;/submit.php?project=CMake&quot;) // 位置</span><br><span class=\"line\">DropLocation （位置）</span><br><span class=\"line\">服务器上面的路径 </span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_SITE_CDASH TRUE)</span><br><span class=\"line\">IsCDash</span><br><span class=\"line\">判断dashboard server 是否是一个CDash 或者一个老的dashboard server  实现需求TriggerSite。</span><br><span class=\"line\">scripte 变量： CTEST_DROP_SITE_CDASH</span><br><span class=\"line\">module 变量： CTEST_DROP_SITE_CDASH</span><br><span class=\"line\">[CDash 一个测试服务器，集成了CMake， CTest,CPack](https://www.cdash.org/overview/) </span><br><span class=\"line\">这个东西怎么使用？ 以后需要使用的时候再进行使用吧？</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>cmake 没有指定，应该是讲所有的CMakeLists.txt /*.cmake 的文件进行建立；</p>\n</blockquote>\n<p>CTestCustom.cmake.in 和CTestConfig.cmake 是什么关系？<br>in文件：是对文件进行统一的管理<br>CTestCustom.cmake.in  这个文件应该是对文件的同一管理的内容，也就是公共部分；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CTestCustom.cmake.in</span><br><span class=\"line\"></span><br><span class=\"line\">list(APPEND CTEST_CUSTOM_ERROR_MATCH &quot;ERROR:&quot;) </span><br><span class=\"line\">// 匹配对应的错误（文档中没有找到） </span><br><span class=\"line\"></span><br><span class=\"line\">列出app 结束的时候的警告异常：</span><br><span class=\"line\">list(APPEND CTEST_CUSTOM_WARNING_EXCEPTION</span><br><span class=\"line\">  &quot;warning: cast from &apos;char\\\\*&apos; to &apos;cmCursesWidget\\\\*&apos; increases required alignment of target type&quot; # Occurs when using Solaris&apos;s system libform</span><br><span class=\"line\">  &quot;xtree.[0-9]+. : warning C4702: unreachable code&quot;</span><br><span class=\"line\">  &quot;warning LNK4221&quot;</span><br><span class=\"line\">  &quot;warning LNK4204&quot; # Occurs by race condition with objects in small libs</span><br><span class=\"line\">  &quot;variable .var_args[2]*. is used before its value is set&quot;</span><br><span class=\"line\">  &quot;jobserver unavailable&quot;</span><br><span class=\"line\">  &quot;warning: \\\\(Long double usage is reported only once for each file&quot;</span><br><span class=\"line\">  &quot;warning: To disable this warning use&quot;</span><br><span class=\"line\">  &quot;could not be inlined&quot;</span><br><span class=\"line\">  &quot;libcmcurl.*has no symbols&quot;</span><br><span class=\"line\">  &quot;not sorted slower link editing will result&quot;</span><br><span class=\"line\">  &quot;stl_deque.h:479&quot;</span><br><span class=\"line\">  &quot;Utilities.cmzlib.&quot;</span><br><span class=\"line\">  &quot;Utilities.cmbzip2.&quot;</span><br><span class=\"line\">  &quot;Source.CTest.Curl&quot;</span><br><span class=\"line\">  &quot;Source.CursesDialog.form&quot;</span><br><span class=\"line\">  &quot;Utilities.cmcurl&quot;</span><br><span class=\"line\">  &quot;Utilities.cmexpat.&quot;</span><br><span class=\"line\">  &quot;Utilities.cmlibarchive&quot;</span><br><span class=\"line\">  &quot;warning: declaration of .single. shadows a global declaration&quot;</span><br><span class=\"line\">  &quot;/usr/include.*(warning|note).*shadowed declaration is here&quot;</span><br><span class=\"line\">  &quot;/usr/bin/ld.*warning.*-..*directory.name.*bin.*does not exist&quot;</span><br><span class=\"line\">  &quot;Redeclaration of .send..... with a different storage class specifier&quot;</span><br><span class=\"line\">  &quot;is not used for resolving any symbol&quot;</span><br><span class=\"line\">  &quot;Clock skew detected&quot;</span><br><span class=\"line\">  &quot;remark\\\\(1209&quot;</span><br><span class=\"line\">  &quot;remark: .*LOOP WAS VECTORIZED&quot;</span><br><span class=\"line\">  &quot;warning .980: wrong number of actual arguments to intrinsic function .std::basic_&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*ADVAPI32.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*CRYPT32.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*PSAPI.DLL.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*RPCRT4.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*SHELL32.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*USER32.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;LINK : warning LNK4089: all references to.*ole32.dll.*discarded by /OPT:REF&quot;</span><br><span class=\"line\">  &quot;Warning.*: .*/Utilities/KWIML/test/test_int_format.h.* # Redundant preprocessing concatenation&quot;</span><br><span class=\"line\">  &quot;Warning: library was too large for page size.*&quot;</span><br><span class=\"line\">  &quot;Warning: public.*_archive_.*in module.*archive_*clashes with prior module.*archive_.*&quot;</span><br><span class=\"line\">  &quot;Warning: public.*BZ2_bz.*in module.*bzlib.*clashes with prior module.*bzlib.*&quot;</span><br><span class=\"line\">  &quot;Warning: public.*_archive.*clashes with prior module.*&quot;</span><br><span class=\"line\">  &quot;Warning: LINN32: Last line.*is less.*&quot;</span><br><span class=\"line\">  &quot;Warning: Olimit was exceeded on function.*&quot;</span><br><span class=\"line\">  &quot;Warning: To override Olimit for all functions in file.*&quot;</span><br><span class=\"line\">  &quot;Warning: Function .* can throw only the exceptions thrown by the function .* it overrides\\\\.&quot;</span><br><span class=\"line\">  &quot;WarningMessagesDialog\\\\.cxx&quot;</span><br><span class=\"line\">  &quot;warning.*directory name.*CMake-Xcode.*/bin/.*does not exist.*&quot;</span><br><span class=\"line\">  &quot;stl_deque.h:1051&quot;</span><br><span class=\"line\">  &quot;(Lexer|Parser).*warning.*conversion.*may (alter its value|change the sign)&quot;</span><br><span class=\"line\">  &quot;(Lexer|Parser).*warning.*(statement is unreachable|will never be executed)&quot;</span><br><span class=\"line\">  &quot;(Lexer|Parser).*warning.*variable.*was set but never used&quot;</span><br><span class=\"line\">  &quot;PGC-W-0095-Type cast required for this conversion.*ProcessUNIX.c&quot;</span><br><span class=\"line\">  &quot;[Qq]t([Cc]ore|[Gg]ui|[Ww]idgets).*warning.*conversion.*may alter its value&quot;</span><br><span class=\"line\">  &quot;warning:.*is.*very unsafe.*consider using.*&quot;</span><br><span class=\"line\">  &quot;warning:.*is.*misused, please use.*&quot;</span><br><span class=\"line\">  &quot;cmake.version.manifest.*manifest authoring warning.*Unrecognized Element&quot;</span><br><span class=\"line\">  &quot;cc-3968 CC: WARNING File.*&quot; # &quot;implicit&quot; truncation by static_cast</span><br><span class=\"line\">  &quot;ld: warning: directory not found for option .-(F|L)&quot;</span><br><span class=\"line\">  &quot;ld: warning .*/libgcc.a archive&apos;s cputype&quot;</span><br><span class=\"line\">  &quot;ld: warning: ignoring file .*/libgcc.a, file was built for archive which is not the architecture being linked&quot;</span><br><span class=\"line\">  &quot;ld: warning: in .*/libgcc.a, file is not of required architecture&quot;</span><br><span class=\"line\">  &quot;warning.*This version of Mac OS X is unsupported&quot;</span><br><span class=\"line\">  &quot;clang.*: warning: argument unused during compilation: .-g&quot;</span><br><span class=\"line\">  &quot;note: in expansion of macro&quot; # diagnostic context note</span><br><span class=\"line\">  &quot;note: expanded from macro&quot; # diagnostic context note</span><br><span class=\"line\">  &quot;cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*rand.*may return deterministic values&quot;</span><br><span class=\"line\">  &quot;cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*rand.*isn.*t random&quot; # we do not do crypto</span><br><span class=\"line\">  &quot;cm(StringCommand|CTestTestHandler)\\\\.cxx.*warning.*srand.*seed choices are.*poor&quot; # we do not do crypto</span><br><span class=\"line\">  &quot;IPA warning: function.*multiply defined in&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  # Ignore compiler summary warning, assuming prior text has matched some</span><br><span class=\"line\">  # other warning expression:</span><br><span class=\"line\">  &quot;[0-9,]+ warnings? generated.&quot; # Clang</span><br><span class=\"line\">  &quot;compilation completed with warnings&quot; # PGI</span><br><span class=\"line\">  &quot;[0-9]+ Warning\\\\(s\\\\) detected&quot; # SunPro</span><br><span class=\"line\"></span><br><span class=\"line\"># scanbuild exceptions</span><br><span class=\"line\">  &quot;char_traits.h:.*: warning: Null pointer argument in call to string length function&quot;</span><br><span class=\"line\">  &quot;stl_construct.h:.*: warning: Forming reference to null pointer&quot;</span><br><span class=\"line\">  &quot;.*stl_uninitialized.h:75:19: warning: Forming reference to null pointer.*&quot;</span><br><span class=\"line\">  &quot;.*stl_vector.h:.*: warning: Returning null reference.*&quot;</span><br><span class=\"line\">  &quot;warning: Value stored to &apos;yymsg&apos; is never read&quot;</span><br><span class=\"line\">  &quot;warning: Value stored to &apos;yytoken&apos; is never read&quot;</span><br><span class=\"line\">  &quot;index_encoder.c.241.2. warning: Value stored to .out_start. is never read&quot;</span><br><span class=\"line\">  &quot;index.c.*warning: Access to field.*results in a dereference of a null pointer.*loaded from variable.*&quot;</span><br><span class=\"line\">  &quot;cmCommandArgumentLexer.cxx:[0-9]+:[0-9]+: warning: Call to &apos;realloc&apos; has an allocation size of 0 bytes&quot;</span><br><span class=\"line\">  &quot;cmDependsJavaLexer.cxx:[0-9]+:[0-9]+: warning: Call to &apos;realloc&apos; has an allocation size of 0 bytes&quot;</span><br><span class=\"line\">  &quot;cmExprLexer.cxx:[0-9]+:[0-9]+: warning: Call to &apos;realloc&apos; has an allocation size of 0 bytes&quot;</span><br><span class=\"line\">  &quot;cmListFileLexer.c:[0-9]+:[0-9]+: warning: Call to &apos;realloc&apos; has an allocation size of 0 bytes&quot;</span><br><span class=\"line\">  &quot;cmFortranLexer.cxx:[0-9]+:[0-9]+: warning: Call to &apos;realloc&apos; has an allocation size of 0 bytes&quot;</span><br><span class=\"line\">  &quot;testProcess.*warning: Dereference of null pointer .loaded from variable .invalidAddress..&quot;</span><br><span class=\"line\">  &quot;liblzma/simple/x86.c:[0-9]+:[0-9]+: warning: The result of the &apos;&lt;&lt;&apos; expression is undefined&quot;</span><br><span class=\"line\">  &quot;liblzma/common/index_encoder.c:[0-9]+:[0-9]+: warning: Value stored to .* during its initialization is never read&quot;</span><br><span class=\"line\">  &quot;libuv/src/.*:[0-9]+:[0-9]+: warning: Dereference of null pointer&quot;</span><br><span class=\"line\">  &quot;libuv/src/.*:[0-9]+:[0-9]+: warning: The left operand of &apos;==&apos; is a garbage value&quot;</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">CTEST_CUSTOM_WARNING_EXCEPTION 这个是警告的异常</span><br><span class=\"line\"></span><br><span class=\"line\"> 这里是xcode结束的</span><br><span class=\"line\">if(NOT &quot;@CMAKE_GENERATOR@&quot; MATCHES &quot;Xcode&quot;)</span><br><span class=\"line\">  list(APPEND CTEST_CUSTOM_COVERAGE_EXCLUDE &quot;XCode&quot;)</span><br><span class=\"line\">endif ()</span><br><span class=\"line\"></span><br><span class=\"line\"> 覆盖率</span><br><span class=\"line\">list(APPEND CTEST_CUSTOM_COVERAGE_EXCLUDE</span><br><span class=\"line\">  # Exclude kwsys files from coverage results. They are reported</span><br><span class=\"line\">  # (with better coverage results) on kwsys dashboards...</span><br><span class=\"line\">  &quot;/Source/(cm|kw)sys/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  # Exclude try_compile sources from coverage results:</span><br><span class=\"line\">  &quot;/CMakeFiles/CMakeTmp/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  # Exclude Qt source files from coverage results:</span><br><span class=\"line\">  &quot;[A-Za-z]./[Qq]t/qt-.+-opensource-src&quot;</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">内存检查忽略</span><br><span class=\"line\">list(APPEND CTEST_CUSTOM_MEMCHECK_IGNORE</span><br><span class=\"line\">  kwsys.testProcess-10 # See Source/kwsys/CTestCustom.cmake.in</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">PS : 从上面可以看出，列出了很对对应的列表内容；</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set(CTEST_PROJECT_NAME &quot;CMake&quot;) // 项目名字</span><br><span class=\"line\">set(CTEST_NIGHTLY_START_TIME &quot;1:00:00 UTC&quot;) // 执行时间</span><br><span class=\"line\"></span><br><span class=\"line\">set(CTEST_DROP_METHOD &quot;http&quot;) // 方式</span><br><span class=\"line\">set(CTEST_DROP_SITE &quot;open.cdash.org&quot;) // 网址</span><br><span class=\"line\">set(CTEST_DROP_LOCATION &quot;/submit.php?project=CMake&quot;) // 存放位置</span><br><span class=\"line\">set(CTEST_DROP_SITE_CDASH TRUE) // 是否使用CDash ，所以这个是CDash上面使用的</span><br><span class=\"line\">set(CTEST_CDASH_VERSION &quot;1.6&quot;) // CDash版本</span><br><span class=\"line\">set(CTEST_CDASH_QUERY_VERSION TRUE)// CDash 请求版本</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configure 文件内容:</span><br><span class=\"line\"></span><br><span class=\"line\">其实就是shell脚本配置bootstrap 的脚本 ，其实这里启动了bootstrap这个命令</span><br><span class=\"line\">#!/bin/sh</span><br><span class=\"line\">cmake_source_dir=`cd &quot;\\`dirname \\&quot;$0\\&quot;\\`&quot;;pwd` 获取到当前的目录下面，这个cmake_source_dir值（具体什么原理得看shell）</span><br><span class=\"line\">exec &quot;$&#123;cmake_source_dir&#125;/bootstrap&quot; &quot;$@&quot; //执行bootstrap</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">shell脚本内容:</span><br><span class=\"line\">eg:新建了一个shell脚本 Test.sh 文件，内容：</span><br><span class=\"line\">#!/bin/sh</span><br><span class=\"line\">echo &quot;shell脚本本身的名字: $0&quot;</span><br><span class=\"line\">echo &quot;传给shell的第一个参数: $1&quot;</span><br><span class=\"line\">echo &quot;传给shell的第二个参数: $2&quot;</span><br><span class=\"line\">在Test.sh所在的目录下输入 bash Test.sh 1 2</span><br><span class=\"line\">结果为:</span><br><span class=\"line\">shell脚本本身的名字: Test.sh</span><br><span class=\"line\">传给shell的第一个参数: 1</span><br><span class=\"line\">传给shell的第二个参数:  2</span><br><span class=\"line\"></span><br><span class=\"line\">变量\t含义</span><br><span class=\"line\">$0\t当前脚本的文件名</span><br><span class=\"line\">$n\t传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2</span><br><span class=\"line\">$#\t传递给脚本或函数的参数个数</span><br><span class=\"line\">$*\t传递给脚本或函数的所有参数</span><br><span class=\"line\">$@\t传递给脚本或函数的所有参数。被双引号(&quot; &quot;)包含时，与 $* 稍有不同</span><br><span class=\"line\">$?\t上个命令的退出状态，或函数的返回值</span><br><span class=\"line\">$$\t当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID</span><br><span class=\"line\"> </span><br><span class=\"line\">$* 和 $@ 的区别</span><br><span class=\"line\">$* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号(&quot; &quot;)包含时，都以&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数。但是当它们被双引号(&quot; &quot;)包含时，&quot;$*&quot; 会将所有的参数作为一个整体，以&quot;$1 $2 … $n&quot;的形式输出所有参数；&quot;$@&quot; 会将各个参数分开，以&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数。</span><br><span class=\"line\">参考链接：https://www.cnblogs.com/zhaohuiazl/p/7423779.html</span><br><span class=\"line\"></span><br><span class=\"line\">dirname (man dirname)</span><br><span class=\"line\">脚本中获取 脚本文件所在的绝对路径</span><br><span class=\"line\">shellPath=$(cd &quot;$(dirname &quot;$0&quot;)&quot;; pwd)</span><br><span class=\"line\">echo $shellPaht</span><br><span class=\"line\"></span><br><span class=\"line\">[shell 命令大全](http://www.runoob.com/linux/linux-command-manual.html)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bootstrap： 是shell脚本，这个有时间再去看一下 【很多项目构建都会写一个引导程序来处理编译打包的逻辑】</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CompileFlags.cmake : 编译的配置</span><br><span class=\"line\">主要根据平台来设置一些标识，用于接下来的编译，所以做到了跨平台</span><br><span class=\"line\">里面每个字段的定义，可以再一次去看看！</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CMakeLists.txt 真正构建cmake项目的文件 （详情细看）</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CMakeGraphVizOptions.cmake 图像的选择</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CMakeCPackOptions.cmake.in 打包选项的配置</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CMakeCPack.cmake 打包的cmake</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake_uninstall.cmake.in 卸载的cmake</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.hooks-config ： 这个不知道是配置什么来的 ，不知道这个是什么 [应该是属于git的内容]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.gitignore git忽略的文件</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.gitattributes 这个配置git的属性</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.clang-tidy  clang tidy 是一个静态代码分析框架 https://www.jianshu.com/p/d6e12fc51294</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.clang-format 格式样式</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Auxiliary 辅助文件夹</span><br><span class=\"line\">Bootstrap.cmk 启动配置</span><br><span class=\"line\">Help 帮助文档</span><br><span class=\"line\">Licenses </span><br><span class=\"line\">Modules 模块</span><br><span class=\"line\">Packaging 打包</span><br><span class=\"line\">source 存放文件源代码</span><br><span class=\"line\">Templates 模板</span><br><span class=\"line\">Tests 测试代码</span><br><span class=\"line\">Utilities 集合</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/u012662731/article/details/78531497?locationNum=5&amp;fps=1\" target=\"_blank\" rel=\"noopener\">关于c/c++的后缀名</a><br><a href=\"https://blog.csdn.net/grllery/article/details/80426875\" target=\"_blank\" rel=\"noopener\">.rst文件介绍</a></p>\n<p>—————————————————————————————————————————————<br>这个项目无法再接着继续看了，因为太多东西了； 有一天写C项目的时候，在仔细去研究研究</p>\n<font size=\"2\" color=\"red\">暂时先到这里</font>\n"},{"title":"ffmpeg 了解","date":"2018-05-03T15:13:25.000Z","_content":"\nffmpeg 的编译 与命令行工具\n\n1、 ffmpeg (fast forward MPEG)【mpeg 是编码的标准】\n提供了一套可以用来记录、处理数字音频、视频，并将其转换为流的开源框架；提供了录制，转换以及流音视频的完整解决方案。\n\nffmpeg 结构图\n![ffmpeg 模块之间的结构](../../../../asset/Snip20180503_1.png)\n\n\nffmpeg可以通过源码进行编译生成， 一般都是符合GUN的软件方式配置；\nmac 上也是可以直接通过打包好的文件进行安装。\n\n```\n默认的编译生成：\n4个可执行文件和8个静态库，\n可执行文件： \n1）转码、推流、Dump媒体文件的ffmpeg\n2）用于播放媒体文件的ffplay\n3）用于获取媒体文件信息的ffprobe\n4）作为简单流媒体服务器的ffserver\n\n8个静态库（ffmpeg的8个模块）\nAVUtil ：核心工具库\nAVFormat ： 文件格式和协议库\nAVCodec： 编解码库\nAVFilter： 音视频滤镜库\nAVDevice： 输入和输出设备库\nSwrRessample： 用于音视频重采样\nSWSScale ： 将图像进行格式转换模块\nPostProc： 用于进行后台处理\n```\n\nffmpeg 命令行工具的使用\n客户单： ffmpeg /ffplay /ffprobe\n服务器： ffserver\n\n1、ffprobe\n![示例：查看一首歌的信息如下](../../../../asset/Snip20180503_2.png)\n`\n1）在上面的截图中可以看到，这首歌的市场是00:05:07.28， 开始时间是 0.025056，整个文件的比特率是329kbit/s\n`\n`  \n2）下一行（第一个流）： 音频流， 格式： mp3 采样率：44100Hz 声道：(stereo)立体声， 采样格式：fltp （float planner）[p: 表示的是平铺（planner）]，路流比特率是：320kb/s\n`\n\n![示例：查看一个视频的信息如下](../../../../asset/Snip20180504_4.png)\n`\nmatadata信息： \n encoder         : Wxmm_900012345 表示输出格式是Wxmm， 后面的数字是ffmpeg的代号；\n`\n`\n下一个部分是时间，  Duration: 00:00:59.13, start: 0.000000, bitrate: 542 kb/s ， 可以知道对应的时间以及开始时间， 比特率等等；\n`\n`\nStream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 368x640, 487 kb/s, 24 fps, 24 tbr, 12288 tbn, 48 tbc (default)\n表示第一个流是视频流， 编码格式是h264（封装格式是AVC1），每一帧的数据表示的是yuv420p格式，分辨率是：368x640 ， 路流的比特率是：487 kb/s ， 帧率是：24fps；\n`\n`\n    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 48 kb/s (default)\n  下面这个是一个音频流，编码方式是acc，（封装格式是mp4，并且采用的profile 是LC格式） ， 采样率是： 44100HZ， 声道是立体声， 音频流的比特率是48kb/s\n\n`\n详细的用法哈可以查看ffprobe对应的文件，或者man以下；\n\n2、ffplay \nffplay 是以ffmpeg 框架为基础，外加渲染音视频的库libSDL来构建的媒体文件播放器；\n【所以安装了ffmpeg，发现还没有ffplay这个命令，一定要记得安全libSDL（最新是libSDL2）】\n![示例：用ffplay播放视频（对应的播放的率变换以及+ 视频界面）](../asset/Snip20180504_6.png)\n`\n视频中s键会进入frame-step模式，s就会播放下一帧；观察某些视频内部的一些技巧，\n`\n\n\n![示例：用ffplay播放音频（对应的播放的率变换以及+ 语谱图画界面）](../asset/Snip20180504_6.png)\n![示例：用ffplay播放音频（对应的播放的率变换以及+ 语谱图画界面）](../asset/Snip20180504_10.png)\n`\n左右键分别是退10s和快进10s， 上下键分别是退1m和快进1m；esc退出播放， w键将会绘制音频的波形图等；p暂停，\n`\n\nffplay 当然还有一些播放参数选择：\nffplay WeChatSight1485.mp4 -loop 2  循环播放2次；\nffplay WeChatSight1485.mp4 -ast 1 播放的是第一个音频流，如果播放第二个音频流的话就会静音；\nffplay WeChatSight1485.mp4 -vst 0 播放第一个视频流，  也可以播放第二个视频流，由于没有，显示黑屏；(这个参数也要看对应的index值是多少)\n\nffplay有用的一些参数：\n1） 裸数据，用ffplay播放裸数据， 音频的pcm以及视频的YUV430P 或rbga；\n\nffplay 是可以播放裸数据的音视频的，但是需要设置对应的参数： \n音频： 格式（-f） /声道数 （-channels）、 采样率（-ar）这个要设置正确，就是在pcm的头部添加44个字节；\n\n视频播放的同步： 音画同步方式：\n1） 以音频为主轴看作为同步源\n2） 以视频为主轴作为同步源\n3） 以外部时钟为主时间轴作为同步源\nffplay ***.mp4 -sync audio/video/ext\n\n\n3、ffmpeg 强大的媒体转换工具\n查看ffmpeg中的参数，可以使用man ffmpeg\n查看有关的参数是如何进行使用；\n1） 通用参数\n2） 视频参数\n3） 音频参数\n\n使用过程：\n[项目的实例代码](https://github.com/zhanxiaokai/iOS-FFmpegDecoder)\n```\n1）引入头文件\n2）注册协议、格式与编解码器\n3)打开媒体文件源，并设置超时回调\n4) 寻找各个流，并且打开对应的解码器\n5）初始化解码后数据的结构体\n6）读取流内容并且解码\n7）处理解码后的裸数据\n8）关闭所有资源\n\n\n```\n\n\n\n\n\n\n","source":"_posts/ffmpeg-了解.md","raw":"---\ntitle: ffmpeg 了解\ndate: 2018-05-03 23:13:25\ntags:\ncategories: ffmpeg\n---\n\nffmpeg 的编译 与命令行工具\n\n1、 ffmpeg (fast forward MPEG)【mpeg 是编码的标准】\n提供了一套可以用来记录、处理数字音频、视频，并将其转换为流的开源框架；提供了录制，转换以及流音视频的完整解决方案。\n\nffmpeg 结构图\n![ffmpeg 模块之间的结构](../../../../asset/Snip20180503_1.png)\n\n\nffmpeg可以通过源码进行编译生成， 一般都是符合GUN的软件方式配置；\nmac 上也是可以直接通过打包好的文件进行安装。\n\n```\n默认的编译生成：\n4个可执行文件和8个静态库，\n可执行文件： \n1）转码、推流、Dump媒体文件的ffmpeg\n2）用于播放媒体文件的ffplay\n3）用于获取媒体文件信息的ffprobe\n4）作为简单流媒体服务器的ffserver\n\n8个静态库（ffmpeg的8个模块）\nAVUtil ：核心工具库\nAVFormat ： 文件格式和协议库\nAVCodec： 编解码库\nAVFilter： 音视频滤镜库\nAVDevice： 输入和输出设备库\nSwrRessample： 用于音视频重采样\nSWSScale ： 将图像进行格式转换模块\nPostProc： 用于进行后台处理\n```\n\nffmpeg 命令行工具的使用\n客户单： ffmpeg /ffplay /ffprobe\n服务器： ffserver\n\n1、ffprobe\n![示例：查看一首歌的信息如下](../../../../asset/Snip20180503_2.png)\n`\n1）在上面的截图中可以看到，这首歌的市场是00:05:07.28， 开始时间是 0.025056，整个文件的比特率是329kbit/s\n`\n`  \n2）下一行（第一个流）： 音频流， 格式： mp3 采样率：44100Hz 声道：(stereo)立体声， 采样格式：fltp （float planner）[p: 表示的是平铺（planner）]，路流比特率是：320kb/s\n`\n\n![示例：查看一个视频的信息如下](../../../../asset/Snip20180504_4.png)\n`\nmatadata信息： \n encoder         : Wxmm_900012345 表示输出格式是Wxmm， 后面的数字是ffmpeg的代号；\n`\n`\n下一个部分是时间，  Duration: 00:00:59.13, start: 0.000000, bitrate: 542 kb/s ， 可以知道对应的时间以及开始时间， 比特率等等；\n`\n`\nStream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 368x640, 487 kb/s, 24 fps, 24 tbr, 12288 tbn, 48 tbc (default)\n表示第一个流是视频流， 编码格式是h264（封装格式是AVC1），每一帧的数据表示的是yuv420p格式，分辨率是：368x640 ， 路流的比特率是：487 kb/s ， 帧率是：24fps；\n`\n`\n    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 48 kb/s (default)\n  下面这个是一个音频流，编码方式是acc，（封装格式是mp4，并且采用的profile 是LC格式） ， 采样率是： 44100HZ， 声道是立体声， 音频流的比特率是48kb/s\n\n`\n详细的用法哈可以查看ffprobe对应的文件，或者man以下；\n\n2、ffplay \nffplay 是以ffmpeg 框架为基础，外加渲染音视频的库libSDL来构建的媒体文件播放器；\n【所以安装了ffmpeg，发现还没有ffplay这个命令，一定要记得安全libSDL（最新是libSDL2）】\n![示例：用ffplay播放视频（对应的播放的率变换以及+ 视频界面）](../asset/Snip20180504_6.png)\n`\n视频中s键会进入frame-step模式，s就会播放下一帧；观察某些视频内部的一些技巧，\n`\n\n\n![示例：用ffplay播放音频（对应的播放的率变换以及+ 语谱图画界面）](../asset/Snip20180504_6.png)\n![示例：用ffplay播放音频（对应的播放的率变换以及+ 语谱图画界面）](../asset/Snip20180504_10.png)\n`\n左右键分别是退10s和快进10s， 上下键分别是退1m和快进1m；esc退出播放， w键将会绘制音频的波形图等；p暂停，\n`\n\nffplay 当然还有一些播放参数选择：\nffplay WeChatSight1485.mp4 -loop 2  循环播放2次；\nffplay WeChatSight1485.mp4 -ast 1 播放的是第一个音频流，如果播放第二个音频流的话就会静音；\nffplay WeChatSight1485.mp4 -vst 0 播放第一个视频流，  也可以播放第二个视频流，由于没有，显示黑屏；(这个参数也要看对应的index值是多少)\n\nffplay有用的一些参数：\n1） 裸数据，用ffplay播放裸数据， 音频的pcm以及视频的YUV430P 或rbga；\n\nffplay 是可以播放裸数据的音视频的，但是需要设置对应的参数： \n音频： 格式（-f） /声道数 （-channels）、 采样率（-ar）这个要设置正确，就是在pcm的头部添加44个字节；\n\n视频播放的同步： 音画同步方式：\n1） 以音频为主轴看作为同步源\n2） 以视频为主轴作为同步源\n3） 以外部时钟为主时间轴作为同步源\nffplay ***.mp4 -sync audio/video/ext\n\n\n3、ffmpeg 强大的媒体转换工具\n查看ffmpeg中的参数，可以使用man ffmpeg\n查看有关的参数是如何进行使用；\n1） 通用参数\n2） 视频参数\n3） 音频参数\n\n使用过程：\n[项目的实例代码](https://github.com/zhanxiaokai/iOS-FFmpegDecoder)\n```\n1）引入头文件\n2）注册协议、格式与编解码器\n3)打开媒体文件源，并设置超时回调\n4) 寻找各个流，并且打开对应的解码器\n5）初始化解码后数据的结构体\n6）读取流内容并且解码\n7）处理解码后的裸数据\n8）关闭所有资源\n\n\n```\n\n\n\n\n\n\n","slug":"ffmpeg-了解","published":1,"updated":"2018-10-09T14:51:13.760Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcl4000mqiojadgrcoug","content":"<p>ffmpeg 的编译 与命令行工具</p>\n<p>1、 ffmpeg (fast forward MPEG)【mpeg 是编码的标准】<br>提供了一套可以用来记录、处理数字音频、视频，并将其转换为流的开源框架；提供了录制，转换以及流音视频的完整解决方案。</p>\n<p>ffmpeg 结构图<br><img src=\"../../../../asset/Snip20180503_1.png\" alt=\"ffmpeg 模块之间的结构\"></p>\n<p>ffmpeg可以通过源码进行编译生成， 一般都是符合GUN的软件方式配置；<br>mac 上也是可以直接通过打包好的文件进行安装。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">默认的编译生成：</span><br><span class=\"line\">4个可执行文件和8个静态库，</span><br><span class=\"line\">可执行文件： </span><br><span class=\"line\">1）转码、推流、Dump媒体文件的ffmpeg</span><br><span class=\"line\">2）用于播放媒体文件的ffplay</span><br><span class=\"line\">3）用于获取媒体文件信息的ffprobe</span><br><span class=\"line\">4）作为简单流媒体服务器的ffserver</span><br><span class=\"line\"></span><br><span class=\"line\">8个静态库（ffmpeg的8个模块）</span><br><span class=\"line\">AVUtil ：核心工具库</span><br><span class=\"line\">AVFormat ： 文件格式和协议库</span><br><span class=\"line\">AVCodec： 编解码库</span><br><span class=\"line\">AVFilter： 音视频滤镜库</span><br><span class=\"line\">AVDevice： 输入和输出设备库</span><br><span class=\"line\">SwrRessample： 用于音视频重采样</span><br><span class=\"line\">SWSScale ： 将图像进行格式转换模块</span><br><span class=\"line\">PostProc： 用于进行后台处理</span><br></pre></td></tr></table></figure>\n<p>ffmpeg 命令行工具的使用<br>客户单： ffmpeg /ffplay /ffprobe<br>服务器： ffserver</p>\n<p>1、ffprobe<br><img src=\"../../../../asset/Snip20180503_2.png\" alt=\"示例：查看一首歌的信息如下\"><br><code>1）在上面的截图中可以看到，这首歌的市场是00:05:07.28， 开始时间是 0.025056，整个文件的比特率是329kbit/s</code><br><code>2）下一行（第一个流）： 音频流， 格式： mp3 采样率：44100Hz 声道：(stereo)立体声， 采样格式：fltp （float planner）[p: 表示的是平铺（planner）]，路流比特率是：320kb/s</code></p>\n<p><img src=\"../../../../asset/Snip20180504_4.png\" alt=\"示例：查看一个视频的信息如下\"><br><code>matadata信息： \n encoder         : Wxmm_900012345 表示输出格式是Wxmm， 后面的数字是ffmpeg的代号；</code><br><code>下一个部分是时间，  Duration: 00:00:59.13, start: 0.000000, bitrate: 542 kb/s ， 可以知道对应的时间以及开始时间， 比特率等等；</code><br><code>Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 368x640, 487 kb/s, 24 fps, 24 tbr, 12288 tbn, 48 tbc (default)\n表示第一个流是视频流， 编码格式是h264（封装格式是AVC1），每一帧的数据表示的是yuv420p格式，分辨率是：368x640 ， 路流的比特率是：487 kb/s ， 帧率是：24fps；</code><br>`<br>    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 48 kb/s (default)<br>  下面这个是一个音频流，编码方式是acc，（封装格式是mp4，并且采用的profile 是LC格式） ， 采样率是： 44100HZ， 声道是立体声， 音频流的比特率是48kb/s</p>\n<p>`<br>详细的用法哈可以查看ffprobe对应的文件，或者man以下；</p>\n<p>2、ffplay<br>ffplay 是以ffmpeg 框架为基础，外加渲染音视频的库libSDL来构建的媒体文件播放器；<br>【所以安装了ffmpeg，发现还没有ffplay这个命令，一定要记得安全libSDL（最新是libSDL2）】<br><img src=\"../asset/Snip20180504_6.png\" alt=\"示例：用ffplay播放视频（对应的播放的率变换以及+ 视频界面）\"><br><code>视频中s键会进入frame-step模式，s就会播放下一帧；观察某些视频内部的一些技巧，</code></p>\n<p><img src=\"../asset/Snip20180504_6.png\" alt=\"示例：用ffplay播放音频（对应的播放的率变换以及+ 语谱图画界面）\"><br><img src=\"../asset/Snip20180504_10.png\" alt=\"示例：用ffplay播放音频（对应的播放的率变换以及+ 语谱图画界面）\"><br><code>左右键分别是退10s和快进10s， 上下键分别是退1m和快进1m；esc退出播放， w键将会绘制音频的波形图等；p暂停，</code></p>\n<p>ffplay 当然还有一些播放参数选择：<br>ffplay WeChatSight1485.mp4 -loop 2  循环播放2次；<br>ffplay WeChatSight1485.mp4 -ast 1 播放的是第一个音频流，如果播放第二个音频流的话就会静音；<br>ffplay WeChatSight1485.mp4 -vst 0 播放第一个视频流，  也可以播放第二个视频流，由于没有，显示黑屏；(这个参数也要看对应的index值是多少)</p>\n<p>ffplay有用的一些参数：<br>1） 裸数据，用ffplay播放裸数据， 音频的pcm以及视频的YUV430P 或rbga；</p>\n<p>ffplay 是可以播放裸数据的音视频的，但是需要设置对应的参数：<br>音频： 格式（-f） /声道数 （-channels）、 采样率（-ar）这个要设置正确，就是在pcm的头部添加44个字节；</p>\n<p>视频播放的同步： 音画同步方式：<br>1） 以音频为主轴看作为同步源<br>2） 以视频为主轴作为同步源<br>3） 以外部时钟为主时间轴作为同步源<br>ffplay ***.mp4 -sync audio/video/ext</p>\n<p>3、ffmpeg 强大的媒体转换工具<br>查看ffmpeg中的参数，可以使用man ffmpeg<br>查看有关的参数是如何进行使用；<br>1） 通用参数<br>2） 视频参数<br>3） 音频参数</p>\n<p>使用过程：<br><a href=\"https://github.com/zhanxiaokai/iOS-FFmpegDecoder\" target=\"_blank\" rel=\"noopener\">项目的实例代码</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）引入头文件</span><br><span class=\"line\">2）注册协议、格式与编解码器</span><br><span class=\"line\">3)打开媒体文件源，并设置超时回调</span><br><span class=\"line\">4) 寻找各个流，并且打开对应的解码器</span><br><span class=\"line\">5）初始化解码后数据的结构体</span><br><span class=\"line\">6）读取流内容并且解码</span><br><span class=\"line\">7）处理解码后的裸数据</span><br><span class=\"line\">8）关闭所有资源</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>ffmpeg 的编译 与命令行工具</p>\n<p>1、 ffmpeg (fast forward MPEG)【mpeg 是编码的标准】<br>提供了一套可以用来记录、处理数字音频、视频，并将其转换为流的开源框架；提供了录制，转换以及流音视频的完整解决方案。</p>\n<p>ffmpeg 结构图<br><img src=\"../../../../asset/Snip20180503_1.png\" alt=\"ffmpeg 模块之间的结构\"></p>\n<p>ffmpeg可以通过源码进行编译生成， 一般都是符合GUN的软件方式配置；<br>mac 上也是可以直接通过打包好的文件进行安装。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">默认的编译生成：</span><br><span class=\"line\">4个可执行文件和8个静态库，</span><br><span class=\"line\">可执行文件： </span><br><span class=\"line\">1）转码、推流、Dump媒体文件的ffmpeg</span><br><span class=\"line\">2）用于播放媒体文件的ffplay</span><br><span class=\"line\">3）用于获取媒体文件信息的ffprobe</span><br><span class=\"line\">4）作为简单流媒体服务器的ffserver</span><br><span class=\"line\"></span><br><span class=\"line\">8个静态库（ffmpeg的8个模块）</span><br><span class=\"line\">AVUtil ：核心工具库</span><br><span class=\"line\">AVFormat ： 文件格式和协议库</span><br><span class=\"line\">AVCodec： 编解码库</span><br><span class=\"line\">AVFilter： 音视频滤镜库</span><br><span class=\"line\">AVDevice： 输入和输出设备库</span><br><span class=\"line\">SwrRessample： 用于音视频重采样</span><br><span class=\"line\">SWSScale ： 将图像进行格式转换模块</span><br><span class=\"line\">PostProc： 用于进行后台处理</span><br></pre></td></tr></table></figure>\n<p>ffmpeg 命令行工具的使用<br>客户单： ffmpeg /ffplay /ffprobe<br>服务器： ffserver</p>\n<p>1、ffprobe<br><img src=\"../../../../asset/Snip20180503_2.png\" alt=\"示例：查看一首歌的信息如下\"><br><code>1）在上面的截图中可以看到，这首歌的市场是00:05:07.28， 开始时间是 0.025056，整个文件的比特率是329kbit/s</code><br><code>2）下一行（第一个流）： 音频流， 格式： mp3 采样率：44100Hz 声道：(stereo)立体声， 采样格式：fltp （float planner）[p: 表示的是平铺（planner）]，路流比特率是：320kb/s</code></p>\n<p><img src=\"../../../../asset/Snip20180504_4.png\" alt=\"示例：查看一个视频的信息如下\"><br><code>matadata信息： \n encoder         : Wxmm_900012345 表示输出格式是Wxmm， 后面的数字是ffmpeg的代号；</code><br><code>下一个部分是时间，  Duration: 00:00:59.13, start: 0.000000, bitrate: 542 kb/s ， 可以知道对应的时间以及开始时间， 比特率等等；</code><br><code>Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 368x640, 487 kb/s, 24 fps, 24 tbr, 12288 tbn, 48 tbc (default)\n表示第一个流是视频流， 编码格式是h264（封装格式是AVC1），每一帧的数据表示的是yuv420p格式，分辨率是：368x640 ， 路流的比特率是：487 kb/s ， 帧率是：24fps；</code><br>`<br>    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 48 kb/s (default)<br>  下面这个是一个音频流，编码方式是acc，（封装格式是mp4，并且采用的profile 是LC格式） ， 采样率是： 44100HZ， 声道是立体声， 音频流的比特率是48kb/s</p>\n<p>`<br>详细的用法哈可以查看ffprobe对应的文件，或者man以下；</p>\n<p>2、ffplay<br>ffplay 是以ffmpeg 框架为基础，外加渲染音视频的库libSDL来构建的媒体文件播放器；<br>【所以安装了ffmpeg，发现还没有ffplay这个命令，一定要记得安全libSDL（最新是libSDL2）】<br><img src=\"../asset/Snip20180504_6.png\" alt=\"示例：用ffplay播放视频（对应的播放的率变换以及+ 视频界面）\"><br><code>视频中s键会进入frame-step模式，s就会播放下一帧；观察某些视频内部的一些技巧，</code></p>\n<p><img src=\"../asset/Snip20180504_6.png\" alt=\"示例：用ffplay播放音频（对应的播放的率变换以及+ 语谱图画界面）\"><br><img src=\"../asset/Snip20180504_10.png\" alt=\"示例：用ffplay播放音频（对应的播放的率变换以及+ 语谱图画界面）\"><br><code>左右键分别是退10s和快进10s， 上下键分别是退1m和快进1m；esc退出播放， w键将会绘制音频的波形图等；p暂停，</code></p>\n<p>ffplay 当然还有一些播放参数选择：<br>ffplay WeChatSight1485.mp4 -loop 2  循环播放2次；<br>ffplay WeChatSight1485.mp4 -ast 1 播放的是第一个音频流，如果播放第二个音频流的话就会静音；<br>ffplay WeChatSight1485.mp4 -vst 0 播放第一个视频流，  也可以播放第二个视频流，由于没有，显示黑屏；(这个参数也要看对应的index值是多少)</p>\n<p>ffplay有用的一些参数：<br>1） 裸数据，用ffplay播放裸数据， 音频的pcm以及视频的YUV430P 或rbga；</p>\n<p>ffplay 是可以播放裸数据的音视频的，但是需要设置对应的参数：<br>音频： 格式（-f） /声道数 （-channels）、 采样率（-ar）这个要设置正确，就是在pcm的头部添加44个字节；</p>\n<p>视频播放的同步： 音画同步方式：<br>1） 以音频为主轴看作为同步源<br>2） 以视频为主轴作为同步源<br>3） 以外部时钟为主时间轴作为同步源<br>ffplay ***.mp4 -sync audio/video/ext</p>\n<p>3、ffmpeg 强大的媒体转换工具<br>查看ffmpeg中的参数，可以使用man ffmpeg<br>查看有关的参数是如何进行使用；<br>1） 通用参数<br>2） 视频参数<br>3） 音频参数</p>\n<p>使用过程：<br><a href=\"https://github.com/zhanxiaokai/iOS-FFmpegDecoder\" target=\"_blank\" rel=\"noopener\">项目的实例代码</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1）引入头文件</span><br><span class=\"line\">2）注册协议、格式与编解码器</span><br><span class=\"line\">3)打开媒体文件源，并设置超时回调</span><br><span class=\"line\">4) 寻找各个流，并且打开对应的解码器</span><br><span class=\"line\">5）初始化解码后数据的结构体</span><br><span class=\"line\">6）读取流内容并且解码</span><br><span class=\"line\">7）处理解码后的裸数据</span><br><span class=\"line\">8）关闭所有资源</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Unity 入门","date":"2019-02-15T14:18:50.000Z","_content":"\nunity : 下载安装unity， 由于个人是免费的，所以使用个人免费版本\nunity : 里面的编程语言： js / c# 推荐使用c#\n\n","source":"_posts/Unity-入门.md","raw":"---\ntitle: Unity 入门\ndate: 2019-02-15 22:18:50\ntags: unity\ncategories: unity\n---\n\nunity : 下载安装unity， 由于个人是免费的，所以使用个人免费版本\nunity : 里面的编程语言： js / c# 推荐使用c#\n\n","slug":"Unity-入门","published":1,"updated":"2019-02-15T14:42:21.143Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcl6000oqiojdtagun2g","content":"<p>unity : 下载安装unity， 由于个人是免费的，所以使用个人免费版本<br>unity : 里面的编程语言： js / c# 推荐使用c#</p>\n","site":{"data":{}},"excerpt":"","more":"<p>unity : 下载安装unity， 由于个人是免费的，所以使用个人免费版本<br>unity : 里面的编程语言： js / c# 推荐使用c#</p>\n"},{"title":"ffmpeg转封装【ffmpeg 从入门到精通】","date":"2018-10-07T09:36:10.000Z","_content":"音视频文件转mp4格式\n\nffmpeg 对媒体格式进行转封装；\n媒体格式转封装是什么？？？\n\n\n1）mp4 格式\n2）格式解析方式、 \n3）如何获取mp4格式文件解析时需要的数据\n4）mp4的可视化分析工具，\n5）使用ffmpeg封装mp4文件\n\n<h3> 一、了解mp4的视频优势 </h3> \n\t跨平台好， 可以使用flash、ios、android 的H5播放。\n<h3> 二、MP4基本格式 </h3>\nMP4标准： ISO-14496 part 12 ， ISO-14496 part 14\n这个链接如何进行查看？？？？ 【这个可以直接搜索，然后看维基百科的内容】\nhttps://en.wikipedia.org/wiki/MPEG-4\n\n<h4>1、几个概念：</h4>\n\t（1）MP4 = (n)Box + (n)fullBox【 MP4是由许多个Box 与fullBox组成】\n\t（2）Box = Header + Data \n\t（3）FullBox 是Box的扩展，基于Box结构， 在Header中增加了8位version标志 和24位flag标志。\n\t（4）Header 包含了整个Box的长度大小(size)和类型(type)\n\t\t当size等于0时，代表这个Box是文件的最后一个Box；\n\t\t当size等于1时，代表Box长度需啊哟更多的位来描述, 在后面定义一个64位的largesize来描述Box长度。\n\t\t当Type为uuid时，说明这个Box中的数据是用户自定义扩展类型。\n\t(5)Data 是Box的实际数据，可以是纯数据，也可以是更多的子Box。\n\t(6)当一个Box中Data是一系列的子Box时，这个Box又可以成为Container（容器）Box。\n\n<h4>2、Mp4 常用参考标准排列方式</h4>\n<h5>1）看书p61<h5>\nnote：\nMP4标准中描述的moov与mdat 的存放位置前后并没有进行强制要求，所以这些时候moov这个Box在mdat的后面和前面都有可能；\n在互联网视频点播中，如果希望MP4文件被迅速打开，则需要将moov存放在mdat的前面；\n如果放在后面，则需要将mp4文件下载完成了之后才可以进行播放。\n\n下面是表的主要信息：\n<h6> <1>moov容器 </h6>\nmoov定了一个mp4文件中的数据信息【meta信息】，类型是moov， 是一个容器atom，其至少必须包含以下三种atom中的一种：\n【atom是啥？ 隐式是存放音视频数据信息的一种数据结构】\n\t1）mvhd(movie header atom) 存放未压缩过的影片信息的头容器\n\t2）cmov（compressed movied atom）压缩过的电影信息容器，不常用\n\t3）rmra（reference movie atom） 参考电影信息容器，不常用\n\t4）包含其他容器信息，eg：影片剪辑信息(clipping atom(clip))、一个或几个trakAtom(trak)、一个Color table atom(atab) 和一个user data atom(udta)\n\n详解：\n\t1）mvhd 定义多媒体的time scale ，duration以及display characteristic；\n\t\ttrack中定义了多媒体文件中的一个track信息，track是多媒体文件中可以独立操作的媒体单位，例如： 一个音频流就是一个track，一个视频流就是一个track。\n\t使用二进制查看工具打开吗，哎一个mp4 文件。？？？ 使用什么工具？Hex fiend 、atom inspector工具打开\n\t![使用二进制查看工具打开mp4文件(Hex fiend )](../../../../asset/Snip20181007_2.png)\n\t![使用二进制查看工具打开mp4文件(Hex fiend )](../../../../asset/Snip20181009_29.png)\n\t上面两张图中，上一张是视频被截断的，下一张是完整的视频， 我们开始应该尽可能的使用完整的视频\n\t![atom inspector](../../../../asset/Snip20181007_4.png)\n\n下面是moov参数：\n![moov 参数](../../../../asset/Snip20181008_23.png)\n\n\n<h3>三、mp4 分析工具</h3>\nmp4封装格式的分析工具：\nffmpeg、elecard streamEye/ mp4box, mp4info\n\n<h5>1)Elecard StreamEye </h5>\n\t<1>可以查看帧的排列信息，将I帧，p帧、B帧显示不同颜色；而且柱的长短根据帧的大小展示；\n\t<2>mp4内容信息，包括流的信息、宏块的信息、文件头的信息、图像的信息以及文件的信息等。\nset volume bootability and startup disk options,\n设置启动能力和启动磁盘选项\nhttps://www.elecard.com/videos\n注册了一个，说5S发邮件给我，但是没有收到，下次使用google的邮箱看看\n\n<h5>2) 查看一个媒体文件，使用vi来也是可以看到基本的内容的</h5>\n![moov 参数](../../../../asset/Snip20181008_24.png)\n\n<h5>3) mp4box</h5>\nmp4box 是GPAC 项目中的一个组件， 可以通过mp4box针对媒体文件进行合成、拆解等操作。\n![mp4box 里面的参数](../../../../asset/Snip20181008_27.png)\n\nmp4box 有很多子帮助项， \neg： DASH 切片、编码、metadata、BIFS流、ISMA、SWF相关帮助信息等。\n分析mp4文件,命令如下:\n> mp4box -info 1519916400.mp4\n[输出信息](../../../../asset/mp4box.txt)\n可以看到有timescale 、duration、framegremented等内容\n\n<h5>4) mp4info </h5>\n可以将mp4文件中的Box 解析出来，并将其中数据展现出来\n官网链接： \nhttps://www.bento4.com/\nhttps://www.bento4.com/documentation/mp4info/\n在mac上只有命令行的，没有图形界面的内容，这个到时候在进行写个mac应用吧；\n\n直接执行： mp4info output.mp4\n输出结果如下：\n[输出结果](../../../../asset/mp4info.txt)\n\n<h3> 四、mp4在ffmpeg中的Demuxer</h3>\n1) ffmpeg -h demuxer=mp4\n结果如下图：\n![ffmpeg 中的Demuxer](../../../../asset/Snip20181009_28.png)\n上面的图可以看出，mp4的demuxer与mov、3pg、m4a、3g2、mj2的Demuxer相同；可以详细查看图中的选项；\n\n2) 在解析MP4文件，通过ffmpeg解析时，可以通过参数ignore_editlist 忽略Editlist Atom 对MP4的解析；\n不过通常使用默认操作就可以了；\n\n<h3> 五、mp4在ffmpeg中的Muxer</h3>\nmp4在封装相对于解封装的时候复杂点；上面的几种格式在封装和解封装上基本上没有太大差别；·\n输入命令：ffmpeg -h muxer=mp4\n结果如下：\n![ffmpeg 中的muxer](../../../../asset/Snip20181010_9.png)\n![ffmpeg 中的muxer](../../../../asset/Snip20181010_10.png)\nmp4的muxer支持的参数比较复杂，例如：支持在视频关键帧处切片，只支持设置moov容器大小的最大值，支持设置encrypt加密等。\n\n下面是对应参数了解：\n\t1）faststart \n\n\n\n\n\n\n\n","source":"_posts/ffmpeg转封装【ffmpeg-从入门到精通】.md","raw":"---\ntitle: ffmpeg转封装【ffmpeg 从入门到精通】\ndate: 2018-10-07 17:36:10\ntags: ffmpeg\ncategories: ffmpeg\n---\n音视频文件转mp4格式\n\nffmpeg 对媒体格式进行转封装；\n媒体格式转封装是什么？？？\n\n\n1）mp4 格式\n2）格式解析方式、 \n3）如何获取mp4格式文件解析时需要的数据\n4）mp4的可视化分析工具，\n5）使用ffmpeg封装mp4文件\n\n<h3> 一、了解mp4的视频优势 </h3> \n\t跨平台好， 可以使用flash、ios、android 的H5播放。\n<h3> 二、MP4基本格式 </h3>\nMP4标准： ISO-14496 part 12 ， ISO-14496 part 14\n这个链接如何进行查看？？？？ 【这个可以直接搜索，然后看维基百科的内容】\nhttps://en.wikipedia.org/wiki/MPEG-4\n\n<h4>1、几个概念：</h4>\n\t（1）MP4 = (n)Box + (n)fullBox【 MP4是由许多个Box 与fullBox组成】\n\t（2）Box = Header + Data \n\t（3）FullBox 是Box的扩展，基于Box结构， 在Header中增加了8位version标志 和24位flag标志。\n\t（4）Header 包含了整个Box的长度大小(size)和类型(type)\n\t\t当size等于0时，代表这个Box是文件的最后一个Box；\n\t\t当size等于1时，代表Box长度需啊哟更多的位来描述, 在后面定义一个64位的largesize来描述Box长度。\n\t\t当Type为uuid时，说明这个Box中的数据是用户自定义扩展类型。\n\t(5)Data 是Box的实际数据，可以是纯数据，也可以是更多的子Box。\n\t(6)当一个Box中Data是一系列的子Box时，这个Box又可以成为Container（容器）Box。\n\n<h4>2、Mp4 常用参考标准排列方式</h4>\n<h5>1）看书p61<h5>\nnote：\nMP4标准中描述的moov与mdat 的存放位置前后并没有进行强制要求，所以这些时候moov这个Box在mdat的后面和前面都有可能；\n在互联网视频点播中，如果希望MP4文件被迅速打开，则需要将moov存放在mdat的前面；\n如果放在后面，则需要将mp4文件下载完成了之后才可以进行播放。\n\n下面是表的主要信息：\n<h6> <1>moov容器 </h6>\nmoov定了一个mp4文件中的数据信息【meta信息】，类型是moov， 是一个容器atom，其至少必须包含以下三种atom中的一种：\n【atom是啥？ 隐式是存放音视频数据信息的一种数据结构】\n\t1）mvhd(movie header atom) 存放未压缩过的影片信息的头容器\n\t2）cmov（compressed movied atom）压缩过的电影信息容器，不常用\n\t3）rmra（reference movie atom） 参考电影信息容器，不常用\n\t4）包含其他容器信息，eg：影片剪辑信息(clipping atom(clip))、一个或几个trakAtom(trak)、一个Color table atom(atab) 和一个user data atom(udta)\n\n详解：\n\t1）mvhd 定义多媒体的time scale ，duration以及display characteristic；\n\t\ttrack中定义了多媒体文件中的一个track信息，track是多媒体文件中可以独立操作的媒体单位，例如： 一个音频流就是一个track，一个视频流就是一个track。\n\t使用二进制查看工具打开吗，哎一个mp4 文件。？？？ 使用什么工具？Hex fiend 、atom inspector工具打开\n\t![使用二进制查看工具打开mp4文件(Hex fiend )](../../../../asset/Snip20181007_2.png)\n\t![使用二进制查看工具打开mp4文件(Hex fiend )](../../../../asset/Snip20181009_29.png)\n\t上面两张图中，上一张是视频被截断的，下一张是完整的视频， 我们开始应该尽可能的使用完整的视频\n\t![atom inspector](../../../../asset/Snip20181007_4.png)\n\n下面是moov参数：\n![moov 参数](../../../../asset/Snip20181008_23.png)\n\n\n<h3>三、mp4 分析工具</h3>\nmp4封装格式的分析工具：\nffmpeg、elecard streamEye/ mp4box, mp4info\n\n<h5>1)Elecard StreamEye </h5>\n\t<1>可以查看帧的排列信息，将I帧，p帧、B帧显示不同颜色；而且柱的长短根据帧的大小展示；\n\t<2>mp4内容信息，包括流的信息、宏块的信息、文件头的信息、图像的信息以及文件的信息等。\nset volume bootability and startup disk options,\n设置启动能力和启动磁盘选项\nhttps://www.elecard.com/videos\n注册了一个，说5S发邮件给我，但是没有收到，下次使用google的邮箱看看\n\n<h5>2) 查看一个媒体文件，使用vi来也是可以看到基本的内容的</h5>\n![moov 参数](../../../../asset/Snip20181008_24.png)\n\n<h5>3) mp4box</h5>\nmp4box 是GPAC 项目中的一个组件， 可以通过mp4box针对媒体文件进行合成、拆解等操作。\n![mp4box 里面的参数](../../../../asset/Snip20181008_27.png)\n\nmp4box 有很多子帮助项， \neg： DASH 切片、编码、metadata、BIFS流、ISMA、SWF相关帮助信息等。\n分析mp4文件,命令如下:\n> mp4box -info 1519916400.mp4\n[输出信息](../../../../asset/mp4box.txt)\n可以看到有timescale 、duration、framegremented等内容\n\n<h5>4) mp4info </h5>\n可以将mp4文件中的Box 解析出来，并将其中数据展现出来\n官网链接： \nhttps://www.bento4.com/\nhttps://www.bento4.com/documentation/mp4info/\n在mac上只有命令行的，没有图形界面的内容，这个到时候在进行写个mac应用吧；\n\n直接执行： mp4info output.mp4\n输出结果如下：\n[输出结果](../../../../asset/mp4info.txt)\n\n<h3> 四、mp4在ffmpeg中的Demuxer</h3>\n1) ffmpeg -h demuxer=mp4\n结果如下图：\n![ffmpeg 中的Demuxer](../../../../asset/Snip20181009_28.png)\n上面的图可以看出，mp4的demuxer与mov、3pg、m4a、3g2、mj2的Demuxer相同；可以详细查看图中的选项；\n\n2) 在解析MP4文件，通过ffmpeg解析时，可以通过参数ignore_editlist 忽略Editlist Atom 对MP4的解析；\n不过通常使用默认操作就可以了；\n\n<h3> 五、mp4在ffmpeg中的Muxer</h3>\nmp4在封装相对于解封装的时候复杂点；上面的几种格式在封装和解封装上基本上没有太大差别；·\n输入命令：ffmpeg -h muxer=mp4\n结果如下：\n![ffmpeg 中的muxer](../../../../asset/Snip20181010_9.png)\n![ffmpeg 中的muxer](../../../../asset/Snip20181010_10.png)\nmp4的muxer支持的参数比较复杂，例如：支持在视频关键帧处切片，只支持设置moov容器大小的最大值，支持设置encrypt加密等。\n\n下面是对应参数了解：\n\t1）faststart \n\n\n\n\n\n\n\n","slug":"ffmpeg转封装【ffmpeg-从入门到精通】","published":1,"updated":"2018-10-10T15:46:14.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcl8000sqioj40s08l6g","content":"<p>音视频文件转mp4格式</p>\n<p>ffmpeg 对媒体格式进行转封装；<br>媒体格式转封装是什么？？？</p>\n<p>1）mp4 格式<br>2）格式解析方式、<br>3）如何获取mp4格式文件解析时需要的数据<br>4）mp4的可视化分析工具，<br>5）使用ffmpeg封装mp4文件</p>\n<p></p><h3> 一、了解mp4的视频优势 </h3><br>    跨平台好， 可以使用flash、ios、android 的H5播放。<p></p>\n<p></p><h3> 二、MP4基本格式 </h3><br>MP4标准： ISO-14496 part 12 ， ISO-14496 part 14<br>这个链接如何进行查看？？？？ 【这个可以直接搜索，然后看维基百科的内容】<br><a href=\"https://en.wikipedia.org/wiki/MPEG-4\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/MPEG-4</a><p></p>\n<p></p><h4>1、几个概念：</h4><br>    （1）MP4 = (n)Box + (n)fullBox【 MP4是由许多个Box 与fullBox组成】<br>    （2）Box = Header + Data<br>    （3）FullBox 是Box的扩展，基于Box结构， 在Header中增加了8位version标志 和24位flag标志。<br>    （4）Header 包含了整个Box的长度大小(size)和类型(type)<br>        当size等于0时，代表这个Box是文件的最后一个Box；<br>        当size等于1时，代表Box长度需啊哟更多的位来描述, 在后面定义一个64位的largesize来描述Box长度。<br>        当Type为uuid时，说明这个Box中的数据是用户自定义扩展类型。<br>    (5)Data 是Box的实际数据，可以是纯数据，也可以是更多的子Box。<br>    (6)当一个Box中Data是一系列的子Box时，这个Box又可以成为Container（容器）Box。<p></p>\n<p></p><h4>2、Mp4 常用参考标准排列方式</h4><p></p>\n<p></p><h5>1）看书p61<h5><br>note：<br>MP4标准中描述的moov与mdat 的存放位置前后并没有进行强制要求，所以这些时候moov这个Box在mdat的后面和前面都有可能；<br>在互联网视频点播中，如果希望MP4文件被迅速打开，则需要将moov存放在mdat的前面；<br>如果放在后面，则需要将mp4文件下载完成了之后才可以进行播放。<p></p>\n<p>下面是表的主要信息：</p>\n<p></p><h6> <1>moov容器 </1></h6><br>moov定了一个mp4文件中的数据信息【meta信息】，类型是moov， 是一个容器atom，其至少必须包含以下三种atom中的一种：<br>【atom是啥？ 隐式是存放音视频数据信息的一种数据结构】<br>    1）mvhd(movie header atom) 存放未压缩过的影片信息的头容器<br>    2）cmov（compressed movied atom）压缩过的电影信息容器，不常用<br>    3）rmra（reference movie atom） 参考电影信息容器，不常用<br>    4）包含其他容器信息，eg：影片剪辑信息(clipping atom(clip))、一个或几个trakAtom(trak)、一个Color table atom(atab) 和一个user data atom(udta)<p></p>\n<p>详解：<br>    1）mvhd 定义多媒体的time scale ，duration以及display characteristic；<br>        track中定义了多媒体文件中的一个track信息，track是多媒体文件中可以独立操作的媒体单位，例如： 一个音频流就是一个track，一个视频流就是一个track。<br>    使用二进制查看工具打开吗，哎一个mp4 文件。？？？ 使用什么工具？Hex fiend 、atom inspector工具打开<br>    <img src=\"../../../../asset/Snip20181007_2.png\" alt=\"使用二进制查看工具打开mp4文件(Hex fiend )\"><br>    <img src=\"../../../../asset/Snip20181009_29.png\" alt=\"使用二进制查看工具打开mp4文件(Hex fiend )\"><br>    上面两张图中，上一张是视频被截断的，下一张是完整的视频， 我们开始应该尽可能的使用完整的视频<br>    <img src=\"../../../../asset/Snip20181007_4.png\" alt=\"atom inspector\"></p>\n<p>下面是moov参数：<br><img src=\"../../../../asset/Snip20181008_23.png\" alt=\"moov 参数\"></p>\n<p></p><h3>三、mp4 分析工具</h3><br>mp4封装格式的分析工具：<br>ffmpeg、elecard streamEye/ mp4box, mp4info<p></p>\n<p></p><h5>1)Elecard StreamEye </h5><br>    <1>可以查看帧的排列信息，将I帧，p帧、B帧显示不同颜色；而且柱的长短根据帧的大小展示；<br>    <2>mp4内容信息，包括流的信息、宏块的信息、文件头的信息、图像的信息以及文件的信息等。<br>set volume bootability and startup disk options,<br>设置启动能力和启动磁盘选项<br><a href=\"https://www.elecard.com/videos\" target=\"_blank\" rel=\"noopener\">https://www.elecard.com/videos</a><br>注册了一个，说5S发邮件给我，但是没有收到，下次使用google的邮箱看看<p></p>\n<p></p><h5>2) 查看一个媒体文件，使用vi来也是可以看到基本的内容的</h5><br><img src=\"../../../../asset/Snip20181008_24.png\" alt=\"moov 参数\"><p></p>\n<p></p><h5>3) mp4box</h5><br>mp4box 是GPAC 项目中的一个组件， 可以通过mp4box针对媒体文件进行合成、拆解等操作。<br><img src=\"../../../../asset/Snip20181008_27.png\" alt=\"mp4box 里面的参数\"><p></p>\n<p>mp4box 有很多子帮助项，<br>eg： DASH 切片、编码、metadata、BIFS流、ISMA、SWF相关帮助信息等。<br>分析mp4文件,命令如下:</p>\n<blockquote>\n<p>mp4box -info 1519916400.mp4<br><a href=\"../../../../asset/mp4box.txt\">输出信息</a><br>可以看到有timescale 、duration、framegremented等内容</p>\n</blockquote>\n<p></p><h5>4) mp4info </h5><br>可以将mp4文件中的Box 解析出来，并将其中数据展现出来<br>官网链接：<br><a href=\"https://www.bento4.com/\" target=\"_blank\" rel=\"noopener\">https://www.bento4.com/</a><br><a href=\"https://www.bento4.com/documentation/mp4info/\" target=\"_blank\" rel=\"noopener\">https://www.bento4.com/documentation/mp4info/</a><br>在mac上只有命令行的，没有图形界面的内容，这个到时候在进行写个mac应用吧；<p></p>\n<p>直接执行： mp4info output.mp4<br>输出结果如下：<br><a href=\"../../../../asset/mp4info.txt\">输出结果</a></p>\n<p></p><h3> 四、mp4在ffmpeg中的Demuxer</h3><br>1) ffmpeg -h demuxer=mp4<br>结果如下图：<br><img src=\"../../../../asset/Snip20181009_28.png\" alt=\"ffmpeg 中的Demuxer\"><br>上面的图可以看出，mp4的demuxer与mov、3pg、m4a、3g2、mj2的Demuxer相同；可以详细查看图中的选项；<p></p>\n<p>2) 在解析MP4文件，通过ffmpeg解析时，可以通过参数ignore_editlist 忽略Editlist Atom 对MP4的解析；<br>不过通常使用默认操作就可以了；</p>\n<p></p><h3> 五、mp4在ffmpeg中的Muxer</h3><br>mp4在封装相对于解封装的时候复杂点；上面的几种格式在封装和解封装上基本上没有太大差别；·<br>输入命令：ffmpeg -h muxer=mp4<br>结果如下：<br><img src=\"../../../../asset/Snip20181010_9.png\" alt=\"ffmpeg 中的muxer\"><br><img src=\"../../../../asset/Snip20181010_10.png\" alt=\"ffmpeg 中的muxer\"><br>mp4的muxer支持的参数比较复杂，例如：支持在视频关键帧处切片，只支持设置moov容器大小的最大值，支持设置encrypt加密等。<p></p>\n<p>下面是对应参数了解：<br>    1）faststart </p>\n</2></1></h5></h5>","site":{"data":{}},"excerpt":"","more":"<p>音视频文件转mp4格式</p>\n<p>ffmpeg 对媒体格式进行转封装；<br>媒体格式转封装是什么？？？</p>\n<p>1）mp4 格式<br>2）格式解析方式、<br>3）如何获取mp4格式文件解析时需要的数据<br>4）mp4的可视化分析工具，<br>5）使用ffmpeg封装mp4文件</p>\n<p></p><h3> 一、了解mp4的视频优势 </h3><br>    跨平台好， 可以使用flash、ios、android 的H5播放。<p></p>\n<p></p><h3> 二、MP4基本格式 </h3><br>MP4标准： ISO-14496 part 12 ， ISO-14496 part 14<br>这个链接如何进行查看？？？？ 【这个可以直接搜索，然后看维基百科的内容】<br><a href=\"https://en.wikipedia.org/wiki/MPEG-4\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/MPEG-4</a><p></p>\n<p></p><h4>1、几个概念：</h4><br>    （1）MP4 = (n)Box + (n)fullBox【 MP4是由许多个Box 与fullBox组成】<br>    （2）Box = Header + Data<br>    （3）FullBox 是Box的扩展，基于Box结构， 在Header中增加了8位version标志 和24位flag标志。<br>    （4）Header 包含了整个Box的长度大小(size)和类型(type)<br>        当size等于0时，代表这个Box是文件的最后一个Box；<br>        当size等于1时，代表Box长度需啊哟更多的位来描述, 在后面定义一个64位的largesize来描述Box长度。<br>        当Type为uuid时，说明这个Box中的数据是用户自定义扩展类型。<br>    (5)Data 是Box的实际数据，可以是纯数据，也可以是更多的子Box。<br>    (6)当一个Box中Data是一系列的子Box时，这个Box又可以成为Container（容器）Box。<p></p>\n<p></p><h4>2、Mp4 常用参考标准排列方式</h4><p></p>\n<p></p><h5>1）看书p61<h5><br>note：<br>MP4标准中描述的moov与mdat 的存放位置前后并没有进行强制要求，所以这些时候moov这个Box在mdat的后面和前面都有可能；<br>在互联网视频点播中，如果希望MP4文件被迅速打开，则需要将moov存放在mdat的前面；<br>如果放在后面，则需要将mp4文件下载完成了之后才可以进行播放。<p></p>\n<p>下面是表的主要信息：</p>\n<p></p><h6> <1>moov容器 </1></h6><br>moov定了一个mp4文件中的数据信息【meta信息】，类型是moov， 是一个容器atom，其至少必须包含以下三种atom中的一种：<br>【atom是啥？ 隐式是存放音视频数据信息的一种数据结构】<br>    1）mvhd(movie header atom) 存放未压缩过的影片信息的头容器<br>    2）cmov（compressed movied atom）压缩过的电影信息容器，不常用<br>    3）rmra（reference movie atom） 参考电影信息容器，不常用<br>    4）包含其他容器信息，eg：影片剪辑信息(clipping atom(clip))、一个或几个trakAtom(trak)、一个Color table atom(atab) 和一个user data atom(udta)<p></p>\n<p>详解：<br>    1）mvhd 定义多媒体的time scale ，duration以及display characteristic；<br>        track中定义了多媒体文件中的一个track信息，track是多媒体文件中可以独立操作的媒体单位，例如： 一个音频流就是一个track，一个视频流就是一个track。<br>    使用二进制查看工具打开吗，哎一个mp4 文件。？？？ 使用什么工具？Hex fiend 、atom inspector工具打开<br>    <img src=\"../../../../asset/Snip20181007_2.png\" alt=\"使用二进制查看工具打开mp4文件(Hex fiend )\"><br>    <img src=\"../../../../asset/Snip20181009_29.png\" alt=\"使用二进制查看工具打开mp4文件(Hex fiend )\"><br>    上面两张图中，上一张是视频被截断的，下一张是完整的视频， 我们开始应该尽可能的使用完整的视频<br>    <img src=\"../../../../asset/Snip20181007_4.png\" alt=\"atom inspector\"></p>\n<p>下面是moov参数：<br><img src=\"../../../../asset/Snip20181008_23.png\" alt=\"moov 参数\"></p>\n<p></p><h3>三、mp4 分析工具</h3><br>mp4封装格式的分析工具：<br>ffmpeg、elecard streamEye/ mp4box, mp4info<p></p>\n<p></p><h5>1)Elecard StreamEye </h5><br>    <1>可以查看帧的排列信息，将I帧，p帧、B帧显示不同颜色；而且柱的长短根据帧的大小展示；<br>    <2>mp4内容信息，包括流的信息、宏块的信息、文件头的信息、图像的信息以及文件的信息等。<br>set volume bootability and startup disk options,<br>设置启动能力和启动磁盘选项<br><a href=\"https://www.elecard.com/videos\" target=\"_blank\" rel=\"noopener\">https://www.elecard.com/videos</a><br>注册了一个，说5S发邮件给我，但是没有收到，下次使用google的邮箱看看<p></p>\n<p></p><h5>2) 查看一个媒体文件，使用vi来也是可以看到基本的内容的</h5><br><img src=\"../../../../asset/Snip20181008_24.png\" alt=\"moov 参数\"><p></p>\n<p></p><h5>3) mp4box</h5><br>mp4box 是GPAC 项目中的一个组件， 可以通过mp4box针对媒体文件进行合成、拆解等操作。<br><img src=\"../../../../asset/Snip20181008_27.png\" alt=\"mp4box 里面的参数\"><p></p>\n<p>mp4box 有很多子帮助项，<br>eg： DASH 切片、编码、metadata、BIFS流、ISMA、SWF相关帮助信息等。<br>分析mp4文件,命令如下:</p>\n<blockquote>\n<p>mp4box -info 1519916400.mp4<br><a href=\"../../../../asset/mp4box.txt\">输出信息</a><br>可以看到有timescale 、duration、framegremented等内容</p>\n</blockquote>\n<p></p><h5>4) mp4info </h5><br>可以将mp4文件中的Box 解析出来，并将其中数据展现出来<br>官网链接：<br><a href=\"https://www.bento4.com/\" target=\"_blank\" rel=\"noopener\">https://www.bento4.com/</a><br><a href=\"https://www.bento4.com/documentation/mp4info/\" target=\"_blank\" rel=\"noopener\">https://www.bento4.com/documentation/mp4info/</a><br>在mac上只有命令行的，没有图形界面的内容，这个到时候在进行写个mac应用吧；<p></p>\n<p>直接执行： mp4info output.mp4<br>输出结果如下：<br><a href=\"../../../../asset/mp4info.txt\">输出结果</a></p>\n<p></p><h3> 四、mp4在ffmpeg中的Demuxer</h3><br>1) ffmpeg -h demuxer=mp4<br>结果如下图：<br><img src=\"../../../../asset/Snip20181009_28.png\" alt=\"ffmpeg 中的Demuxer\"><br>上面的图可以看出，mp4的demuxer与mov、3pg、m4a、3g2、mj2的Demuxer相同；可以详细查看图中的选项；<p></p>\n<p>2) 在解析MP4文件，通过ffmpeg解析时，可以通过参数ignore_editlist 忽略Editlist Atom 对MP4的解析；<br>不过通常使用默认操作就可以了；</p>\n<p></p><h3> 五、mp4在ffmpeg中的Muxer</h3><br>mp4在封装相对于解封装的时候复杂点；上面的几种格式在封装和解封装上基本上没有太大差别；·<br>输入命令：ffmpeg -h muxer=mp4<br>结果如下：<br><img src=\"../../../../asset/Snip20181010_9.png\" alt=\"ffmpeg 中的muxer\"><br><img src=\"../../../../asset/Snip20181010_10.png\" alt=\"ffmpeg 中的muxer\"><br>mp4的muxer支持的参数比较复杂，例如：支持在视频关键帧处切片，只支持设置moov容器大小的最大值，支持设置encrypt加密等。<p></p>\n<p>下面是对应参数了解：<br>    1）faststart </p>\n</2></1></h5></h5>"},{"title":"git","date":"2018-12-25T08:21:17.000Z","_content":"","source":"_posts/git.md","raw":"---\ntitle: git\ndate: 2018-12-25 16:21:17\ntags:\ncategories:\n---\n","slug":"git","published":1,"updated":"2018-12-25T08:26:19.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcl9000uqiojddub5qkk","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Hello World","_content":"\nhttp://blog.shenyuanluo.com/HexoConfig1.html 参考博客\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\n```\n参考博客：https://blog.csdn.net/gdutxiaoxu/article/details/53576018\n注意在配置的时候，type：git 这个不要漏掉了，否则没有什么问题，也没有发布上去\n\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\n\nhttp://blog.shenyuanluo.com/HexoConfig1.html 参考博客\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\n```\n参考博客：https://blog.csdn.net/gdutxiaoxu/article/details/53576018\n注意在配置的时候，type：git 这个不要漏掉了，否则没有什么问题，也没有发布上去\n\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-05-02T15:49:53.239Z","updated":"2018-09-18T05:46:07.505Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclb000yqiojzbc50ysp","content":"<p><a href=\"http://blog.shenyuanluo.com/HexoConfig1.html\" target=\"_blank\" rel=\"noopener\">http://blog.shenyuanluo.com/HexoConfig1.html</a> 参考博客</p>\n<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参考博客：https://blog.csdn.net/gdutxiaoxu/article/details/53576018</span><br><span class=\"line\">注意在配置的时候，type：git 这个不要漏掉了，否则没有什么问题，也没有发布上去</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://blog.shenyuanluo.com/HexoConfig1.html\" target=\"_blank\" rel=\"noopener\">http://blog.shenyuanluo.com/HexoConfig1.html</a> 参考博客</p>\n<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参考博客：https://blog.csdn.net/gdutxiaoxu/article/details/53576018</span><br><span class=\"line\">注意在配置的时候，type：git 这个不要漏掉了，否则没有什么问题，也没有发布上去</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"iOS 基础 通知和宏定义","date":"2018-07-01T09:23:56.000Z","_content":"\n1.通知上的细节，类里面的东西，需要去查看真实的内容；\n![通知不同的版本权限](../asset/Snip20180701_4.png)\n[参考链接](https://www.jianshu.com/p/5713fa2bfece)\n<br/>\n推送，还是会出现问题，xgpush <，看看xgpushSErivce 里面appid 和appkey是否已经对应；\n通知的中心是获取的；\n    UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];\n而不是new的方式进行创建的，使用功能new创建就会出现问题，屏幕黑屏，提示有使用currentNotificationCenter 获取通知中心；\n\n![通知上面的内容](../asset/Snip20180701_15.png)\n\n\n2、修改需求上面的内容，应该尽可能的添加代码，而不是替换代码，尽可能少点注释\n\n3、判断不同的版本来进行写代码： 可以通过一些宏来进行处理，\n参考链接：\nhttps://blog.devzeng.com/blog/ios-multiple-version-compatible.html\nhttp://blog.163.com/ray_jun/blog/static/1670536422012429104151970/ \nhttps://blog.csdn.net/u010969412/article/details/30975301\n\nsdk允许的最大的版本；这个和运行这个程序的ios 系统没有关系\n![xcode 8 上运行的结果，也就是上面的宏并不是用来定义当前ios运行的版本的判断，而是不同的xcode进行编译而已；\n](../asset/Snip20180701_5.png)\n![xcode 7 上就是上面的情况；可以见这个只是用来进行编译的，优化代码](../asset/Snip20180701_6.png)\n```\n__TVOS_PROHIBITED ： 禁止 TVos 上使用\n NS_AVAILABLE_IOS(3_0) ： ios 3 版本中引入\nNS_DEPRECATED_IOS(2_0, 6_0); ios2 引入，ios 6 过时\nNS_AVAILABLE(10_8, 6_0); mac os 10.8上引入，ios6 上引入\nNS_DEPRECATED(10_0, 10_6, 2_0, 4_0); mac os 10.0 引入，mac os 10.6 上过时，ios 2.0 引入，4.0 过时；\n同样类似，目前苹果就是3个类型的os\n```\n\n4、xcode 中不想升级xcode， 但是要兼容ios7 以及后面的新的ios \n我们通过可以下载对应的ios sdk放到xcode对应的位置，然后选择最小的sdk就可以了； 或设置最大的sdk等\n\n\n关于sdk的兼容，我们一般是写库才会进行判断，如果是其他的，不会考虑这些库问题；我们需要兼容的是设备；应该是用UIDevice来进行判断；或者使用进程来进行判断（大才小用）；\n\n\n__IPHONE_OS_VERSION_MIN_REQUIRED\n这里就需要用到这个宏进行处理；\n或者还有大的概念的宏定义\n\n```\n这些宏定义都是在这个头文件中： AvailabilityInternal.h\n```\n![test 例子](../asset/Snip20180701_7.png)\n[sdk 上面的官方网站介绍](https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/cross_development/Using/using.html#//apple_ref/doc/uid/20002000-SW5)\n参考链接：\n[参考0](http://blog.csdn.net/xianghuibeijing/article/details/6259824)\n[参考1](https://daiweilai.github.io/2015/01/20/iOS%E4%B8%AD%E7%9A%84%E9%A2%84%E7%BC%96%E8%AF%91%E6%8C%87%E4%BB%A4%E7%9A%84%E5%88%9D%E6%AD%A5%E6%8E%A2%E7%A9%B6/)\n![条件编译和动态区分](../asset/Snip20180701_8.png)\n不兼容的API都会在framework release notes里标明。所以，release note是相当重要的东西\n![使用例子](../asset/Snip20180701_9.png)\n[过期的api详解](http://iosdevelopertips.com/best-practices/eveything-you-need-to-know-about-ios-and-os-x-deprecated-apis.html)\n\n\n![命名冲突](../asset/Snip20180701_11.png)\n![声明的提示](../asset/Snip20180701_12.png)\n![声明的提示](../asset/Snip20180701_13.png)\n\n\n![gcc上面的内容，oc里面的警告忽略是gcc上面的类似内容](https://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Pragmas.html)\n\n5、视频上面的一些格式\n优酷 、腾讯、乐视等大型视频网站的视频地址的获取，\n\n视频的格式：\n　　M3U8视频格格式也是一种M3U，只是它的编码格式是UTF-8格式。M3U用Latin-1字符集编码。M3U8格式特点是带有一个目录信息或文件。\n　　MP4视频文件 即 mp4 （文件格式） 。 MPEG-4包含了MPEG-1及MPEG-2的绝大部份功能及其他格式的长处，并加入及扩充对虚拟现实模型语言（VRML ， VirtualReality Modeling Language）的支持，面向对象的合成档案（包括音效，视讯及VRML对象），以及数字版权管理（DRM）及其他互动功能。而MPEG-4比MPEG-2更先进的其中一个特点，就是不再使用宏区块做影像分析，而是以影像上个体为变化记录，因此尽管影像变化速度很快、码率不足时，也不会出现方块画面。\n\nhttp://blog.csdn.net/langeldep/article/details/8603045/\nm3u8 格式的讲解\n\n百度百科：\nm3u文件 \nM3U本质上说不是音频文件，它是音频文件的列表文件，是纯文本文件。你下载下来打开它，播放软件并不是播放它，而是根据它的记录找到网络地址进行在线播放。\n\n例子说明\n编辑\n打开记事本，依次输入硬盘上几首MP3文件的路径，类似“H：\\yinyue\\来生缘.mp3……H：\\yinyue \\一起走过的日子.mp3”，每输入一首歌后，回车另起一行，输入所有的歌曲路径后，点开【文件】菜单，再点击【另存为】，在文件名中输入“刘德华. m3u”，点击【保存】，注意保存时，文件类型选“所有文件（?.?）”。保存完毕后，一个播放列表就完成了。可点击这个文件，验证是否已经自动打开与之关联的MP3播放软件并开始播放。当然，不只是MP3文件，只要是播放器支持的媒体文件，都可以用这个方法来做播放表。\nhttps://zh.wikipedia.org/wiki/M3U\nhttp://baike.baidu.com/view/718664.htm\nhttp://www.360doc.com/content/15/1103/11/20918780_510398157.shtml\nhttp://blog.csdn.net/bonlog/article/details/24551051\nhttp://www.codeceo.com/article/youku-real-url.html\nhttp://cccidea.com/it/program/134.html\nhttp://www.jianshu.com/p/7c0179a279f1\n\nhttp://www.jianshu.com/p/fd72d3cbd3dc\nhttp://www.jianshu.com/collection/62788fc96b49\nhttp://www.jianshu.com/search?q=opengl&page=1&type=collections\nhttp://www.jianshu.com/collection/dfeb8e9a87db\n\nc 语言上面的条件编译：\nhttp://blog.sina.com.cn/s/blog_4b4b54da0100r2l6.html\n\n","source":"_posts/iOS-基础.md","raw":"---\ntitle: iOS 基础 通知和宏定义\ndate: 2018-07-01 17:23:56\ntags: iOS基础知识 通知\ncategories: oc\n\n---\n\n1.通知上的细节，类里面的东西，需要去查看真实的内容；\n![通知不同的版本权限](../asset/Snip20180701_4.png)\n[参考链接](https://www.jianshu.com/p/5713fa2bfece)\n<br/>\n推送，还是会出现问题，xgpush <，看看xgpushSErivce 里面appid 和appkey是否已经对应；\n通知的中心是获取的；\n    UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];\n而不是new的方式进行创建的，使用功能new创建就会出现问题，屏幕黑屏，提示有使用currentNotificationCenter 获取通知中心；\n\n![通知上面的内容](../asset/Snip20180701_15.png)\n\n\n2、修改需求上面的内容，应该尽可能的添加代码，而不是替换代码，尽可能少点注释\n\n3、判断不同的版本来进行写代码： 可以通过一些宏来进行处理，\n参考链接：\nhttps://blog.devzeng.com/blog/ios-multiple-version-compatible.html\nhttp://blog.163.com/ray_jun/blog/static/1670536422012429104151970/ \nhttps://blog.csdn.net/u010969412/article/details/30975301\n\nsdk允许的最大的版本；这个和运行这个程序的ios 系统没有关系\n![xcode 8 上运行的结果，也就是上面的宏并不是用来定义当前ios运行的版本的判断，而是不同的xcode进行编译而已；\n](../asset/Snip20180701_5.png)\n![xcode 7 上就是上面的情况；可以见这个只是用来进行编译的，优化代码](../asset/Snip20180701_6.png)\n```\n__TVOS_PROHIBITED ： 禁止 TVos 上使用\n NS_AVAILABLE_IOS(3_0) ： ios 3 版本中引入\nNS_DEPRECATED_IOS(2_0, 6_0); ios2 引入，ios 6 过时\nNS_AVAILABLE(10_8, 6_0); mac os 10.8上引入，ios6 上引入\nNS_DEPRECATED(10_0, 10_6, 2_0, 4_0); mac os 10.0 引入，mac os 10.6 上过时，ios 2.0 引入，4.0 过时；\n同样类似，目前苹果就是3个类型的os\n```\n\n4、xcode 中不想升级xcode， 但是要兼容ios7 以及后面的新的ios \n我们通过可以下载对应的ios sdk放到xcode对应的位置，然后选择最小的sdk就可以了； 或设置最大的sdk等\n\n\n关于sdk的兼容，我们一般是写库才会进行判断，如果是其他的，不会考虑这些库问题；我们需要兼容的是设备；应该是用UIDevice来进行判断；或者使用进程来进行判断（大才小用）；\n\n\n__IPHONE_OS_VERSION_MIN_REQUIRED\n这里就需要用到这个宏进行处理；\n或者还有大的概念的宏定义\n\n```\n这些宏定义都是在这个头文件中： AvailabilityInternal.h\n```\n![test 例子](../asset/Snip20180701_7.png)\n[sdk 上面的官方网站介绍](https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/cross_development/Using/using.html#//apple_ref/doc/uid/20002000-SW5)\n参考链接：\n[参考0](http://blog.csdn.net/xianghuibeijing/article/details/6259824)\n[参考1](https://daiweilai.github.io/2015/01/20/iOS%E4%B8%AD%E7%9A%84%E9%A2%84%E7%BC%96%E8%AF%91%E6%8C%87%E4%BB%A4%E7%9A%84%E5%88%9D%E6%AD%A5%E6%8E%A2%E7%A9%B6/)\n![条件编译和动态区分](../asset/Snip20180701_8.png)\n不兼容的API都会在framework release notes里标明。所以，release note是相当重要的东西\n![使用例子](../asset/Snip20180701_9.png)\n[过期的api详解](http://iosdevelopertips.com/best-practices/eveything-you-need-to-know-about-ios-and-os-x-deprecated-apis.html)\n\n\n![命名冲突](../asset/Snip20180701_11.png)\n![声明的提示](../asset/Snip20180701_12.png)\n![声明的提示](../asset/Snip20180701_13.png)\n\n\n![gcc上面的内容，oc里面的警告忽略是gcc上面的类似内容](https://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Pragmas.html)\n\n5、视频上面的一些格式\n优酷 、腾讯、乐视等大型视频网站的视频地址的获取，\n\n视频的格式：\n　　M3U8视频格格式也是一种M3U，只是它的编码格式是UTF-8格式。M3U用Latin-1字符集编码。M3U8格式特点是带有一个目录信息或文件。\n　　MP4视频文件 即 mp4 （文件格式） 。 MPEG-4包含了MPEG-1及MPEG-2的绝大部份功能及其他格式的长处，并加入及扩充对虚拟现实模型语言（VRML ， VirtualReality Modeling Language）的支持，面向对象的合成档案（包括音效，视讯及VRML对象），以及数字版权管理（DRM）及其他互动功能。而MPEG-4比MPEG-2更先进的其中一个特点，就是不再使用宏区块做影像分析，而是以影像上个体为变化记录，因此尽管影像变化速度很快、码率不足时，也不会出现方块画面。\n\nhttp://blog.csdn.net/langeldep/article/details/8603045/\nm3u8 格式的讲解\n\n百度百科：\nm3u文件 \nM3U本质上说不是音频文件，它是音频文件的列表文件，是纯文本文件。你下载下来打开它，播放软件并不是播放它，而是根据它的记录找到网络地址进行在线播放。\n\n例子说明\n编辑\n打开记事本，依次输入硬盘上几首MP3文件的路径，类似“H：\\yinyue\\来生缘.mp3……H：\\yinyue \\一起走过的日子.mp3”，每输入一首歌后，回车另起一行，输入所有的歌曲路径后，点开【文件】菜单，再点击【另存为】，在文件名中输入“刘德华. m3u”，点击【保存】，注意保存时，文件类型选“所有文件（?.?）”。保存完毕后，一个播放列表就完成了。可点击这个文件，验证是否已经自动打开与之关联的MP3播放软件并开始播放。当然，不只是MP3文件，只要是播放器支持的媒体文件，都可以用这个方法来做播放表。\nhttps://zh.wikipedia.org/wiki/M3U\nhttp://baike.baidu.com/view/718664.htm\nhttp://www.360doc.com/content/15/1103/11/20918780_510398157.shtml\nhttp://blog.csdn.net/bonlog/article/details/24551051\nhttp://www.codeceo.com/article/youku-real-url.html\nhttp://cccidea.com/it/program/134.html\nhttp://www.jianshu.com/p/7c0179a279f1\n\nhttp://www.jianshu.com/p/fd72d3cbd3dc\nhttp://www.jianshu.com/collection/62788fc96b49\nhttp://www.jianshu.com/search?q=opengl&page=1&type=collections\nhttp://www.jianshu.com/collection/dfeb8e9a87db\n\nc 语言上面的条件编译：\nhttp://blog.sina.com.cn/s/blog_4b4b54da0100r2l6.html\n\n","slug":"iOS-基础","published":1,"updated":"2018-09-18T05:04:34.427Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclc0010qioj1xighvci","content":"<p>1.通知上的细节，类里面的东西，需要去查看真实的内容；<br><img src=\"../asset/Snip20180701_4.png\" alt=\"通知不同的版本权限\"><br><a href=\"https://www.jianshu.com/p/5713fa2bfece\" target=\"_blank\" rel=\"noopener\">参考链接</a><br><br><br>推送，还是会出现问题，xgpush &lt;，看看xgpushSErivce 里面appid 和appkey是否已经对应；<br>通知的中心是获取的；<br>    UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];<br>而不是new的方式进行创建的，使用功能new创建就会出现问题，屏幕黑屏，提示有使用currentNotificationCenter 获取通知中心；</p>\n<p><img src=\"../asset/Snip20180701_15.png\" alt=\"通知上面的内容\"></p>\n<p>2、修改需求上面的内容，应该尽可能的添加代码，而不是替换代码，尽可能少点注释</p>\n<p>3、判断不同的版本来进行写代码： 可以通过一些宏来进行处理，<br>参考链接：<br><a href=\"https://blog.devzeng.com/blog/ios-multiple-version-compatible.html\" target=\"_blank\" rel=\"noopener\">https://blog.devzeng.com/blog/ios-multiple-version-compatible.html</a><br><a href=\"http://blog.163.com/ray_jun/blog/static/1670536422012429104151970/\" target=\"_blank\" rel=\"noopener\">http://blog.163.com/ray_jun/blog/static/1670536422012429104151970/</a><br><a href=\"https://blog.csdn.net/u010969412/article/details/30975301\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u010969412/article/details/30975301</a></p>\n<p>sdk允许的最大的版本；这个和运行这个程序的ios 系统没有关系<br><img src=\"../asset/Snip20180701_5.png\" alt=\"xcode 8 上运行的结果，也就是上面的宏并不是用来定义当前ios运行的版本的判断，而是不同的xcode进行编译而已；\n\"><br><img src=\"../asset/Snip20180701_6.png\" alt=\"xcode 7 上就是上面的情况；可以见这个只是用来进行编译的，优化代码\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__TVOS_PROHIBITED ： 禁止 TVos 上使用</span><br><span class=\"line\"> NS_AVAILABLE_IOS(3_0) ： ios 3 版本中引入</span><br><span class=\"line\">NS_DEPRECATED_IOS(2_0, 6_0); ios2 引入，ios 6 过时</span><br><span class=\"line\">NS_AVAILABLE(10_8, 6_0); mac os 10.8上引入，ios6 上引入</span><br><span class=\"line\">NS_DEPRECATED(10_0, 10_6, 2_0, 4_0); mac os 10.0 引入，mac os 10.6 上过时，ios 2.0 引入，4.0 过时；</span><br><span class=\"line\">同样类似，目前苹果就是3个类型的os</span><br></pre></td></tr></table></figure></p>\n<p>4、xcode 中不想升级xcode， 但是要兼容ios7 以及后面的新的ios<br>我们通过可以下载对应的ios sdk放到xcode对应的位置，然后选择最小的sdk就可以了； 或设置最大的sdk等</p>\n<p>关于sdk的兼容，我们一般是写库才会进行判断，如果是其他的，不会考虑这些库问题；我们需要兼容的是设备；应该是用UIDevice来进行判断；或者使用进程来进行判断（大才小用）；</p>\n<p>__IPHONE_OS_VERSION_MIN_REQUIRED<br>这里就需要用到这个宏进行处理；<br>或者还有大的概念的宏定义</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这些宏定义都是在这个头文件中： AvailabilityInternal.h</span><br></pre></td></tr></table></figure>\n<p><img src=\"../asset/Snip20180701_7.png\" alt=\"test 例子\"><br><a href=\"https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/cross_development/Using/using.html#//apple_ref/doc/uid/20002000-SW5\" target=\"_blank\" rel=\"noopener\">sdk 上面的官方网站介绍</a><br>参考链接：<br><a href=\"http://blog.csdn.net/xianghuibeijing/article/details/6259824\" target=\"_blank\" rel=\"noopener\">参考0</a><br><a href=\"https://daiweilai.github.io/2015/01/20/iOS%E4%B8%AD%E7%9A%84%E9%A2%84%E7%BC%96%E8%AF%91%E6%8C%87%E4%BB%A4%E7%9A%84%E5%88%9D%E6%AD%A5%E6%8E%A2%E7%A9%B6/\" target=\"_blank\" rel=\"noopener\">参考1</a><br><img src=\"../asset/Snip20180701_8.png\" alt=\"条件编译和动态区分\"><br>不兼容的API都会在framework release notes里标明。所以，release note是相当重要的东西<br><img src=\"../asset/Snip20180701_9.png\" alt=\"使用例子\"><br><a href=\"http://iosdevelopertips.com/best-practices/eveything-you-need-to-know-about-ios-and-os-x-deprecated-apis.html\" target=\"_blank\" rel=\"noopener\">过期的api详解</a></p>\n<p><img src=\"../asset/Snip20180701_11.png\" alt=\"命名冲突\"><br><img src=\"../asset/Snip20180701_12.png\" alt=\"声明的提示\"><br><img src=\"../asset/Snip20180701_13.png\" alt=\"声明的提示\"></p>\n<p><img src=\"https://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Pragmas.html\" alt=\"gcc上面的内容，oc里面的警告忽略是gcc上面的类似内容\"></p>\n<p>5、视频上面的一些格式<br>优酷 、腾讯、乐视等大型视频网站的视频地址的获取，</p>\n<p>视频的格式：<br>　　M3U8视频格格式也是一种M3U，只是它的编码格式是UTF-8格式。M3U用Latin-1字符集编码。M3U8格式特点是带有一个目录信息或文件。<br>　　MP4视频文件 即 mp4 （文件格式） 。 MPEG-4包含了MPEG-1及MPEG-2的绝大部份功能及其他格式的长处，并加入及扩充对虚拟现实模型语言（VRML ， VirtualReality Modeling Language）的支持，面向对象的合成档案（包括音效，视讯及VRML对象），以及数字版权管理（DRM）及其他互动功能。而MPEG-4比MPEG-2更先进的其中一个特点，就是不再使用宏区块做影像分析，而是以影像上个体为变化记录，因此尽管影像变化速度很快、码率不足时，也不会出现方块画面。</p>\n<p><a href=\"http://blog.csdn.net/langeldep/article/details/8603045/\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/langeldep/article/details/8603045/</a><br>m3u8 格式的讲解</p>\n<p>百度百科：<br>m3u文件<br>M3U本质上说不是音频文件，它是音频文件的列表文件，是纯文本文件。你下载下来打开它，播放软件并不是播放它，而是根据它的记录找到网络地址进行在线播放。</p>\n<p>例子说明<br>编辑<br>打开记事本，依次输入硬盘上几首MP3文件的路径，类似“H：\\yinyue\\来生缘.mp3……H：\\yinyue \\一起走过的日子.mp3”，每输入一首歌后，回车另起一行，输入所有的歌曲路径后，点开【文件】菜单，再点击【另存为】，在文件名中输入“刘德华. m3u”，点击【保存】，注意保存时，文件类型选“所有文件（?.?）”。保存完毕后，一个播放列表就完成了。可点击这个文件，验证是否已经自动打开与之关联的MP3播放软件并开始播放。当然，不只是MP3文件，只要是播放器支持的媒体文件，都可以用这个方法来做播放表。<br><a href=\"https://zh.wikipedia.org/wiki/M3U\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/M3U</a><br><a href=\"http://baike.baidu.com/view/718664.htm\" target=\"_blank\" rel=\"noopener\">http://baike.baidu.com/view/718664.htm</a><br><a href=\"http://www.360doc.com/content/15/1103/11/20918780_510398157.shtml\" target=\"_blank\" rel=\"noopener\">http://www.360doc.com/content/15/1103/11/20918780_510398157.shtml</a><br><a href=\"http://blog.csdn.net/bonlog/article/details/24551051\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/bonlog/article/details/24551051</a><br><a href=\"http://www.codeceo.com/article/youku-real-url.html\" target=\"_blank\" rel=\"noopener\">http://www.codeceo.com/article/youku-real-url.html</a><br><a href=\"http://cccidea.com/it/program/134.html\" target=\"_blank\" rel=\"noopener\">http://cccidea.com/it/program/134.html</a><br><a href=\"http://www.jianshu.com/p/7c0179a279f1\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/7c0179a279f1</a></p>\n<p><a href=\"http://www.jianshu.com/p/fd72d3cbd3dc\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/fd72d3cbd3dc</a><br><a href=\"http://www.jianshu.com/collection/62788fc96b49\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/collection/62788fc96b49</a><br><a href=\"http://www.jianshu.com/search?q=opengl&amp;page=1&amp;type=collections\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/search?q=opengl&amp;page=1&amp;type=collections</a><br><a href=\"http://www.jianshu.com/collection/dfeb8e9a87db\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/collection/dfeb8e9a87db</a></p>\n<p>c 语言上面的条件编译：<br><a href=\"http://blog.sina.com.cn/s/blog_4b4b54da0100r2l6.html\" target=\"_blank\" rel=\"noopener\">http://blog.sina.com.cn/s/blog_4b4b54da0100r2l6.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.通知上的细节，类里面的东西，需要去查看真实的内容；<br><img src=\"../asset/Snip20180701_4.png\" alt=\"通知不同的版本权限\"><br><a href=\"https://www.jianshu.com/p/5713fa2bfece\" target=\"_blank\" rel=\"noopener\">参考链接</a><br><br><br>推送，还是会出现问题，xgpush &lt;，看看xgpushSErivce 里面appid 和appkey是否已经对应；<br>通知的中心是获取的；<br>    UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];<br>而不是new的方式进行创建的，使用功能new创建就会出现问题，屏幕黑屏，提示有使用currentNotificationCenter 获取通知中心；</p>\n<p><img src=\"../asset/Snip20180701_15.png\" alt=\"通知上面的内容\"></p>\n<p>2、修改需求上面的内容，应该尽可能的添加代码，而不是替换代码，尽可能少点注释</p>\n<p>3、判断不同的版本来进行写代码： 可以通过一些宏来进行处理，<br>参考链接：<br><a href=\"https://blog.devzeng.com/blog/ios-multiple-version-compatible.html\" target=\"_blank\" rel=\"noopener\">https://blog.devzeng.com/blog/ios-multiple-version-compatible.html</a><br><a href=\"http://blog.163.com/ray_jun/blog/static/1670536422012429104151970/\" target=\"_blank\" rel=\"noopener\">http://blog.163.com/ray_jun/blog/static/1670536422012429104151970/</a><br><a href=\"https://blog.csdn.net/u010969412/article/details/30975301\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u010969412/article/details/30975301</a></p>\n<p>sdk允许的最大的版本；这个和运行这个程序的ios 系统没有关系<br><img src=\"../asset/Snip20180701_5.png\" alt=\"xcode 8 上运行的结果，也就是上面的宏并不是用来定义当前ios运行的版本的判断，而是不同的xcode进行编译而已；\n\"><br><img src=\"../asset/Snip20180701_6.png\" alt=\"xcode 7 上就是上面的情况；可以见这个只是用来进行编译的，优化代码\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__TVOS_PROHIBITED ： 禁止 TVos 上使用</span><br><span class=\"line\"> NS_AVAILABLE_IOS(3_0) ： ios 3 版本中引入</span><br><span class=\"line\">NS_DEPRECATED_IOS(2_0, 6_0); ios2 引入，ios 6 过时</span><br><span class=\"line\">NS_AVAILABLE(10_8, 6_0); mac os 10.8上引入，ios6 上引入</span><br><span class=\"line\">NS_DEPRECATED(10_0, 10_6, 2_0, 4_0); mac os 10.0 引入，mac os 10.6 上过时，ios 2.0 引入，4.0 过时；</span><br><span class=\"line\">同样类似，目前苹果就是3个类型的os</span><br></pre></td></tr></table></figure></p>\n<p>4、xcode 中不想升级xcode， 但是要兼容ios7 以及后面的新的ios<br>我们通过可以下载对应的ios sdk放到xcode对应的位置，然后选择最小的sdk就可以了； 或设置最大的sdk等</p>\n<p>关于sdk的兼容，我们一般是写库才会进行判断，如果是其他的，不会考虑这些库问题；我们需要兼容的是设备；应该是用UIDevice来进行判断；或者使用进程来进行判断（大才小用）；</p>\n<p>__IPHONE_OS_VERSION_MIN_REQUIRED<br>这里就需要用到这个宏进行处理；<br>或者还有大的概念的宏定义</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这些宏定义都是在这个头文件中： AvailabilityInternal.h</span><br></pre></td></tr></table></figure>\n<p><img src=\"../asset/Snip20180701_7.png\" alt=\"test 例子\"><br><a href=\"https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/cross_development/Using/using.html#//apple_ref/doc/uid/20002000-SW5\" target=\"_blank\" rel=\"noopener\">sdk 上面的官方网站介绍</a><br>参考链接：<br><a href=\"http://blog.csdn.net/xianghuibeijing/article/details/6259824\" target=\"_blank\" rel=\"noopener\">参考0</a><br><a href=\"https://daiweilai.github.io/2015/01/20/iOS%E4%B8%AD%E7%9A%84%E9%A2%84%E7%BC%96%E8%AF%91%E6%8C%87%E4%BB%A4%E7%9A%84%E5%88%9D%E6%AD%A5%E6%8E%A2%E7%A9%B6/\" target=\"_blank\" rel=\"noopener\">参考1</a><br><img src=\"../asset/Snip20180701_8.png\" alt=\"条件编译和动态区分\"><br>不兼容的API都会在framework release notes里标明。所以，release note是相当重要的东西<br><img src=\"../asset/Snip20180701_9.png\" alt=\"使用例子\"><br><a href=\"http://iosdevelopertips.com/best-practices/eveything-you-need-to-know-about-ios-and-os-x-deprecated-apis.html\" target=\"_blank\" rel=\"noopener\">过期的api详解</a></p>\n<p><img src=\"../asset/Snip20180701_11.png\" alt=\"命名冲突\"><br><img src=\"../asset/Snip20180701_12.png\" alt=\"声明的提示\"><br><img src=\"../asset/Snip20180701_13.png\" alt=\"声明的提示\"></p>\n<p><img src=\"https://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Pragmas.html\" alt=\"gcc上面的内容，oc里面的警告忽略是gcc上面的类似内容\"></p>\n<p>5、视频上面的一些格式<br>优酷 、腾讯、乐视等大型视频网站的视频地址的获取，</p>\n<p>视频的格式：<br>　　M3U8视频格格式也是一种M3U，只是它的编码格式是UTF-8格式。M3U用Latin-1字符集编码。M3U8格式特点是带有一个目录信息或文件。<br>　　MP4视频文件 即 mp4 （文件格式） 。 MPEG-4包含了MPEG-1及MPEG-2的绝大部份功能及其他格式的长处，并加入及扩充对虚拟现实模型语言（VRML ， VirtualReality Modeling Language）的支持，面向对象的合成档案（包括音效，视讯及VRML对象），以及数字版权管理（DRM）及其他互动功能。而MPEG-4比MPEG-2更先进的其中一个特点，就是不再使用宏区块做影像分析，而是以影像上个体为变化记录，因此尽管影像变化速度很快、码率不足时，也不会出现方块画面。</p>\n<p><a href=\"http://blog.csdn.net/langeldep/article/details/8603045/\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/langeldep/article/details/8603045/</a><br>m3u8 格式的讲解</p>\n<p>百度百科：<br>m3u文件<br>M3U本质上说不是音频文件，它是音频文件的列表文件，是纯文本文件。你下载下来打开它，播放软件并不是播放它，而是根据它的记录找到网络地址进行在线播放。</p>\n<p>例子说明<br>编辑<br>打开记事本，依次输入硬盘上几首MP3文件的路径，类似“H：\\yinyue\\来生缘.mp3……H：\\yinyue \\一起走过的日子.mp3”，每输入一首歌后，回车另起一行，输入所有的歌曲路径后，点开【文件】菜单，再点击【另存为】，在文件名中输入“刘德华. m3u”，点击【保存】，注意保存时，文件类型选“所有文件（?.?）”。保存完毕后，一个播放列表就完成了。可点击这个文件，验证是否已经自动打开与之关联的MP3播放软件并开始播放。当然，不只是MP3文件，只要是播放器支持的媒体文件，都可以用这个方法来做播放表。<br><a href=\"https://zh.wikipedia.org/wiki/M3U\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/M3U</a><br><a href=\"http://baike.baidu.com/view/718664.htm\" target=\"_blank\" rel=\"noopener\">http://baike.baidu.com/view/718664.htm</a><br><a href=\"http://www.360doc.com/content/15/1103/11/20918780_510398157.shtml\" target=\"_blank\" rel=\"noopener\">http://www.360doc.com/content/15/1103/11/20918780_510398157.shtml</a><br><a href=\"http://blog.csdn.net/bonlog/article/details/24551051\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/bonlog/article/details/24551051</a><br><a href=\"http://www.codeceo.com/article/youku-real-url.html\" target=\"_blank\" rel=\"noopener\">http://www.codeceo.com/article/youku-real-url.html</a><br><a href=\"http://cccidea.com/it/program/134.html\" target=\"_blank\" rel=\"noopener\">http://cccidea.com/it/program/134.html</a><br><a href=\"http://www.jianshu.com/p/7c0179a279f1\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/7c0179a279f1</a></p>\n<p><a href=\"http://www.jianshu.com/p/fd72d3cbd3dc\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/fd72d3cbd3dc</a><br><a href=\"http://www.jianshu.com/collection/62788fc96b49\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/collection/62788fc96b49</a><br><a href=\"http://www.jianshu.com/search?q=opengl&amp;page=1&amp;type=collections\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/search?q=opengl&amp;page=1&amp;type=collections</a><br><a href=\"http://www.jianshu.com/collection/dfeb8e9a87db\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/collection/dfeb8e9a87db</a></p>\n<p>c 语言上面的条件编译：<br><a href=\"http://blog.sina.com.cn/s/blog_4b4b54da0100r2l6.html\" target=\"_blank\" rel=\"noopener\">http://blog.sina.com.cn/s/blog_4b4b54da0100r2l6.html</a></p>\n"},{"title":"iOS 杂烩","date":"2018-07-03T09:43:48.000Z","_content":"\n[iOS 跳转到app store](https://www.jianshu.com/p/d81a0ca7b149)\n \n有关container View的使用，就是子视图和父视图之间的关系，注意addchildContainer 的使用\n[container view 上面的实现](https://developer.apple.com/library/ios/featuredarticles/ViewControllerPGforiPhoneOS/ImplementingaContainerViewController.html)","source":"_posts/iOS-杂烩.md","raw":"---\ntitle: iOS 杂烩\ndate: 2018-07-03 17:43:48\ntags: ios 杂烩\ncategories: oc\n---\n\n[iOS 跳转到app store](https://www.jianshu.com/p/d81a0ca7b149)\n \n有关container View的使用，就是子视图和父视图之间的关系，注意addchildContainer 的使用\n[container view 上面的实现](https://developer.apple.com/library/ios/featuredarticles/ViewControllerPGforiPhoneOS/ImplementingaContainerViewController.html)","slug":"iOS-杂烩","published":1,"updated":"2018-09-18T05:04:28.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcle0014qiojb07ge8tx","content":"<p><a href=\"https://www.jianshu.com/p/d81a0ca7b149\" target=\"_blank\" rel=\"noopener\">iOS 跳转到app store</a><br> <br>有关container View的使用，就是子视图和父视图之间的关系，注意addchildContainer 的使用<br><a href=\"https://developer.apple.com/library/ios/featuredarticles/ViewControllerPGforiPhoneOS/ImplementingaContainerViewController.html\" target=\"_blank\" rel=\"noopener\">container view 上面的实现</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.jianshu.com/p/d81a0ca7b149\" target=\"_blank\" rel=\"noopener\">iOS 跳转到app store</a><br> <br>有关container View的使用，就是子视图和父视图之间的关系，注意addchildContainer 的使用<br><a href=\"https://developer.apple.com/library/ios/featuredarticles/ViewControllerPGforiPhoneOS/ImplementingaContainerViewController.html\" target=\"_blank\" rel=\"noopener\">container view 上面的实现</a></p>\n"},{"title":"iOS启动页面以及开屏广告","date":"2018-07-03T09:23:05.000Z","tag":"标题1","_content":"\n我们经常看到lanchScreen.xib 文件就是一个启动页面; \n如果要实现动态的或者短视频的广告页面，就需要使用到 多个View 来实现或者说说是vc来定义展示时间，添加在keywindow上面；\n参考链接：\n[启动页面bug解析](http://stackoverflow.com/questions/31881645/xcode-7-launch-screens-may-not-set-custom-classnames)\n[启动页面图片没有加出来](http://blog.csdn.net/yishengzhiai005/article/details/51135282)\n\niOS app上面的启动页面的广告： \n（主要是在在当前启动的时候，就在keywindow 上添加广告页面）\n![启动之后添加的广告页面](../asset/Snip20180703_23.png)\n\n启动静态页面的图片\n![启动页面的位置要注意，（不要随便挪动）](../asset/Snip20180703_24.png)\n每种语言都有自己的 语言代码.lproj文件夹，因为实现本地化的时候，会有多种语言；\n[多种语言本地化与国际化](http://mokai.me/2015/10/iOS%E5%9B%BD%E9%99%85%E5%8C%96/)\n\n出现启动页面的图片加载不出来，可以去查看一下几点：\n之所以会出现这个问题是因为我们在创建的启动页面的时候要出现了问题；\n1、一个是我们创建要创建launchScreen ，而不是我们平常的storyBoard的方式\n2、我们的资源应该在创建的时候要选择相应的对应的项目，否则默认是原来的；\n3、还有就是相关的图片可能是拷贝的，尽量是能够原本的拖进来，也就是我们选择附属的关系应该确定；\n\n\n\n","source":"_posts/iOS启动页面以及开屏广告.md","raw":"---\ntitle: iOS启动页面以及开屏广告\ndate: 2018-07-03 17:23:05\ntags: iOS 启动页面 开屏广告\ncategories: oc\ntag: 标题1\n---\n\n我们经常看到lanchScreen.xib 文件就是一个启动页面; \n如果要实现动态的或者短视频的广告页面，就需要使用到 多个View 来实现或者说说是vc来定义展示时间，添加在keywindow上面；\n参考链接：\n[启动页面bug解析](http://stackoverflow.com/questions/31881645/xcode-7-launch-screens-may-not-set-custom-classnames)\n[启动页面图片没有加出来](http://blog.csdn.net/yishengzhiai005/article/details/51135282)\n\niOS app上面的启动页面的广告： \n（主要是在在当前启动的时候，就在keywindow 上添加广告页面）\n![启动之后添加的广告页面](../asset/Snip20180703_23.png)\n\n启动静态页面的图片\n![启动页面的位置要注意，（不要随便挪动）](../asset/Snip20180703_24.png)\n每种语言都有自己的 语言代码.lproj文件夹，因为实现本地化的时候，会有多种语言；\n[多种语言本地化与国际化](http://mokai.me/2015/10/iOS%E5%9B%BD%E9%99%85%E5%8C%96/)\n\n出现启动页面的图片加载不出来，可以去查看一下几点：\n之所以会出现这个问题是因为我们在创建的启动页面的时候要出现了问题；\n1、一个是我们创建要创建launchScreen ，而不是我们平常的storyBoard的方式\n2、我们的资源应该在创建的时候要选择相应的对应的项目，否则默认是原来的；\n3、还有就是相关的图片可能是拷贝的，尽量是能够原本的拖进来，也就是我们选择附属的关系应该确定；\n\n\n\n","slug":"iOS启动页面以及开屏广告","published":1,"updated":"2018-09-18T05:05:08.567Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclg0016qiojl9bxd4i2","content":"<p>我们经常看到lanchScreen.xib 文件就是一个启动页面;<br>如果要实现动态的或者短视频的广告页面，就需要使用到 多个View 来实现或者说说是vc来定义展示时间，添加在keywindow上面；<br>参考链接：<br><a href=\"http://stackoverflow.com/questions/31881645/xcode-7-launch-screens-may-not-set-custom-classnames\" target=\"_blank\" rel=\"noopener\">启动页面bug解析</a><br><a href=\"http://blog.csdn.net/yishengzhiai005/article/details/51135282\" target=\"_blank\" rel=\"noopener\">启动页面图片没有加出来</a></p>\n<p>iOS app上面的启动页面的广告：<br>（主要是在在当前启动的时候，就在keywindow 上添加广告页面）<br><img src=\"../asset/Snip20180703_23.png\" alt=\"启动之后添加的广告页面\"></p>\n<p>启动静态页面的图片<br><img src=\"../asset/Snip20180703_24.png\" alt=\"启动页面的位置要注意，（不要随便挪动）\"><br>每种语言都有自己的 语言代码.lproj文件夹，因为实现本地化的时候，会有多种语言；<br><a href=\"http://mokai.me/2015/10/iOS%E5%9B%BD%E9%99%85%E5%8C%96/\" target=\"_blank\" rel=\"noopener\">多种语言本地化与国际化</a></p>\n<p>出现启动页面的图片加载不出来，可以去查看一下几点：<br>之所以会出现这个问题是因为我们在创建的启动页面的时候要出现了问题；<br>1、一个是我们创建要创建launchScreen ，而不是我们平常的storyBoard的方式<br>2、我们的资源应该在创建的时候要选择相应的对应的项目，否则默认是原来的；<br>3、还有就是相关的图片可能是拷贝的，尽量是能够原本的拖进来，也就是我们选择附属的关系应该确定；</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我们经常看到lanchScreen.xib 文件就是一个启动页面;<br>如果要实现动态的或者短视频的广告页面，就需要使用到 多个View 来实现或者说说是vc来定义展示时间，添加在keywindow上面；<br>参考链接：<br><a href=\"http://stackoverflow.com/questions/31881645/xcode-7-launch-screens-may-not-set-custom-classnames\" target=\"_blank\" rel=\"noopener\">启动页面bug解析</a><br><a href=\"http://blog.csdn.net/yishengzhiai005/article/details/51135282\" target=\"_blank\" rel=\"noopener\">启动页面图片没有加出来</a></p>\n<p>iOS app上面的启动页面的广告：<br>（主要是在在当前启动的时候，就在keywindow 上添加广告页面）<br><img src=\"../asset/Snip20180703_23.png\" alt=\"启动之后添加的广告页面\"></p>\n<p>启动静态页面的图片<br><img src=\"../asset/Snip20180703_24.png\" alt=\"启动页面的位置要注意，（不要随便挪动）\"><br>每种语言都有自己的 语言代码.lproj文件夹，因为实现本地化的时候，会有多种语言；<br><a href=\"http://mokai.me/2015/10/iOS%E5%9B%BD%E9%99%85%E5%8C%96/\" target=\"_blank\" rel=\"noopener\">多种语言本地化与国际化</a></p>\n<p>出现启动页面的图片加载不出来，可以去查看一下几点：<br>之所以会出现这个问题是因为我们在创建的启动页面的时候要出现了问题；<br>1、一个是我们创建要创建launchScreen ，而不是我们平常的storyBoard的方式<br>2、我们的资源应该在创建的时候要选择相应的对应的项目，否则默认是原来的；<br>3、还有就是相关的图片可能是拷贝的，尽量是能够原本的拖进来，也就是我们选择附属的关系应该确定；</p>\n"},{"title":"ios 知识体系以及架构图","date":"2019-02-20T08:51:29.000Z","_content":"\n<h2>ios 底层体系</h2>\n<font size=4 color=red>第一部分： oc语法\n</font>\n1）oc对象本质\n2）kvc/kvo\n3）instance ,class , meta-class, isa, superclass\n4)category, load , initialize ,关联对象\n\n<font size=4 color=red>第二部分: block</font>\n1）底层数据结构\n2）变量捕获\n3）内存管理\n4）__block\n5)循环引用\n\n<font size=4 color=red>第三部分: runtime</font>\n1）非指针isa\n2）方法缓存\n3）objc_msgSend\n4) 消息发送、动态方法解析、消息转发\n5）super的本质\n6）常用API\n\n<font size=4 color=red>第四部分:runloop</font>\n1、CFRunLoopModeRef\n2、CFRunLoopSourceRef\n3、CFRunLoopObserverRef\n4、线程保活\n5、常见应用\n\n<font size=4 color=red>第五部分: 多线程</font>\n1)gcd (GNUstep)\n2)pthread_rwlock/ barrier_async\n3)0SSpinLock ,os_unfair_lock, pthread_mutex\n4)NSLock , NSRecursiveLock ,NSCondition, NSConditionLock\n5)dispatch_semaphore @synchronize ,atomic\n\n<font size=4 color=red>第六部分:内存管理</font>\n1）定时器内存泄露\n2）自动释放池\n3）引用计数\n4）tagged pointer \n5) ARC 原理\n6）__weak 原理\n\n<font size=4 color=red>第七部分:性能优化</font>\n1、卡顿检测\n2、异常捕获\n3、安装包瘦身\n4、启动优化、内存优化、电量优化、网络优化\n\n<font size=4 color=red>第二部分:架构设计</font>\n1）设计模式\n2）APP架构\n\n<h2>有关学习思维导图</h2>\n![iOS 进阶导图](../../../../asset/WechatIMG6.png \"ios 进阶导图\")\n\niOS 推荐书籍：\n1.《Effective Objective-C 2.0》\n2.《Objective-C 高级编程》\n3.《程序员的自我修养》\n4.《图解HTTP》\n5.《高性能iOS应用开发》\n6.《剑指Offer》|《算法图解》\n\n平时很有必要的书籍：\n1、《程序员的自我修养————链接、装载、库》 [待]\n\n\n\n","source":"_posts/ios-知识体系以及架构图.md","raw":"---\ntitle: ios 知识体系以及架构图\ndate: 2019-02-20 16:51:29\ntags: iOS\ncategories: iOS\n---\n\n<h2>ios 底层体系</h2>\n<font size=4 color=red>第一部分： oc语法\n</font>\n1）oc对象本质\n2）kvc/kvo\n3）instance ,class , meta-class, isa, superclass\n4)category, load , initialize ,关联对象\n\n<font size=4 color=red>第二部分: block</font>\n1）底层数据结构\n2）变量捕获\n3）内存管理\n4）__block\n5)循环引用\n\n<font size=4 color=red>第三部分: runtime</font>\n1）非指针isa\n2）方法缓存\n3）objc_msgSend\n4) 消息发送、动态方法解析、消息转发\n5）super的本质\n6）常用API\n\n<font size=4 color=red>第四部分:runloop</font>\n1、CFRunLoopModeRef\n2、CFRunLoopSourceRef\n3、CFRunLoopObserverRef\n4、线程保活\n5、常见应用\n\n<font size=4 color=red>第五部分: 多线程</font>\n1)gcd (GNUstep)\n2)pthread_rwlock/ barrier_async\n3)0SSpinLock ,os_unfair_lock, pthread_mutex\n4)NSLock , NSRecursiveLock ,NSCondition, NSConditionLock\n5)dispatch_semaphore @synchronize ,atomic\n\n<font size=4 color=red>第六部分:内存管理</font>\n1）定时器内存泄露\n2）自动释放池\n3）引用计数\n4）tagged pointer \n5) ARC 原理\n6）__weak 原理\n\n<font size=4 color=red>第七部分:性能优化</font>\n1、卡顿检测\n2、异常捕获\n3、安装包瘦身\n4、启动优化、内存优化、电量优化、网络优化\n\n<font size=4 color=red>第二部分:架构设计</font>\n1）设计模式\n2）APP架构\n\n<h2>有关学习思维导图</h2>\n![iOS 进阶导图](../../../../asset/WechatIMG6.png \"ios 进阶导图\")\n\niOS 推荐书籍：\n1.《Effective Objective-C 2.0》\n2.《Objective-C 高级编程》\n3.《程序员的自我修养》\n4.《图解HTTP》\n5.《高性能iOS应用开发》\n6.《剑指Offer》|《算法图解》\n\n平时很有必要的书籍：\n1、《程序员的自我修养————链接、装载、库》 [待]\n\n\n\n","slug":"ios-知识体系以及架构图","published":1,"updated":"2019-02-20T14:37:09.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclh0018qiojwu322hoi","content":"<p></p><h2>ios 底层体系</h2><p></p>\n<p><font size=\"4\" color=\"red\">第一部分： oc语法<br></font><br>1）oc对象本质<br>2）kvc/kvo<br>3）instance ,class , meta-class, isa, superclass<br>4)category, load , initialize ,关联对象</p>\n<p><font size=\"4\" color=\"red\">第二部分: block</font><br>1）底层数据结构<br>2）变量捕获<br>3）内存管理<br>4）__block<br>5)循环引用</p>\n<p><font size=\"4\" color=\"red\">第三部分: runtime</font><br>1）非指针isa<br>2）方法缓存<br>3）objc_msgSend<br>4) 消息发送、动态方法解析、消息转发<br>5）super的本质<br>6）常用API</p>\n<p><font size=\"4\" color=\"red\">第四部分:runloop</font><br>1、CFRunLoopModeRef<br>2、CFRunLoopSourceRef<br>3、CFRunLoopObserverRef<br>4、线程保活<br>5、常见应用</p>\n<p><font size=\"4\" color=\"red\">第五部分: 多线程</font><br>1)gcd (GNUstep)<br>2)pthread_rwlock/ barrier_async<br>3)0SSpinLock ,os_unfair_lock, pthread_mutex<br>4)NSLock , NSRecursiveLock ,NSCondition, NSConditionLock<br>5)dispatch_semaphore @synchronize ,atomic</p>\n<p><font size=\"4\" color=\"red\">第六部分:内存管理</font><br>1）定时器内存泄露<br>2）自动释放池<br>3）引用计数<br>4）tagged pointer<br>5) ARC 原理<br>6）__weak 原理</p>\n<p><font size=\"4\" color=\"red\">第七部分:性能优化</font><br>1、卡顿检测<br>2、异常捕获<br>3、安装包瘦身<br>4、启动优化、内存优化、电量优化、网络优化</p>\n<p><font size=\"4\" color=\"red\">第二部分:架构设计</font><br>1）设计模式<br>2）APP架构</p>\n<p></p><h2>有关学习思维导图</h2><br><img src=\"../../../../asset/WechatIMG6.png\" alt=\"iOS 进阶导图\" title=\"ios 进阶导图\"><p></p>\n<p>iOS 推荐书籍：<br>1.《Effective Objective-C 2.0》<br>2.《Objective-C 高级编程》<br>3.《程序员的自我修养》<br>4.《图解HTTP》<br>5.《高性能iOS应用开发》<br>6.《剑指Offer》|《算法图解》</p>\n<p>平时很有必要的书籍：<br>1、《程序员的自我修养————链接、装载、库》 [待]</p>\n","site":{"data":{}},"excerpt":"","more":"<p></p><h2>ios 底层体系</h2><p></p>\n<p><font size=\"4\" color=\"red\">第一部分： oc语法<br></font><br>1）oc对象本质<br>2）kvc/kvo<br>3）instance ,class , meta-class, isa, superclass<br>4)category, load , initialize ,关联对象</p>\n<p><font size=\"4\" color=\"red\">第二部分: block</font><br>1）底层数据结构<br>2）变量捕获<br>3）内存管理<br>4）__block<br>5)循环引用</p>\n<p><font size=\"4\" color=\"red\">第三部分: runtime</font><br>1）非指针isa<br>2）方法缓存<br>3）objc_msgSend<br>4) 消息发送、动态方法解析、消息转发<br>5）super的本质<br>6）常用API</p>\n<p><font size=\"4\" color=\"red\">第四部分:runloop</font><br>1、CFRunLoopModeRef<br>2、CFRunLoopSourceRef<br>3、CFRunLoopObserverRef<br>4、线程保活<br>5、常见应用</p>\n<p><font size=\"4\" color=\"red\">第五部分: 多线程</font><br>1)gcd (GNUstep)<br>2)pthread_rwlock/ barrier_async<br>3)0SSpinLock ,os_unfair_lock, pthread_mutex<br>4)NSLock , NSRecursiveLock ,NSCondition, NSConditionLock<br>5)dispatch_semaphore @synchronize ,atomic</p>\n<p><font size=\"4\" color=\"red\">第六部分:内存管理</font><br>1）定时器内存泄露<br>2）自动释放池<br>3）引用计数<br>4）tagged pointer<br>5) ARC 原理<br>6）__weak 原理</p>\n<p><font size=\"4\" color=\"red\">第七部分:性能优化</font><br>1、卡顿检测<br>2、异常捕获<br>3、安装包瘦身<br>4、启动优化、内存优化、电量优化、网络优化</p>\n<p><font size=\"4\" color=\"red\">第二部分:架构设计</font><br>1）设计模式<br>2）APP架构</p>\n<p></p><h2>有关学习思维导图</h2><br><img src=\"../../../../asset/WechatIMG6.png\" alt=\"iOS 进阶导图\" title=\"ios 进阶导图\"><p></p>\n<p>iOS 推荐书籍：<br>1.《Effective Objective-C 2.0》<br>2.《Objective-C 高级编程》<br>3.《程序员的自我修养》<br>4.《图解HTTP》<br>5.《高性能iOS应用开发》<br>6.《剑指Offer》|《算法图解》</p>\n<p>平时很有必要的书籍：<br>1、《程序员的自我修养————链接、装载、库》 [待]</p>\n"},{"title":"ios 之oc面试","date":"2019-02-16T10:03:26.000Z","_content":"一些面试题的整合\n\n<h2>题1： #include和#import 有什么区别？#import <> 和#import \"\" 有什么区别，@class？</h2>\n1.1：\n#import <> 对系统自带库或者第三方静态库头文件【编译为<>的形式】的应引用，编译器会在系统文件目录下查找这个文件；其实系统库也可以使用\"\"，而使用<>比较省时。\n#import \"\" 首先在用户目录下查找，然后到安装目录中查找，最后到系统文件目录总查找。\n\n1.2：\n#include 是对文件简单的拷贝到当前文件中，可能重复引用以及嵌套引用【交叉编译（你中有我，我中有你）】，oc中没有这种方式引入头文件了。统一使用#import，C中#include需要用到头文件保护，参考https://www.2cto.com/kf/201212/176881.html  http://www.cnblogs.com/clover-toeic/p/3851102.html\n#import 是#include的曾庆版本，防止同一个文件被多次包含【不会交叉编译】。\n\t\t会包含这个类的所有信息，包含实体变量和方法。\n\n1.3： #import与@class区别\n1.3.1\n#import会将此类的所有文件全部导入，包括实例变量和方法。\n@class只是告诉编译器有这么一个类，引用类名，至于这些类是如何定义实现的不去考虑，一般用在.h文件的@interface之前。\n\n1.3.2: 在头文件中，\n@class一般用于头文件中需要声明该类的某个实例变量的时候，此时只需要@class类名即可，不需要知道其内部的实体变量和方法。\n而在.m文件里面，如果会用到这个引用类的内部的实例变量和方法，就需要使用#import来包含这个被引用类的头文件，这时候才包含了这个被引用的类的所有信息。\n\n1.3.3: 为什么不直接在头文件中直接#import呢?\n如果有一个头文件a.h，在其他大量头文件中都需要引用头文件a.h，如果使用的是#import，那么当a.h中有了一点改动时，其他包含a.h的头文件都需要重新编译，这将耗费大量的时间，降低了开发效率。\n而如果在需要的时候使用的是@class，当a.h中有了一点改动时，由于其他头文件并没有将a.h的内容包含进来，就不用重新编译，提高了开发效率。\n\n1.3.4: 还有一个用法会引起编译错误的就是在a.h中#import ‘’b.h‘’ 在b.h中#import ‘’a.h‘’那么在编译的时候也会出现错误。\n\n4.什么时候该用@class，什么时候需要用#import呢？\n（1）一般如果有继承关系的用#import，如Ｂ是Ａ的子类那么在Ｂ中声明Ａ时用#import。\n（2）如果有循环依赖关系，如:A–>B, B–>A这样的相互依赖关系，如果使用#import来相互包含，那么就会出现编译错误，如果使用@class在两个类的头文件中相互声明，则不会有编译错误出现. @class指令只是告诉编译器，这是个类，保留个空间来存放指针就可以了。\n（3）还有就是自定义代理的时候，如果在头文件中想声明遵循代理，遵循协议的时候应该用#import导入文件，不然的话会出错误。（delegate还不太清楚，正在学习和实践）\n（4）使用有Category的类，要在.h头文件里用#import把Category包含进来。\n\n>>PS:\n1.能使用#import的地方就不要使用#inlclude\n2.使用#import不管你对一个文件同时包含了多少次，最终只会包含一次\n3.在头文件中如果没有用到包含类的实现方法，只需要知道它是一个类时，@就应该使用@class，而不是#import。如果需要使用类的一些方法时，则需要使用#import。\n4.能使用@class的地方就不要使用#import\n\n有关参考可以查看文章： c语言的预处理 参考链接：https://helinyu.github.io/2019/02/16/C-%E9%A2%84%E5%A4%84%E7%90%86/\n\n<h2>题1扩展：多用类型变量，少用#define预处理命令</h2>\n1）不要用预处理指令定义常量，这样定义出来的常量不含类型信息，编译器只是会在编译钱据此执行查找预知替换操作。 【原因】及时有人重新定义了常量值，编译器也不会产生警告信息，这将导致应用程序中常量值不一致。\n2）在实现文件中是先用static const来定义“值在编译单元内可见的变量”。由于此类常量不在全局符号表中，所以无需为其名称家前缀。 这种方式比宏定义多了一个类型信息。\n3）在头文件中使用extern来声明常量，并在相关实现文件中定义其值。这种常量要出现在全局符号表中，所以，其名称英加以区隔，通常用与之相关的类名做前缀。\n详细了解：\n\n<h2>题2：ios中frame和bounds有什么区别？</h2>\nhttps://www.jianshu.com/p/964313cfbdaa\n\n\n<h2>题3：（iOS）设计模式是什么？你知道哪些设计模式？并且简要阐述 </h2>\n工厂模式、单例模式、代理模式、享元模式、责任链模式、观察者模式\n\n\n<h2>题4：MVC和MVVM的区别？以及mvp </h2>\n【开发者遇到瓶颈：需要去查看设计模式，架构】相当于建筑的脚手架\n1）代码均摊，代码维护以及管理，更加的有层次感\n2）便于测试， 测试确保代码质量， eg：单元测试、性能测试、UI测试 \n\tApp架构的合理分配决定了各个测试能够使各个测试能够各司其职，不重复、不遗漏，让测试效率和覆盖率到最大。\n3）具有易用性， 确保后来的各种需求，同时新人加入更加容易学习。\n目前流行的架构有：mvc ,mvp, mvcs, mvvm, viper\n\n1.MVC\n苹果官方的MVC架构的优点和缺点：\n优点：\n1） 代码总量少\n2）简单易懂\n缺点：\n1）代码过于集中\n2）难以进行测试\n3）难以扩展\n4）Model层国语简单\n5）网络请求逻辑无从安放\n总之： mvc的代码过于笼统； 对于任何一个类或者结构体，只要不是数据和视图，就被放在控制器一层。ViewController耦合了视图和控制器，天生缺点。\n\n2、MVCS\n针对MVC进行的优化，S（store）存储， 这部分单独从Model或者ViewController中拆分出来构成单独的文件。\n\nMVC缺点是网络层无处安放，其实mvcs可以把网络层放在S层中，网络请求也是为了获得数据，而且一般API请求之后，数据进行缓存和持久化处理，所以存放在数据层比较合理。\nPS : 更加细致，更加容易测试\n\n3、MVVM \n主要是VM（ViewModel）\n扮演的角色：\n1）视图层的真正数据提供者；\n\t一般视图层展示的数据经常是一个或是多个模型的属性组合。\n\teg： 可能一个视频要展示很多不同数据结构的数据，这个时候就需要ViewModel进行对数据的整合。\n2）视图层的交互响应者。所有用户的交互都会传递给ViewModel，ViewModel会依次更新视图需要的属性，同时相应修改模型层的数据。这里依靠的是属性观察者或相应架构。\n![架构](../../../../asset/Snip20190217_1.png  \"MVVM的总体架构\")\n记住： VM：View拥有V；然后数据绑定，View的交互响应者\n\t  VM：拥有和更新M，M数据更新需要通知VM， 然后VM更新View。\n\nMVVM和MVC最大的区别是：数据双向的绑定。\n\nMVC、MVVM、MVVP的缺点是：没有涉及到路由的设计。\n\n还有其他的设计模式。。。。。。\n\n<h2>题5：Objective-C的类可以多重继承么？可以实现多个接口么？category是什么？重写一个类的方式是继承还是分类好？为什么？ </h2>\n1）OC不支持多重继承  ； 由于消息机制名字查找发生在运行时而非编译时，很难解决多个基类可能导致的二义性问题。\n【当单继承不够用，很难为问题域建模时，我们通常都会直接想到多继承。多继承是从多个直接基类派生类的能力，可以更加直接地为应用程序建模。】\niOS实现“多继承”的方式（简介实现多继承目的）： https://www.jianshu.com/p/c473b41c083d\n消息转发机制， 实现多借口，\n\n2）可以实现多个接口，，\n3）Category是oc的一种类的扩展机制； 主要是为已存在的类添加方法。\n4）单纯添加方法： 使用分类 ， 如果有属性等，可以使用继承关系。 \n\t已经存在的类，可以使用功能分类来进行处理，不改变原来的类。\n\n扩展：（匿名分类）可以定义属性 ， \ncategory： 不可以定义属性，只是可以声明属性。\n\n\n<h2>题6：HTTP中GET与POST 的区别</h2>\nkey： 方向，类型，参数位置\nGET： 【方向】从服务器获取信息；【类型】处理静态和动态的内容；【参数位置】GET的参数在其URI中； 被缓存，可以被存储在浏览器的历史中，器内容从理论上有长度限制\nPOST: 【方向】向服务器发送消息，【类型】只是处理动态内容，【参数位置】POST参数在其包体里，参数角度看，POST比GET更加安全，隐秘； POST 在这三个方面恰恰相反。\n\n扩展到： https ，tcp，以及dup的内容\n\n\n<h2>题7：常见的OC的数据类型有哪些？和C的基本数据类型有什么区别？eg：NSInteger和Int</h2>\n\n\n<h2>题8：objective-C如何对内容进行管理的，说说你的看法和解决</h2>\n\n『扩展』：开发中如何检查内存泄露的？\n\n<h2>题9：OC创建线程的方法是什么？如果在主线程中执行代码，方法是什么？如果想延时执行代码、方法是什么？</h2>\n\n<h2>题10：ViewController的生命周期</h2>\n\n<h2>题11：Delegate和notification有什么区别？</h2>\n\n<h2>题12：什么是block</h2>\nBlock是C语言的扩充，即带有自动变量的匿名函数，它和普通变量一样，可以作为自动变量，函数参数，静态变量，全局变量。\nblock 本质应该是一个函数指针加上一个对应捕获上下文变量的内存块（结构体或者类），之前用宏语法糖封装了一个GCD用在Windows开发上\n\n参考链接：\nhttps://www.jianshu.com/p/cf61bfad211a\n\n<h2>题13：iOS中常用的数据存储方式</h2>\n\n<h2>题14：ios中沙盒的目录结构是怎么样的？</h2>\n4、AppName.app 目录：这是应用程序的程序包目录，包含应用程序的本身。由于应用程序必须经过签名，所以您在运行时不能对这个目录中的内容进行修改，否则可能会使应用程序无法启动。\n\n1、Documents 目录：您应该将所有的应用程序数据文件写入到这个目录下。这个目录用于存储用户数据。该路径可通过配置实现iTunes共享文件。可被iTunes备份。\n2、Library 目录：这个目录下有两个子目录：\n\tPreferences 目录：包含应用程序的偏好设置文件。您不应该直接创建偏好设置文件，而是应该使用NSUserDefaults类来取得和设置应用程序的偏好.\n\tCaches 目录：用于存放应用程序专用的支持文件，保存应用程序再次启动过程中需要的信息。\n\t可创建子文件夹。可以用来放置您希望被备份但不希望被用户看到的数据。该路径下的文件夹，除Caches以外，都会被iTunes备份。\n3、tmp 目录：这个目录用于存放临时文件，保存应用程序再次启动过程中不需要的信息。该路径下的文件不会被iTunes备份。\n\n<h2>题15：iOS多线程技术有哪几种方式？</h2>\nGCD和NSOperation的区别\n\n<h2>题16：什么是TCP/UDP ：TCP (Transmission Control Protocol)， UDP(User Datagram Protocol)</h2>  \n1）TCP和UDP协议属于传输层协议。\n2）TCP提供IP环境下的数据可靠传输，它提供的服务包括数据流传送、可靠性、有效流控、全双工操作和多路复用。 通过面向连接、端到端和可靠的数据包发送。通俗说，它是事先为所发送的数据开辟出连接好的通道，然后再进行数据发送； | 可靠、有效流控、全双工、多路复用、【通过面向链接】\n2）UDP则不为IP提供可靠性、流控或差错恢复功能。 | 不可靠、块数据、没有差错恢复\n3）一般来说，TCP对应的是可靠性要求高的应用，而UDP对应的则是可靠性要求低、传输经济的应用。TCP支持的应用协议主要有：Telnet、FTP、SMTP等；UDP支持的应用层协议主要有：NFS（网络文件系统）、SNMP（简单网络管理协议）、DNS（主域名称系统）、TFTP（通用文件传输协议）等。\n\n<h2>题17：介绍一下XMPP</h2>\nXMPP （Extensible Messaging and Presense Protocol 前称：Jabber）协议： 可拓展消息处理现场协议是基于可拓展标记语言（XML）胡近端串流式即时通讯协议。它将现场肯上下文敏感信息标记嵌入到XML结构化数据中，使得人与人之间、应用系统之间以及人与应用系统之间能即时通讯。XMPP是基于XML架构的开放式协议。\n\nPS:感觉消耗数据比较大。\n\n<h2>题18：使用伪代码写一个线程安全的单例</h2>\nstatic AccountManager *sharedAccountManagerInstance = nil; \n+ (AccountManager *)sharedManager {  \n    static dispatch_once_t predicate; dispatch_once(&predicate, ^{        \n          sharedAccountManagerInstance = [[AccountManager alloc] init];  \n    }); \n    return sharedAccountManagerInstance;  \n}\n\n<h2>题19：请简单介绍一下APNS发送系统消息机制 </h2>\n![面试](../../../../asset/Snip20190217_2.png  \"APNS 结构图\")\nkey: 厘清iOS系统、App、APNS（apple push notification service）服务器以及app对应的客户端关系。\n1）App想iOS系统申请远程消息推送权限，这个与本地消息推送的注册通知是一样的。\n2）iOS系统向APNS服务器请求手机端的DeviceToken并且告诉App，允许接受推送的通知。\n3）App接收到deviceToken\n4）App将受到的DeviceToken传给app对应的服务器端。\n|| 下面是推送的过程\n5）远程消息由app对应的服务器端产生，它会先经过APNs服务器\n6）Apns 服务器将远程通知推送到响应的手机\n7）根据对应的deviceToken，通知会推送到指定的手机。\n\n```\n// iOS8 下需要使用新的 API\n    if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 8.0) {\n        UIUserNotificationType myTypes = UIUserNotificationTypeBadge | UIUserNotificationTypeSound | UIUserNotificationTypeAlert;\n\n        UIUserNotificationSettings *settings = [UIUserNotificationSettings settingsForTypes:myTypes categories:nil];\n        [[UIApplication sharedApplication] registerUserNotificationSettings:settings];\n    }else {\n        UIRemoteNotificationType myTypes = UIRemoteNotificationTypeBadge|UIRemoteNotificationTypeAlert|UIRemoteNotificationTypeSound;\n        [[UIApplication sharedApplication] registerForRemoteNotificationTypes:myTypes];\n    }\n\n    #warning 测试 开发环境 时需要修改BPushMode为BPushModeDevelopment 需要修改Apikey为自己的Apikey\n    \n    // 在 App 启动时注册百度云推送服务，需要提供 Apikey\n    [BPush registerChannel:launchOptions apiKey:<#在百度云推送官网上注册后得到的apikey#> pushMode:BPushModeDevelopment withFirstAction:nil withSecondAction:nil withCategory:nil isDebug:YES];\n\n    // 在 iOS8 系统中，还需要添加这个方法。通过新的 API 注册推送服务\n- (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings\n{\n    [application registerForRemoteNotifications];\n}\n\n- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n{\n    NSLog(@\"test:%@\",deviceToken);\n    [BPush registerDeviceToken:deviceToken];\n    [BPush bindChannelWithCompleteHandler:nil];   \n}\n\n// 当 DeviceToken 获取失败时，系统会回调此方法\n- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n{\n    NSLog(@\"DeviceToken 获取失败，原因：%@\",error);\n}\n```\n\n<h2>题20：框架库构建： 你实现过一个框架或者库以供别人使用，如果有，请谈一下框架或者库时候的经验，如果没有，请设想和设计框架的public的API，并且指出大概需要如何做，需要注意一些什么方面，来使别人更加容易使用？ </h2>\n\n\n\n","source":"_posts/ios-之oc面试.md","raw":"---\ntitle: ios 之oc面试\ndate: 2019-02-16 18:03:26\ntags: ios oc 面试\ncategories: 面试\n---\n一些面试题的整合\n\n<h2>题1： #include和#import 有什么区别？#import <> 和#import \"\" 有什么区别，@class？</h2>\n1.1：\n#import <> 对系统自带库或者第三方静态库头文件【编译为<>的形式】的应引用，编译器会在系统文件目录下查找这个文件；其实系统库也可以使用\"\"，而使用<>比较省时。\n#import \"\" 首先在用户目录下查找，然后到安装目录中查找，最后到系统文件目录总查找。\n\n1.2：\n#include 是对文件简单的拷贝到当前文件中，可能重复引用以及嵌套引用【交叉编译（你中有我，我中有你）】，oc中没有这种方式引入头文件了。统一使用#import，C中#include需要用到头文件保护，参考https://www.2cto.com/kf/201212/176881.html  http://www.cnblogs.com/clover-toeic/p/3851102.html\n#import 是#include的曾庆版本，防止同一个文件被多次包含【不会交叉编译】。\n\t\t会包含这个类的所有信息，包含实体变量和方法。\n\n1.3： #import与@class区别\n1.3.1\n#import会将此类的所有文件全部导入，包括实例变量和方法。\n@class只是告诉编译器有这么一个类，引用类名，至于这些类是如何定义实现的不去考虑，一般用在.h文件的@interface之前。\n\n1.3.2: 在头文件中，\n@class一般用于头文件中需要声明该类的某个实例变量的时候，此时只需要@class类名即可，不需要知道其内部的实体变量和方法。\n而在.m文件里面，如果会用到这个引用类的内部的实例变量和方法，就需要使用#import来包含这个被引用类的头文件，这时候才包含了这个被引用的类的所有信息。\n\n1.3.3: 为什么不直接在头文件中直接#import呢?\n如果有一个头文件a.h，在其他大量头文件中都需要引用头文件a.h，如果使用的是#import，那么当a.h中有了一点改动时，其他包含a.h的头文件都需要重新编译，这将耗费大量的时间，降低了开发效率。\n而如果在需要的时候使用的是@class，当a.h中有了一点改动时，由于其他头文件并没有将a.h的内容包含进来，就不用重新编译，提高了开发效率。\n\n1.3.4: 还有一个用法会引起编译错误的就是在a.h中#import ‘’b.h‘’ 在b.h中#import ‘’a.h‘’那么在编译的时候也会出现错误。\n\n4.什么时候该用@class，什么时候需要用#import呢？\n（1）一般如果有继承关系的用#import，如Ｂ是Ａ的子类那么在Ｂ中声明Ａ时用#import。\n（2）如果有循环依赖关系，如:A–>B, B–>A这样的相互依赖关系，如果使用#import来相互包含，那么就会出现编译错误，如果使用@class在两个类的头文件中相互声明，则不会有编译错误出现. @class指令只是告诉编译器，这是个类，保留个空间来存放指针就可以了。\n（3）还有就是自定义代理的时候，如果在头文件中想声明遵循代理，遵循协议的时候应该用#import导入文件，不然的话会出错误。（delegate还不太清楚，正在学习和实践）\n（4）使用有Category的类，要在.h头文件里用#import把Category包含进来。\n\n>>PS:\n1.能使用#import的地方就不要使用#inlclude\n2.使用#import不管你对一个文件同时包含了多少次，最终只会包含一次\n3.在头文件中如果没有用到包含类的实现方法，只需要知道它是一个类时，@就应该使用@class，而不是#import。如果需要使用类的一些方法时，则需要使用#import。\n4.能使用@class的地方就不要使用#import\n\n有关参考可以查看文章： c语言的预处理 参考链接：https://helinyu.github.io/2019/02/16/C-%E9%A2%84%E5%A4%84%E7%90%86/\n\n<h2>题1扩展：多用类型变量，少用#define预处理命令</h2>\n1）不要用预处理指令定义常量，这样定义出来的常量不含类型信息，编译器只是会在编译钱据此执行查找预知替换操作。 【原因】及时有人重新定义了常量值，编译器也不会产生警告信息，这将导致应用程序中常量值不一致。\n2）在实现文件中是先用static const来定义“值在编译单元内可见的变量”。由于此类常量不在全局符号表中，所以无需为其名称家前缀。 这种方式比宏定义多了一个类型信息。\n3）在头文件中使用extern来声明常量，并在相关实现文件中定义其值。这种常量要出现在全局符号表中，所以，其名称英加以区隔，通常用与之相关的类名做前缀。\n详细了解：\n\n<h2>题2：ios中frame和bounds有什么区别？</h2>\nhttps://www.jianshu.com/p/964313cfbdaa\n\n\n<h2>题3：（iOS）设计模式是什么？你知道哪些设计模式？并且简要阐述 </h2>\n工厂模式、单例模式、代理模式、享元模式、责任链模式、观察者模式\n\n\n<h2>题4：MVC和MVVM的区别？以及mvp </h2>\n【开发者遇到瓶颈：需要去查看设计模式，架构】相当于建筑的脚手架\n1）代码均摊，代码维护以及管理，更加的有层次感\n2）便于测试， 测试确保代码质量， eg：单元测试、性能测试、UI测试 \n\tApp架构的合理分配决定了各个测试能够使各个测试能够各司其职，不重复、不遗漏，让测试效率和覆盖率到最大。\n3）具有易用性， 确保后来的各种需求，同时新人加入更加容易学习。\n目前流行的架构有：mvc ,mvp, mvcs, mvvm, viper\n\n1.MVC\n苹果官方的MVC架构的优点和缺点：\n优点：\n1） 代码总量少\n2）简单易懂\n缺点：\n1）代码过于集中\n2）难以进行测试\n3）难以扩展\n4）Model层国语简单\n5）网络请求逻辑无从安放\n总之： mvc的代码过于笼统； 对于任何一个类或者结构体，只要不是数据和视图，就被放在控制器一层。ViewController耦合了视图和控制器，天生缺点。\n\n2、MVCS\n针对MVC进行的优化，S（store）存储， 这部分单独从Model或者ViewController中拆分出来构成单独的文件。\n\nMVC缺点是网络层无处安放，其实mvcs可以把网络层放在S层中，网络请求也是为了获得数据，而且一般API请求之后，数据进行缓存和持久化处理，所以存放在数据层比较合理。\nPS : 更加细致，更加容易测试\n\n3、MVVM \n主要是VM（ViewModel）\n扮演的角色：\n1）视图层的真正数据提供者；\n\t一般视图层展示的数据经常是一个或是多个模型的属性组合。\n\teg： 可能一个视频要展示很多不同数据结构的数据，这个时候就需要ViewModel进行对数据的整合。\n2）视图层的交互响应者。所有用户的交互都会传递给ViewModel，ViewModel会依次更新视图需要的属性，同时相应修改模型层的数据。这里依靠的是属性观察者或相应架构。\n![架构](../../../../asset/Snip20190217_1.png  \"MVVM的总体架构\")\n记住： VM：View拥有V；然后数据绑定，View的交互响应者\n\t  VM：拥有和更新M，M数据更新需要通知VM， 然后VM更新View。\n\nMVVM和MVC最大的区别是：数据双向的绑定。\n\nMVC、MVVM、MVVP的缺点是：没有涉及到路由的设计。\n\n还有其他的设计模式。。。。。。\n\n<h2>题5：Objective-C的类可以多重继承么？可以实现多个接口么？category是什么？重写一个类的方式是继承还是分类好？为什么？ </h2>\n1）OC不支持多重继承  ； 由于消息机制名字查找发生在运行时而非编译时，很难解决多个基类可能导致的二义性问题。\n【当单继承不够用，很难为问题域建模时，我们通常都会直接想到多继承。多继承是从多个直接基类派生类的能力，可以更加直接地为应用程序建模。】\niOS实现“多继承”的方式（简介实现多继承目的）： https://www.jianshu.com/p/c473b41c083d\n消息转发机制， 实现多借口，\n\n2）可以实现多个接口，，\n3）Category是oc的一种类的扩展机制； 主要是为已存在的类添加方法。\n4）单纯添加方法： 使用分类 ， 如果有属性等，可以使用继承关系。 \n\t已经存在的类，可以使用功能分类来进行处理，不改变原来的类。\n\n扩展：（匿名分类）可以定义属性 ， \ncategory： 不可以定义属性，只是可以声明属性。\n\n\n<h2>题6：HTTP中GET与POST 的区别</h2>\nkey： 方向，类型，参数位置\nGET： 【方向】从服务器获取信息；【类型】处理静态和动态的内容；【参数位置】GET的参数在其URI中； 被缓存，可以被存储在浏览器的历史中，器内容从理论上有长度限制\nPOST: 【方向】向服务器发送消息，【类型】只是处理动态内容，【参数位置】POST参数在其包体里，参数角度看，POST比GET更加安全，隐秘； POST 在这三个方面恰恰相反。\n\n扩展到： https ，tcp，以及dup的内容\n\n\n<h2>题7：常见的OC的数据类型有哪些？和C的基本数据类型有什么区别？eg：NSInteger和Int</h2>\n\n\n<h2>题8：objective-C如何对内容进行管理的，说说你的看法和解决</h2>\n\n『扩展』：开发中如何检查内存泄露的？\n\n<h2>题9：OC创建线程的方法是什么？如果在主线程中执行代码，方法是什么？如果想延时执行代码、方法是什么？</h2>\n\n<h2>题10：ViewController的生命周期</h2>\n\n<h2>题11：Delegate和notification有什么区别？</h2>\n\n<h2>题12：什么是block</h2>\nBlock是C语言的扩充，即带有自动变量的匿名函数，它和普通变量一样，可以作为自动变量，函数参数，静态变量，全局变量。\nblock 本质应该是一个函数指针加上一个对应捕获上下文变量的内存块（结构体或者类），之前用宏语法糖封装了一个GCD用在Windows开发上\n\n参考链接：\nhttps://www.jianshu.com/p/cf61bfad211a\n\n<h2>题13：iOS中常用的数据存储方式</h2>\n\n<h2>题14：ios中沙盒的目录结构是怎么样的？</h2>\n4、AppName.app 目录：这是应用程序的程序包目录，包含应用程序的本身。由于应用程序必须经过签名，所以您在运行时不能对这个目录中的内容进行修改，否则可能会使应用程序无法启动。\n\n1、Documents 目录：您应该将所有的应用程序数据文件写入到这个目录下。这个目录用于存储用户数据。该路径可通过配置实现iTunes共享文件。可被iTunes备份。\n2、Library 目录：这个目录下有两个子目录：\n\tPreferences 目录：包含应用程序的偏好设置文件。您不应该直接创建偏好设置文件，而是应该使用NSUserDefaults类来取得和设置应用程序的偏好.\n\tCaches 目录：用于存放应用程序专用的支持文件，保存应用程序再次启动过程中需要的信息。\n\t可创建子文件夹。可以用来放置您希望被备份但不希望被用户看到的数据。该路径下的文件夹，除Caches以外，都会被iTunes备份。\n3、tmp 目录：这个目录用于存放临时文件，保存应用程序再次启动过程中不需要的信息。该路径下的文件不会被iTunes备份。\n\n<h2>题15：iOS多线程技术有哪几种方式？</h2>\nGCD和NSOperation的区别\n\n<h2>题16：什么是TCP/UDP ：TCP (Transmission Control Protocol)， UDP(User Datagram Protocol)</h2>  \n1）TCP和UDP协议属于传输层协议。\n2）TCP提供IP环境下的数据可靠传输，它提供的服务包括数据流传送、可靠性、有效流控、全双工操作和多路复用。 通过面向连接、端到端和可靠的数据包发送。通俗说，它是事先为所发送的数据开辟出连接好的通道，然后再进行数据发送； | 可靠、有效流控、全双工、多路复用、【通过面向链接】\n2）UDP则不为IP提供可靠性、流控或差错恢复功能。 | 不可靠、块数据、没有差错恢复\n3）一般来说，TCP对应的是可靠性要求高的应用，而UDP对应的则是可靠性要求低、传输经济的应用。TCP支持的应用协议主要有：Telnet、FTP、SMTP等；UDP支持的应用层协议主要有：NFS（网络文件系统）、SNMP（简单网络管理协议）、DNS（主域名称系统）、TFTP（通用文件传输协议）等。\n\n<h2>题17：介绍一下XMPP</h2>\nXMPP （Extensible Messaging and Presense Protocol 前称：Jabber）协议： 可拓展消息处理现场协议是基于可拓展标记语言（XML）胡近端串流式即时通讯协议。它将现场肯上下文敏感信息标记嵌入到XML结构化数据中，使得人与人之间、应用系统之间以及人与应用系统之间能即时通讯。XMPP是基于XML架构的开放式协议。\n\nPS:感觉消耗数据比较大。\n\n<h2>题18：使用伪代码写一个线程安全的单例</h2>\nstatic AccountManager *sharedAccountManagerInstance = nil; \n+ (AccountManager *)sharedManager {  \n    static dispatch_once_t predicate; dispatch_once(&predicate, ^{        \n          sharedAccountManagerInstance = [[AccountManager alloc] init];  \n    }); \n    return sharedAccountManagerInstance;  \n}\n\n<h2>题19：请简单介绍一下APNS发送系统消息机制 </h2>\n![面试](../../../../asset/Snip20190217_2.png  \"APNS 结构图\")\nkey: 厘清iOS系统、App、APNS（apple push notification service）服务器以及app对应的客户端关系。\n1）App想iOS系统申请远程消息推送权限，这个与本地消息推送的注册通知是一样的。\n2）iOS系统向APNS服务器请求手机端的DeviceToken并且告诉App，允许接受推送的通知。\n3）App接收到deviceToken\n4）App将受到的DeviceToken传给app对应的服务器端。\n|| 下面是推送的过程\n5）远程消息由app对应的服务器端产生，它会先经过APNs服务器\n6）Apns 服务器将远程通知推送到响应的手机\n7）根据对应的deviceToken，通知会推送到指定的手机。\n\n```\n// iOS8 下需要使用新的 API\n    if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 8.0) {\n        UIUserNotificationType myTypes = UIUserNotificationTypeBadge | UIUserNotificationTypeSound | UIUserNotificationTypeAlert;\n\n        UIUserNotificationSettings *settings = [UIUserNotificationSettings settingsForTypes:myTypes categories:nil];\n        [[UIApplication sharedApplication] registerUserNotificationSettings:settings];\n    }else {\n        UIRemoteNotificationType myTypes = UIRemoteNotificationTypeBadge|UIRemoteNotificationTypeAlert|UIRemoteNotificationTypeSound;\n        [[UIApplication sharedApplication] registerForRemoteNotificationTypes:myTypes];\n    }\n\n    #warning 测试 开发环境 时需要修改BPushMode为BPushModeDevelopment 需要修改Apikey为自己的Apikey\n    \n    // 在 App 启动时注册百度云推送服务，需要提供 Apikey\n    [BPush registerChannel:launchOptions apiKey:<#在百度云推送官网上注册后得到的apikey#> pushMode:BPushModeDevelopment withFirstAction:nil withSecondAction:nil withCategory:nil isDebug:YES];\n\n    // 在 iOS8 系统中，还需要添加这个方法。通过新的 API 注册推送服务\n- (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings\n{\n    [application registerForRemoteNotifications];\n}\n\n- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n{\n    NSLog(@\"test:%@\",deviceToken);\n    [BPush registerDeviceToken:deviceToken];\n    [BPush bindChannelWithCompleteHandler:nil];   \n}\n\n// 当 DeviceToken 获取失败时，系统会回调此方法\n- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n{\n    NSLog(@\"DeviceToken 获取失败，原因：%@\",error);\n}\n```\n\n<h2>题20：框架库构建： 你实现过一个框架或者库以供别人使用，如果有，请谈一下框架或者库时候的经验，如果没有，请设想和设计框架的public的API，并且指出大概需要如何做，需要注意一些什么方面，来使别人更加容易使用？ </h2>\n\n\n\n","slug":"ios-之oc面试","published":1,"updated":"2019-02-17T11:51:42.660Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcli001cqiojwqulmhc4","content":"<p>一些面试题的整合</p>\n<h2>题1： #include和#import 有什么区别？#import &lt;&gt; 和#import “” 有什么区别，@class？</h2><br>1.1：<br>#import &lt;&gt; 对系统自带库或者第三方静态库头文件【编译为&lt;&gt;的形式】的应引用，编译器会在系统文件目录下查找这个文件；其实系统库也可以使用””，而使用&lt;&gt;比较省时。<br>#import “” 首先在用户目录下查找，然后到安装目录中查找，最后到系统文件目录总查找。<br><br>1.2：<br>#include 是对文件简单的拷贝到当前文件中，可能重复引用以及嵌套引用【交叉编译（你中有我，我中有你）】，oc中没有这种方式引入头文件了。统一使用#import，C中#include需要用到头文件保护，参考<a href=\"https://www.2cto.com/kf/201212/176881.html\" target=\"_blank\" rel=\"noopener\">https://www.2cto.com/kf/201212/176881.html</a>  <a href=\"http://www.cnblogs.com/clover-toeic/p/3851102.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/clover-toeic/p/3851102.html</a><br>#import 是#include的曾庆版本，防止同一个文件被多次包含【不会交叉编译】。<br>        会包含这个类的所有信息，包含实体变量和方法。<br><br>1.3： #import与@class区别<br>1.3.1<br>#import会将此类的所有文件全部导入，包括实例变量和方法。<br>@class只是告诉编译器有这么一个类，引用类名，至于这些类是如何定义实现的不去考虑，一般用在.h文件的@interface之前。<br><br>1.3.2: 在头文件中，<br>@class一般用于头文件中需要声明该类的某个实例变量的时候，此时只需要@class类名即可，不需要知道其内部的实体变量和方法。<br>而在.m文件里面，如果会用到这个引用类的内部的实例变量和方法，就需要使用#import来包含这个被引用类的头文件，这时候才包含了这个被引用的类的所有信息。<br><br>1.3.3: 为什么不直接在头文件中直接#import呢?<br>如果有一个头文件a.h，在其他大量头文件中都需要引用头文件a.h，如果使用的是#import，那么当a.h中有了一点改动时，其他包含a.h的头文件都需要重新编译，这将耗费大量的时间，降低了开发效率。<br>而如果在需要的时候使用的是@class，当a.h中有了一点改动时，由于其他头文件并没有将a.h的内容包含进来，就不用重新编译，提高了开发效率。<br><br>1.3.4: 还有一个用法会引起编译错误的就是在a.h中#import ‘’b.h‘’ 在b.h中#import ‘’a.h‘’那么在编译的时候也会出现错误。<br><br>4.什么时候该用@class，什么时候需要用#import呢？<br>（1）一般如果有继承关系的用#import，如Ｂ是Ａ的子类那么在Ｂ中声明Ａ时用#import。<br>（2）如果有循环依赖关系，如:A–&gt;B, B–&gt;A这样的相互依赖关系，如果使用#import来相互包含，那么就会出现编译错误，如果使用@class在两个类的头文件中相互声明，则不会有编译错误出现. @class指令只是告诉编译器，这是个类，保留个空间来存放指针就可以了。<br>（3）还有就是自定义代理的时候，如果在头文件中想声明遵循代理，遵循协议的时候应该用#import导入文件，不然的话会出错误。（delegate还不太清楚，正在学习和实践）<br>（4）使用有Category的类，要在.h头文件里用#import把Category包含进来。<br><br>&gt;&gt;PS:<br>1.能使用#import的地方就不要使用#inlclude<br>2.使用#import不管你对一个文件同时包含了多少次，最终只会包含一次<br>3.在头文件中如果没有用到包含类的实现方法，只需要知道它是一个类时，@就应该使用@class，而不是#import。如果需要使用类的一些方法时，则需要使用#import。<br>4.能使用@class的地方就不要使用#import<br><br>有关参考可以查看文章： c语言的预处理 参考链接：<a href=\"https://helinyu.github.io/2019/02/16/C-%E9%A2%84%E5%A4%84%E7%90%86/\" target=\"_blank\" rel=\"noopener\">https://helinyu.github.io/2019/02/16/C-%E9%A2%84%E5%A4%84%E7%90%86/</a><br><br><h2>题1扩展：多用类型变量，少用#define预处理命令</h2><br>1）不要用预处理指令定义常量，这样定义出来的常量不含类型信息，编译器只是会在编译钱据此执行查找预知替换操作。 【原因】及时有人重新定义了常量值，编译器也不会产生警告信息，这将导致应用程序中常量值不一致。<br>2）在实现文件中是先用static const来定义“值在编译单元内可见的变量”。由于此类常量不在全局符号表中，所以无需为其名称家前缀。 这种方式比宏定义多了一个类型信息。<br>3）在头文件中使用extern来声明常量，并在相关实现文件中定义其值。这种常量要出现在全局符号表中，所以，其名称英加以区隔，通常用与之相关的类名做前缀。<br>详细了解：<br><br><h2>题2：ios中frame和bounds有什么区别？</h2><br><a href=\"https://www.jianshu.com/p/964313cfbdaa\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/964313cfbdaa</a><br><br><br><h2>题3：（iOS）设计模式是什么？你知道哪些设计模式？并且简要阐述 </h2><br>工厂模式、单例模式、代理模式、享元模式、责任链模式、观察者模式<br><br><br><h2>题4：MVC和MVVM的区别？以及mvp </h2><br>【开发者遇到瓶颈：需要去查看设计模式，架构】相当于建筑的脚手架<br>1）代码均摊，代码维护以及管理，更加的有层次感<br>2）便于测试， 测试确保代码质量， eg：单元测试、性能测试、UI测试<br>    App架构的合理分配决定了各个测试能够使各个测试能够各司其职，不重复、不遗漏，让测试效率和覆盖率到最大。<br>3）具有易用性， 确保后来的各种需求，同时新人加入更加容易学习。<br>目前流行的架构有：mvc ,mvp, mvcs, mvvm, viper<br><br>1.MVC<br>苹果官方的MVC架构的优点和缺点：<br>优点：<br>1） 代码总量少<br>2）简单易懂<br>缺点：<br>1）代码过于集中<br>2）难以进行测试<br>3）难以扩展<br>4）Model层国语简单<br>5）网络请求逻辑无从安放<br>总之： mvc的代码过于笼统； 对于任何一个类或者结构体，只要不是数据和视图，就被放在控制器一层。ViewController耦合了视图和控制器，天生缺点。<br><br>2、MVCS<br>针对MVC进行的优化，S（store）存储， 这部分单独从Model或者ViewController中拆分出来构成单独的文件。<br><br>MVC缺点是网络层无处安放，其实mvcs可以把网络层放在S层中，网络请求也是为了获得数据，而且一般API请求之后，数据进行缓存和持久化处理，所以存放在数据层比较合理。<br>PS : 更加细致，更加容易测试<br><br>3、MVVM<br>主要是VM（ViewModel）<br>扮演的角色：<br>1）视图层的真正数据提供者；<br>    一般视图层展示的数据经常是一个或是多个模型的属性组合。<br>    eg： 可能一个视频要展示很多不同数据结构的数据，这个时候就需要ViewModel进行对数据的整合。<br>2）视图层的交互响应者。所有用户的交互都会传递给ViewModel，ViewModel会依次更新视图需要的属性，同时相应修改模型层的数据。这里依靠的是属性观察者或相应架构。<br><img src=\"../../../../asset/Snip20190217_1.png\" alt=\"架构\" title=\"MVVM的总体架构\"><br>记住： VM：View拥有V；然后数据绑定，View的交互响应者<br>      VM：拥有和更新M，M数据更新需要通知VM， 然后VM更新View。<br><br>MVVM和MVC最大的区别是：数据双向的绑定。<br><br>MVC、MVVM、MVVP的缺点是：没有涉及到路由的设计。<br><br>还有其他的设计模式。。。。。。<br><br><h2>题5：Objective-C的类可以多重继承么？可以实现多个接口么？category是什么？重写一个类的方式是继承还是分类好？为什么？ </h2><br>1）OC不支持多重继承  ； 由于消息机制名字查找发生在运行时而非编译时，很难解决多个基类可能导致的二义性问题。<br>【当单继承不够用，很难为问题域建模时，我们通常都会直接想到多继承。多继承是从多个直接基类派生类的能力，可以更加直接地为应用程序建模。】<br>iOS实现“多继承”的方式（简介实现多继承目的）： <a href=\"https://www.jianshu.com/p/c473b41c083d\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/c473b41c083d</a><br>消息转发机制， 实现多借口，<br><br>2）可以实现多个接口，，<br>3）Category是oc的一种类的扩展机制； 主要是为已存在的类添加方法。<br>4）单纯添加方法： 使用分类 ， 如果有属性等，可以使用继承关系。<br>    已经存在的类，可以使用功能分类来进行处理，不改变原来的类。<br><br>扩展：（匿名分类）可以定义属性 ，<br>category： 不可以定义属性，只是可以声明属性。<br><br><br><h2>题6：HTTP中GET与POST 的区别</h2><br>key： 方向，类型，参数位置<br>GET： 【方向】从服务器获取信息；【类型】处理静态和动态的内容；【参数位置】GET的参数在其URI中； 被缓存，可以被存储在浏览器的历史中，器内容从理论上有长度限制<br>POST: 【方向】向服务器发送消息，【类型】只是处理动态内容，【参数位置】POST参数在其包体里，参数角度看，POST比GET更加安全，隐秘； POST 在这三个方面恰恰相反。<br><br>扩展到： https ，tcp，以及dup的内容<br><br><br><h2>题7：常见的OC的数据类型有哪些？和C的基本数据类型有什么区别？eg：NSInteger和Int</h2>\n\n\n<h2>题8：objective-C如何对内容进行管理的，说说你的看法和解决</h2>\n\n<p>『扩展』：开发中如何检查内存泄露的？</p>\n<h2>题9：OC创建线程的方法是什么？如果在主线程中执行代码，方法是什么？如果想延时执行代码、方法是什么？</h2>\n\n<h2>题10：ViewController的生命周期</h2>\n\n<h2>题11：Delegate和notification有什么区别？</h2>\n\n<h2>题12：什么是block</h2><br>Block是C语言的扩充，即带有自动变量的匿名函数，它和普通变量一样，可以作为自动变量，函数参数，静态变量，全局变量。<br>block 本质应该是一个函数指针加上一个对应捕获上下文变量的内存块（结构体或者类），之前用宏语法糖封装了一个GCD用在Windows开发上<br><br>参考链接：<br><a href=\"https://www.jianshu.com/p/cf61bfad211a\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/cf61bfad211a</a><br><br><h2>题13：iOS中常用的数据存储方式</h2>\n\n<h2>题14：ios中沙盒的目录结构是怎么样的？</h2><br>4、AppName.app 目录：这是应用程序的程序包目录，包含应用程序的本身。由于应用程序必须经过签名，所以您在运行时不能对这个目录中的内容进行修改，否则可能会使应用程序无法启动。<br><br>1、Documents 目录：您应该将所有的应用程序数据文件写入到这个目录下。这个目录用于存储用户数据。该路径可通过配置实现iTunes共享文件。可被iTunes备份。<br>2、Library 目录：这个目录下有两个子目录：<br>    Preferences 目录：包含应用程序的偏好设置文件。您不应该直接创建偏好设置文件，而是应该使用NSUserDefaults类来取得和设置应用程序的偏好.<br>    Caches 目录：用于存放应用程序专用的支持文件，保存应用程序再次启动过程中需要的信息。<br>    可创建子文件夹。可以用来放置您希望被备份但不希望被用户看到的数据。该路径下的文件夹，除Caches以外，都会被iTunes备份。<br>3、tmp 目录：这个目录用于存放临时文件，保存应用程序再次启动过程中不需要的信息。该路径下的文件不会被iTunes备份。<br><br><h2>题15：iOS多线程技术有哪几种方式？</h2><br>GCD和NSOperation的区别<br><br><h2>题16：什么是TCP/UDP ：TCP (Transmission Control Protocol)， UDP(User Datagram Protocol)</h2><br>1）TCP和UDP协议属于传输层协议。<br>2）TCP提供IP环境下的数据可靠传输，它提供的服务包括数据流传送、可靠性、有效流控、全双工操作和多路复用。 通过面向连接、端到端和可靠的数据包发送。通俗说，它是事先为所发送的数据开辟出连接好的通道，然后再进行数据发送； | 可靠、有效流控、全双工、多路复用、【通过面向链接】<br>2）UDP则不为IP提供可靠性、流控或差错恢复功能。 | 不可靠、块数据、没有差错恢复<br>3）一般来说，TCP对应的是可靠性要求高的应用，而UDP对应的则是可靠性要求低、传输经济的应用。TCP支持的应用协议主要有：Telnet、FTP、SMTP等；UDP支持的应用层协议主要有：NFS（网络文件系统）、SNMP（简单网络管理协议）、DNS（主域名称系统）、TFTP（通用文件传输协议）等。<br><br><h2>题17：介绍一下XMPP</h2><br>XMPP （Extensible Messaging and Presense Protocol 前称：Jabber）协议： 可拓展消息处理现场协议是基于可拓展标记语言（XML）胡近端串流式即时通讯协议。它将现场肯上下文敏感信息标记嵌入到XML结构化数据中，使得人与人之间、应用系统之间以及人与应用系统之间能即时通讯。XMPP是基于XML架构的开放式协议。<br><br>PS:感觉消耗数据比较大。<br><br><h2>题18：使用伪代码写一个线程安全的单例</h2><br>static AccountManager <em>sharedAccountManagerInstance = nil;<br>+ (AccountManager </em>)sharedManager {<br>    static dispatch_once_t predicate; dispatch_once(&amp;predicate, ^{<br>          sharedAccountManagerInstance = [[AccountManager alloc] init];<br>    });<br>    return sharedAccountManagerInstance;<br>}<br><br><h2>题19：请简单介绍一下APNS发送系统消息机制 </h2><br><img src=\"../../../../asset/Snip20190217_2.png\" alt=\"面试\" title=\"APNS 结构图\"><br>key: 厘清iOS系统、App、APNS（apple push notification service）服务器以及app对应的客户端关系。<br>1）App想iOS系统申请远程消息推送权限，这个与本地消息推送的注册通知是一样的。<br>2）iOS系统向APNS服务器请求手机端的DeviceToken并且告诉App，允许接受推送的通知。<br>3）App接收到deviceToken<br>4）App将受到的DeviceToken传给app对应的服务器端。<br>|| 下面是推送的过程<br>5）远程消息由app对应的服务器端产生，它会先经过APNs服务器<br>6）Apns 服务器将远程通知推送到响应的手机<br>7）根据对应的deviceToken，通知会推送到指定的手机。<br><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// iOS8 下需要使用新的 API</span><br><span class=\"line\">    if ([[[UIDevice currentDevice] systemVersion] floatValue] &gt;= 8.0) &#123;</span><br><span class=\"line\">        UIUserNotificationType myTypes = UIUserNotificationTypeBadge | UIUserNotificationTypeSound | UIUserNotificationTypeAlert;</span><br><span class=\"line\"></span><br><span class=\"line\">        UIUserNotificationSettings *settings = [UIUserNotificationSettings settingsForTypes:myTypes categories:nil];</span><br><span class=\"line\">        [[UIApplication sharedApplication] registerUserNotificationSettings:settings];</span><br><span class=\"line\">    &#125;else &#123;</span><br><span class=\"line\">        UIRemoteNotificationType myTypes = UIRemoteNotificationTypeBadge|UIRemoteNotificationTypeAlert|UIRemoteNotificationTypeSound;</span><br><span class=\"line\">        [[UIApplication sharedApplication] registerForRemoteNotificationTypes:myTypes];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    #warning 测试 开发环境 时需要修改BPushMode为BPushModeDevelopment 需要修改Apikey为自己的Apikey</span><br><span class=\"line\">    </span><br><span class=\"line\">    // 在 App 启动时注册百度云推送服务，需要提供 Apikey</span><br><span class=\"line\">    [BPush registerChannel:launchOptions apiKey:&lt;#在百度云推送官网上注册后得到的apikey#&gt; pushMode:BPushModeDevelopment withFirstAction:nil withSecondAction:nil withCategory:nil isDebug:YES];</span><br><span class=\"line\"></span><br><span class=\"line\">    // 在 iOS8 系统中，还需要添加这个方法。通过新的 API 注册推送服务</span><br><span class=\"line\">- (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [application registerForRemoteNotifications];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSLog(@&quot;test:%@&quot;,deviceToken);</span><br><span class=\"line\">    [BPush registerDeviceToken:deviceToken];</span><br><span class=\"line\">    [BPush bindChannelWithCompleteHandler:nil];   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 当 DeviceToken 获取失败时，系统会回调此方法</span><br><span class=\"line\">- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSLog(@&quot;DeviceToken 获取失败，原因：%@&quot;,error);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><br><h2>题20：框架库构建： 你实现过一个框架或者库以供别人使用，如果有，请谈一下框架或者库时候的经验，如果没有，请设想和设计框架的public的API，并且指出大概需要如何做，需要注意一些什么方面，来使别人更加容易使用？ </h2>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>一些面试题的整合</p>\n<h2>题1： #include和#import 有什么区别？#import &lt;&gt; 和#import “” 有什么区别，@class？</h2><br>1.1：<br>#import &lt;&gt; 对系统自带库或者第三方静态库头文件【编译为&lt;&gt;的形式】的应引用，编译器会在系统文件目录下查找这个文件；其实系统库也可以使用””，而使用&lt;&gt;比较省时。<br>#import “” 首先在用户目录下查找，然后到安装目录中查找，最后到系统文件目录总查找。<br><br>1.2：<br>#include 是对文件简单的拷贝到当前文件中，可能重复引用以及嵌套引用【交叉编译（你中有我，我中有你）】，oc中没有这种方式引入头文件了。统一使用#import，C中#include需要用到头文件保护，参考<a href=\"https://www.2cto.com/kf/201212/176881.html\" target=\"_blank\" rel=\"noopener\">https://www.2cto.com/kf/201212/176881.html</a>  <a href=\"http://www.cnblogs.com/clover-toeic/p/3851102.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/clover-toeic/p/3851102.html</a><br>#import 是#include的曾庆版本，防止同一个文件被多次包含【不会交叉编译】。<br>        会包含这个类的所有信息，包含实体变量和方法。<br><br>1.3： #import与@class区别<br>1.3.1<br>#import会将此类的所有文件全部导入，包括实例变量和方法。<br>@class只是告诉编译器有这么一个类，引用类名，至于这些类是如何定义实现的不去考虑，一般用在.h文件的@interface之前。<br><br>1.3.2: 在头文件中，<br>@class一般用于头文件中需要声明该类的某个实例变量的时候，此时只需要@class类名即可，不需要知道其内部的实体变量和方法。<br>而在.m文件里面，如果会用到这个引用类的内部的实例变量和方法，就需要使用#import来包含这个被引用类的头文件，这时候才包含了这个被引用的类的所有信息。<br><br>1.3.3: 为什么不直接在头文件中直接#import呢?<br>如果有一个头文件a.h，在其他大量头文件中都需要引用头文件a.h，如果使用的是#import，那么当a.h中有了一点改动时，其他包含a.h的头文件都需要重新编译，这将耗费大量的时间，降低了开发效率。<br>而如果在需要的时候使用的是@class，当a.h中有了一点改动时，由于其他头文件并没有将a.h的内容包含进来，就不用重新编译，提高了开发效率。<br><br>1.3.4: 还有一个用法会引起编译错误的就是在a.h中#import ‘’b.h‘’ 在b.h中#import ‘’a.h‘’那么在编译的时候也会出现错误。<br><br>4.什么时候该用@class，什么时候需要用#import呢？<br>（1）一般如果有继承关系的用#import，如Ｂ是Ａ的子类那么在Ｂ中声明Ａ时用#import。<br>（2）如果有循环依赖关系，如:A–&gt;B, B–&gt;A这样的相互依赖关系，如果使用#import来相互包含，那么就会出现编译错误，如果使用@class在两个类的头文件中相互声明，则不会有编译错误出现. @class指令只是告诉编译器，这是个类，保留个空间来存放指针就可以了。<br>（3）还有就是自定义代理的时候，如果在头文件中想声明遵循代理，遵循协议的时候应该用#import导入文件，不然的话会出错误。（delegate还不太清楚，正在学习和实践）<br>（4）使用有Category的类，要在.h头文件里用#import把Category包含进来。<br><br>&gt;&gt;PS:<br>1.能使用#import的地方就不要使用#inlclude<br>2.使用#import不管你对一个文件同时包含了多少次，最终只会包含一次<br>3.在头文件中如果没有用到包含类的实现方法，只需要知道它是一个类时，@就应该使用@class，而不是#import。如果需要使用类的一些方法时，则需要使用#import。<br>4.能使用@class的地方就不要使用#import<br><br>有关参考可以查看文章： c语言的预处理 参考链接：<a href=\"https://helinyu.github.io/2019/02/16/C-%E9%A2%84%E5%A4%84%E7%90%86/\" target=\"_blank\" rel=\"noopener\">https://helinyu.github.io/2019/02/16/C-%E9%A2%84%E5%A4%84%E7%90%86/</a><br><br><h2>题1扩展：多用类型变量，少用#define预处理命令</h2><br>1）不要用预处理指令定义常量，这样定义出来的常量不含类型信息，编译器只是会在编译钱据此执行查找预知替换操作。 【原因】及时有人重新定义了常量值，编译器也不会产生警告信息，这将导致应用程序中常量值不一致。<br>2）在实现文件中是先用static const来定义“值在编译单元内可见的变量”。由于此类常量不在全局符号表中，所以无需为其名称家前缀。 这种方式比宏定义多了一个类型信息。<br>3）在头文件中使用extern来声明常量，并在相关实现文件中定义其值。这种常量要出现在全局符号表中，所以，其名称英加以区隔，通常用与之相关的类名做前缀。<br>详细了解：<br><br><h2>题2：ios中frame和bounds有什么区别？</h2><br><a href=\"https://www.jianshu.com/p/964313cfbdaa\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/964313cfbdaa</a><br><br><br><h2>题3：（iOS）设计模式是什么？你知道哪些设计模式？并且简要阐述 </h2><br>工厂模式、单例模式、代理模式、享元模式、责任链模式、观察者模式<br><br><br><h2>题4：MVC和MVVM的区别？以及mvp </h2><br>【开发者遇到瓶颈：需要去查看设计模式，架构】相当于建筑的脚手架<br>1）代码均摊，代码维护以及管理，更加的有层次感<br>2）便于测试， 测试确保代码质量， eg：单元测试、性能测试、UI测试<br>    App架构的合理分配决定了各个测试能够使各个测试能够各司其职，不重复、不遗漏，让测试效率和覆盖率到最大。<br>3）具有易用性， 确保后来的各种需求，同时新人加入更加容易学习。<br>目前流行的架构有：mvc ,mvp, mvcs, mvvm, viper<br><br>1.MVC<br>苹果官方的MVC架构的优点和缺点：<br>优点：<br>1） 代码总量少<br>2）简单易懂<br>缺点：<br>1）代码过于集中<br>2）难以进行测试<br>3）难以扩展<br>4）Model层国语简单<br>5）网络请求逻辑无从安放<br>总之： mvc的代码过于笼统； 对于任何一个类或者结构体，只要不是数据和视图，就被放在控制器一层。ViewController耦合了视图和控制器，天生缺点。<br><br>2、MVCS<br>针对MVC进行的优化，S（store）存储， 这部分单独从Model或者ViewController中拆分出来构成单独的文件。<br><br>MVC缺点是网络层无处安放，其实mvcs可以把网络层放在S层中，网络请求也是为了获得数据，而且一般API请求之后，数据进行缓存和持久化处理，所以存放在数据层比较合理。<br>PS : 更加细致，更加容易测试<br><br>3、MVVM<br>主要是VM（ViewModel）<br>扮演的角色：<br>1）视图层的真正数据提供者；<br>    一般视图层展示的数据经常是一个或是多个模型的属性组合。<br>    eg： 可能一个视频要展示很多不同数据结构的数据，这个时候就需要ViewModel进行对数据的整合。<br>2）视图层的交互响应者。所有用户的交互都会传递给ViewModel，ViewModel会依次更新视图需要的属性，同时相应修改模型层的数据。这里依靠的是属性观察者或相应架构。<br><img src=\"../../../../asset/Snip20190217_1.png\" alt=\"架构\" title=\"MVVM的总体架构\"><br>记住： VM：View拥有V；然后数据绑定，View的交互响应者<br>      VM：拥有和更新M，M数据更新需要通知VM， 然后VM更新View。<br><br>MVVM和MVC最大的区别是：数据双向的绑定。<br><br>MVC、MVVM、MVVP的缺点是：没有涉及到路由的设计。<br><br>还有其他的设计模式。。。。。。<br><br><h2>题5：Objective-C的类可以多重继承么？可以实现多个接口么？category是什么？重写一个类的方式是继承还是分类好？为什么？ </h2><br>1）OC不支持多重继承  ； 由于消息机制名字查找发生在运行时而非编译时，很难解决多个基类可能导致的二义性问题。<br>【当单继承不够用，很难为问题域建模时，我们通常都会直接想到多继承。多继承是从多个直接基类派生类的能力，可以更加直接地为应用程序建模。】<br>iOS实现“多继承”的方式（简介实现多继承目的）： <a href=\"https://www.jianshu.com/p/c473b41c083d\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/c473b41c083d</a><br>消息转发机制， 实现多借口，<br><br>2）可以实现多个接口，，<br>3）Category是oc的一种类的扩展机制； 主要是为已存在的类添加方法。<br>4）单纯添加方法： 使用分类 ， 如果有属性等，可以使用继承关系。<br>    已经存在的类，可以使用功能分类来进行处理，不改变原来的类。<br><br>扩展：（匿名分类）可以定义属性 ，<br>category： 不可以定义属性，只是可以声明属性。<br><br><br><h2>题6：HTTP中GET与POST 的区别</h2><br>key： 方向，类型，参数位置<br>GET： 【方向】从服务器获取信息；【类型】处理静态和动态的内容；【参数位置】GET的参数在其URI中； 被缓存，可以被存储在浏览器的历史中，器内容从理论上有长度限制<br>POST: 【方向】向服务器发送消息，【类型】只是处理动态内容，【参数位置】POST参数在其包体里，参数角度看，POST比GET更加安全，隐秘； POST 在这三个方面恰恰相反。<br><br>扩展到： https ，tcp，以及dup的内容<br><br><br><h2>题7：常见的OC的数据类型有哪些？和C的基本数据类型有什么区别？eg：NSInteger和Int</h2>\n\n\n<h2>题8：objective-C如何对内容进行管理的，说说你的看法和解决</h2>\n\n<p>『扩展』：开发中如何检查内存泄露的？</p>\n<h2>题9：OC创建线程的方法是什么？如果在主线程中执行代码，方法是什么？如果想延时执行代码、方法是什么？</h2>\n\n<h2>题10：ViewController的生命周期</h2>\n\n<h2>题11：Delegate和notification有什么区别？</h2>\n\n<h2>题12：什么是block</h2><br>Block是C语言的扩充，即带有自动变量的匿名函数，它和普通变量一样，可以作为自动变量，函数参数，静态变量，全局变量。<br>block 本质应该是一个函数指针加上一个对应捕获上下文变量的内存块（结构体或者类），之前用宏语法糖封装了一个GCD用在Windows开发上<br><br>参考链接：<br><a href=\"https://www.jianshu.com/p/cf61bfad211a\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/cf61bfad211a</a><br><br><h2>题13：iOS中常用的数据存储方式</h2>\n\n<h2>题14：ios中沙盒的目录结构是怎么样的？</h2><br>4、AppName.app 目录：这是应用程序的程序包目录，包含应用程序的本身。由于应用程序必须经过签名，所以您在运行时不能对这个目录中的内容进行修改，否则可能会使应用程序无法启动。<br><br>1、Documents 目录：您应该将所有的应用程序数据文件写入到这个目录下。这个目录用于存储用户数据。该路径可通过配置实现iTunes共享文件。可被iTunes备份。<br>2、Library 目录：这个目录下有两个子目录：<br>    Preferences 目录：包含应用程序的偏好设置文件。您不应该直接创建偏好设置文件，而是应该使用NSUserDefaults类来取得和设置应用程序的偏好.<br>    Caches 目录：用于存放应用程序专用的支持文件，保存应用程序再次启动过程中需要的信息。<br>    可创建子文件夹。可以用来放置您希望被备份但不希望被用户看到的数据。该路径下的文件夹，除Caches以外，都会被iTunes备份。<br>3、tmp 目录：这个目录用于存放临时文件，保存应用程序再次启动过程中不需要的信息。该路径下的文件不会被iTunes备份。<br><br><h2>题15：iOS多线程技术有哪几种方式？</h2><br>GCD和NSOperation的区别<br><br><h2>题16：什么是TCP/UDP ：TCP (Transmission Control Protocol)， UDP(User Datagram Protocol)</h2><br>1）TCP和UDP协议属于传输层协议。<br>2）TCP提供IP环境下的数据可靠传输，它提供的服务包括数据流传送、可靠性、有效流控、全双工操作和多路复用。 通过面向连接、端到端和可靠的数据包发送。通俗说，它是事先为所发送的数据开辟出连接好的通道，然后再进行数据发送； | 可靠、有效流控、全双工、多路复用、【通过面向链接】<br>2）UDP则不为IP提供可靠性、流控或差错恢复功能。 | 不可靠、块数据、没有差错恢复<br>3）一般来说，TCP对应的是可靠性要求高的应用，而UDP对应的则是可靠性要求低、传输经济的应用。TCP支持的应用协议主要有：Telnet、FTP、SMTP等；UDP支持的应用层协议主要有：NFS（网络文件系统）、SNMP（简单网络管理协议）、DNS（主域名称系统）、TFTP（通用文件传输协议）等。<br><br><h2>题17：介绍一下XMPP</h2><br>XMPP （Extensible Messaging and Presense Protocol 前称：Jabber）协议： 可拓展消息处理现场协议是基于可拓展标记语言（XML）胡近端串流式即时通讯协议。它将现场肯上下文敏感信息标记嵌入到XML结构化数据中，使得人与人之间、应用系统之间以及人与应用系统之间能即时通讯。XMPP是基于XML架构的开放式协议。<br><br>PS:感觉消耗数据比较大。<br><br><h2>题18：使用伪代码写一个线程安全的单例</h2><br>static AccountManager <em>sharedAccountManagerInstance = nil;<br>+ (AccountManager </em>)sharedManager {<br>    static dispatch_once_t predicate; dispatch_once(&amp;predicate, ^{<br>          sharedAccountManagerInstance = [[AccountManager alloc] init];<br>    });<br>    return sharedAccountManagerInstance;<br>}<br><br><h2>题19：请简单介绍一下APNS发送系统消息机制 </h2><br><img src=\"../../../../asset/Snip20190217_2.png\" alt=\"面试\" title=\"APNS 结构图\"><br>key: 厘清iOS系统、App、APNS（apple push notification service）服务器以及app对应的客户端关系。<br>1）App想iOS系统申请远程消息推送权限，这个与本地消息推送的注册通知是一样的。<br>2）iOS系统向APNS服务器请求手机端的DeviceToken并且告诉App，允许接受推送的通知。<br>3）App接收到deviceToken<br>4）App将受到的DeviceToken传给app对应的服务器端。<br>|| 下面是推送的过程<br>5）远程消息由app对应的服务器端产生，它会先经过APNs服务器<br>6）Apns 服务器将远程通知推送到响应的手机<br>7）根据对应的deviceToken，通知会推送到指定的手机。<br><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// iOS8 下需要使用新的 API</span><br><span class=\"line\">    if ([[[UIDevice currentDevice] systemVersion] floatValue] &gt;= 8.0) &#123;</span><br><span class=\"line\">        UIUserNotificationType myTypes = UIUserNotificationTypeBadge | UIUserNotificationTypeSound | UIUserNotificationTypeAlert;</span><br><span class=\"line\"></span><br><span class=\"line\">        UIUserNotificationSettings *settings = [UIUserNotificationSettings settingsForTypes:myTypes categories:nil];</span><br><span class=\"line\">        [[UIApplication sharedApplication] registerUserNotificationSettings:settings];</span><br><span class=\"line\">    &#125;else &#123;</span><br><span class=\"line\">        UIRemoteNotificationType myTypes = UIRemoteNotificationTypeBadge|UIRemoteNotificationTypeAlert|UIRemoteNotificationTypeSound;</span><br><span class=\"line\">        [[UIApplication sharedApplication] registerForRemoteNotificationTypes:myTypes];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    #warning 测试 开发环境 时需要修改BPushMode为BPushModeDevelopment 需要修改Apikey为自己的Apikey</span><br><span class=\"line\">    </span><br><span class=\"line\">    // 在 App 启动时注册百度云推送服务，需要提供 Apikey</span><br><span class=\"line\">    [BPush registerChannel:launchOptions apiKey:&lt;#在百度云推送官网上注册后得到的apikey#&gt; pushMode:BPushModeDevelopment withFirstAction:nil withSecondAction:nil withCategory:nil isDebug:YES];</span><br><span class=\"line\"></span><br><span class=\"line\">    // 在 iOS8 系统中，还需要添加这个方法。通过新的 API 注册推送服务</span><br><span class=\"line\">- (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [application registerForRemoteNotifications];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSLog(@&quot;test:%@&quot;,deviceToken);</span><br><span class=\"line\">    [BPush registerDeviceToken:deviceToken];</span><br><span class=\"line\">    [BPush bindChannelWithCompleteHandler:nil];   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 当 DeviceToken 获取失败时，系统会回调此方法</span><br><span class=\"line\">- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSLog(@&quot;DeviceToken 获取失败，原因：%@&quot;,error);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><br><h2>题20：框架库构建： 你实现过一个框架或者库以供别人使用，如果有，请谈一下框架或者库时候的经验，如果没有，请设想和设计框架的public的API，并且指出大概需要如何做，需要注意一些什么方面，来使别人更加容易使用？ </h2>\n\n\n\n"},{"title":"ios unit test","date":"2018-09-28T11:16:43.000Z","_content":"\n\n\n<h3>iOS单元测试是为了什么？</h3>\n代码的终极目标有两个：\n\t1）第一个是实现需求\n\t2）第二个是提高代码质量和可维护性。【单元测试是维护代码质量和可维护性的一种方法】\n\n单元测试的威力更多不是体现在新代码的编写上，而是对已有代码的更改\n单元测试是检查代码粒度的bug（一般是以函数和对象的方法为粒度）\n\n\n\n<h3>iOS上的基本测试</h3>\n\t1）测试接口的逻辑，这个过程应该尽可能的考虑方位和一些特殊的情况，对于用例里面的每个接口；\n\teg： 在ViewController里面写了一个方法的代码\n\t```\n\t\t- (NSInteger)custom1 {\n\t\t    return arc4random() % 100;\n\t\t}\n\n\t```\n\t下面是基本的测试代码：\n\t\t在UnitTests.m 文件里面写对应的代码，\n\t```\n\t\t- (void)testPerformanceExample {\n\t\t    // This is an example of a performance test case.\n\t\t    \n\t\t    NSInteger result = [self->_vc custom1];\n\t\t    NSLog(@\"reuslt ;%zd\",result);\n\t\t    NSAssert(result >10, @\"获取的数据只能够大于10才可以\");\n\t\t    \n\t\t    [self measureBlock:^{\n\t\t        // Put the code you want to measure the time of here.\n\t\t      \n\t\t        NSInteger result = [self->_vc custom1];\n\t\t        NSLog(@\"reuslt ;%zd\",result);\n\t\t        // 执行的性能\n\t\t    }];\n\t\t}\n\n\t```\n\t执行cmd+u 执行测试的代码，\n\tcmd +5 查看对应的信息。\n\n\n\n\n<h3>性能问题:（对代码执行的时间性能进行控制）</h3>\n![性能测试](../../../../asset/Snip20180928_95.png)\n置baseline（基准）和stddev（标准偏差）\n\n\n\n\n<参考链接：>\nhttp://www.cocoachina.com/ios/20170426/19129.html\nhttp://liuyanwei.jumppo.com/2016/03/10/iOS-unit-test.html\nhttp://xwartz.xyz/blog/2016/11/testing-a-react-native-app/\n\n\n\n\n","source":"_posts/ios-unit-test.md","raw":"---\ntitle: ios unit test\ndate: 2018-09-28 19:16:43\ntags: oc\ncategories: iOS\n---\n\n\n\n<h3>iOS单元测试是为了什么？</h3>\n代码的终极目标有两个：\n\t1）第一个是实现需求\n\t2）第二个是提高代码质量和可维护性。【单元测试是维护代码质量和可维护性的一种方法】\n\n单元测试的威力更多不是体现在新代码的编写上，而是对已有代码的更改\n单元测试是检查代码粒度的bug（一般是以函数和对象的方法为粒度）\n\n\n\n<h3>iOS上的基本测试</h3>\n\t1）测试接口的逻辑，这个过程应该尽可能的考虑方位和一些特殊的情况，对于用例里面的每个接口；\n\teg： 在ViewController里面写了一个方法的代码\n\t```\n\t\t- (NSInteger)custom1 {\n\t\t    return arc4random() % 100;\n\t\t}\n\n\t```\n\t下面是基本的测试代码：\n\t\t在UnitTests.m 文件里面写对应的代码，\n\t```\n\t\t- (void)testPerformanceExample {\n\t\t    // This is an example of a performance test case.\n\t\t    \n\t\t    NSInteger result = [self->_vc custom1];\n\t\t    NSLog(@\"reuslt ;%zd\",result);\n\t\t    NSAssert(result >10, @\"获取的数据只能够大于10才可以\");\n\t\t    \n\t\t    [self measureBlock:^{\n\t\t        // Put the code you want to measure the time of here.\n\t\t      \n\t\t        NSInteger result = [self->_vc custom1];\n\t\t        NSLog(@\"reuslt ;%zd\",result);\n\t\t        // 执行的性能\n\t\t    }];\n\t\t}\n\n\t```\n\t执行cmd+u 执行测试的代码，\n\tcmd +5 查看对应的信息。\n\n\n\n\n<h3>性能问题:（对代码执行的时间性能进行控制）</h3>\n![性能测试](../../../../asset/Snip20180928_95.png)\n置baseline（基准）和stddev（标准偏差）\n\n\n\n\n<参考链接：>\nhttp://www.cocoachina.com/ios/20170426/19129.html\nhttp://liuyanwei.jumppo.com/2016/03/10/iOS-unit-test.html\nhttp://xwartz.xyz/blog/2016/11/testing-a-react-native-app/\n\n\n\n\n","slug":"ios-unit-test","published":1,"updated":"2018-09-28T12:15:35.714Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclk001dqioj6dfwj0xi","content":"<p></p><h3>iOS单元测试是为了什么？</h3><br>代码的终极目标有两个：<br>    1）第一个是实现需求<br>    2）第二个是提高代码质量和可维护性。【单元测试是维护代码质量和可维护性的一种方法】<p></p>\n<p>单元测试的威力更多不是体现在新代码的编写上，而是对已有代码的更改<br>单元测试是检查代码粒度的bug（一般是以函数和对象的方法为粒度）</p>\n<p></p><h3>iOS上的基本测试</h3><br>    1）测试接口的逻辑，这个过程应该尽可能的考虑方位和一些特殊的情况，对于用例里面的每个接口；<br>    eg： 在ViewController里面写了一个方法的代码<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (NSInteger)custom1 &#123;</span><br><span class=\"line\">    return arc4random() % 100;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p></p>\n<pre><code>下面是基本的测试代码：\n    在UnitTests.m 文件里面写对应的代码，\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)testPerformanceExample &#123;</span><br><span class=\"line\">    // This is an example of a performance test case.</span><br><span class=\"line\">    </span><br><span class=\"line\">    NSInteger result = [self-&gt;_vc custom1];</span><br><span class=\"line\">    NSLog(@&quot;reuslt ;%zd&quot;,result);</span><br><span class=\"line\">    NSAssert(result &gt;10, @&quot;获取的数据只能够大于10才可以&quot;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    [self measureBlock:^&#123;</span><br><span class=\"line\">        // Put the code you want to measure the time of here.</span><br><span class=\"line\">      </span><br><span class=\"line\">        NSInteger result = [self-&gt;_vc custom1];</span><br><span class=\"line\">        NSLog(@&quot;reuslt ;%zd&quot;,result);</span><br><span class=\"line\">        // 执行的性能</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n执行cmd+u 执行测试的代码，\ncmd +5 查看对应的信息。\n</code></pre><p></p><h3>性能问题:（对代码执行的时间性能进行控制）</h3><br><img src=\"../../../../asset/Snip20180928_95.png\" alt=\"性能测试\"><br>置baseline（基准）和stddev（标准偏差）<p></p>\n<p>&lt;参考链接：&gt;<br><a href=\"http://www.cocoachina.com/ios/20170426/19129.html\" target=\"_blank\" rel=\"noopener\">http://www.cocoachina.com/ios/20170426/19129.html</a><br><a href=\"http://liuyanwei.jumppo.com/2016/03/10/iOS-unit-test.html\" target=\"_blank\" rel=\"noopener\">http://liuyanwei.jumppo.com/2016/03/10/iOS-unit-test.html</a><br><a href=\"http://xwartz.xyz/blog/2016/11/testing-a-react-native-app/\" target=\"_blank\" rel=\"noopener\">http://xwartz.xyz/blog/2016/11/testing-a-react-native-app/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p></p><h3>iOS单元测试是为了什么？</h3><br>代码的终极目标有两个：<br>    1）第一个是实现需求<br>    2）第二个是提高代码质量和可维护性。【单元测试是维护代码质量和可维护性的一种方法】<p></p>\n<p>单元测试的威力更多不是体现在新代码的编写上，而是对已有代码的更改<br>单元测试是检查代码粒度的bug（一般是以函数和对象的方法为粒度）</p>\n<p></p><h3>iOS上的基本测试</h3><br>    1）测试接口的逻辑，这个过程应该尽可能的考虑方位和一些特殊的情况，对于用例里面的每个接口；<br>    eg： 在ViewController里面写了一个方法的代码<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (NSInteger)custom1 &#123;</span><br><span class=\"line\">    return arc4random() % 100;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p></p>\n<pre><code>下面是基本的测试代码：\n    在UnitTests.m 文件里面写对应的代码，\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)testPerformanceExample &#123;</span><br><span class=\"line\">    // This is an example of a performance test case.</span><br><span class=\"line\">    </span><br><span class=\"line\">    NSInteger result = [self-&gt;_vc custom1];</span><br><span class=\"line\">    NSLog(@&quot;reuslt ;%zd&quot;,result);</span><br><span class=\"line\">    NSAssert(result &gt;10, @&quot;获取的数据只能够大于10才可以&quot;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    [self measureBlock:^&#123;</span><br><span class=\"line\">        // Put the code you want to measure the time of here.</span><br><span class=\"line\">      </span><br><span class=\"line\">        NSInteger result = [self-&gt;_vc custom1];</span><br><span class=\"line\">        NSLog(@&quot;reuslt ;%zd&quot;,result);</span><br><span class=\"line\">        // 执行的性能</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n执行cmd+u 执行测试的代码，\ncmd +5 查看对应的信息。\n</code></pre><p></p><h3>性能问题:（对代码执行的时间性能进行控制）</h3><br><img src=\"../../../../asset/Snip20180928_95.png\" alt=\"性能测试\"><br>置baseline（基准）和stddev（标准偏差）<p></p>\n<p>&lt;参考链接：&gt;<br><a href=\"http://www.cocoachina.com/ios/20170426/19129.html\" target=\"_blank\" rel=\"noopener\">http://www.cocoachina.com/ios/20170426/19129.html</a><br><a href=\"http://liuyanwei.jumppo.com/2016/03/10/iOS-unit-test.html\" target=\"_blank\" rel=\"noopener\">http://liuyanwei.jumppo.com/2016/03/10/iOS-unit-test.html</a><br><a href=\"http://xwartz.xyz/blog/2016/11/testing-a-react-native-app/\" target=\"_blank\" rel=\"noopener\">http://xwartz.xyz/blog/2016/11/testing-a-react-native-app/</a></p>\n"},{"title":"ruby 语言基础","date":"2019-03-02T19:43:27.000Z","_content":"\n\n\n\n【基本的语法复习完成即可(对于web的项目也可以去实现看接下来的安排)】\n\n<h2> 一、ruby语言基础复习 </h2>\n[教程的地址【H看】](http://www.runoob.com/ruby/ruby-tutorial.html)\n\n1、略过  ruby安装不同的平台等环境以及步骤。\n2、中文编码问题,（有可能有些安装环境并没有支持中文编码）\n>可能出现的问题： invalid multibyte char (US-ASCII) \n\nPS： \n>1）设置utf-8解析源码\n2）设置文件编码为utf-8 保存\n```\n#!/usr/bin/ruby -w\n# -*- coding: UTF-8 -*- #  多了上面这一行\nputs \"你好，世界！ssss\";\n```\n3、ruby命令行 【也就是指定ruby脚本可以添加的一些参数】 \n其实和其他命令没有什么差别， \n>ruby [ options ] [.] [ programfile ] [ arguments ... ]\n\n> man ruby  || ruby -h\n\n下面是对应的饿命令参数：\n>-w              turn warnings on for your script [显示出警告的内容]\n\n4、环境变量 env\n> 含义： 环境变量是用来控制ruby解释器来控制它的行为。\n\n终端上输入： env 即可查看当前编译器设置的环境变量列表\n\n5、基本语法（基本约定）：\n1）\n1、1） 空白字符（空格、制表符）【同般】\n1、2）有时用来解释模棱两可的语句 ，启用 -w 会出现警告\n>eg：\na + b 被解释为 a+b （这是一个局部变量）\na  +b 被解释为 a(+b) （这是一个方法调用）\n\n2） ruby 行尾\n2、1）分号和换行 【同般】\n2、2）运算符；eg：+、- 、反斜杠 表示语句延续\n\n3）标示符\n3.1）【同般】 （同一班的语言）大小写敏感\n\n4）保留字\nBEGIN\tdo\t\tnext\t\tthen\nEND\t\telse\t\tnil\t\ttrue\nalias\telsif\t\tnot\t\tundef\nand\t\tend\t\tor\t\tunless\nbegin\tensure\tredo\tuntil\nbreak\tfalse\trescuse\twhen\ncase\tfor\t\tretry\twhile\nclass\tif\t\treturn\twhile\ndef\t\tin \t\tself\t\t__FILE__\ndefined? module\tsuper\t__LINE__\t\n\n5)ruby 中here document（以前没有的概念） ——> 建立多行字符串\n```\nprint <<EOF\n    这是第一种方式创建here document 。\n    多行字符串。\nEOF\n```\n<< 之后，可以制定一个字符串或者标示符来终止， 上面； EOF， \nEOF所有行的字符串就是我们要的值。\n请注意<< 和终止符之间必须没有空格。\n\n6) BEGIN、END 语句\nBEGIN：程序在运行之前被调用\nEND：程序在运行结尾调用\n```\n#!/usr/bin/ruby\nputs \"这是主 Ruby 程序\"\nBEGIN {\n   puts \"初始化 Ruby 程序\"\n}\n\n#!/usr/bin/ruby\n \nputs \"这是主 Ruby 程序\"\n \nEND {\n   puts \"停止 Ruby 程序\"\n}\nBEGIN {\n   puts \"初始化 Ruby 程序\"\n}\n```\n\n8)ruby注释\n【同般】 #开头\n\n6、数据类型 （略过）\n\n7、类和对象 以及类案例   \nruby是完美的面向对象语言\n特征：\n* 数据封装\n* 数据抽象\n* 多态性\n* 继承\n\n\n1)类定义： （同般）\n```\nclass Customer\n.......\n\nend\n```\n\n2）类中变量 （4种）\n2.1）局部变量： 方法中定义的变量，局部变量以小写字母或 _ 开始。（同般）\n2.2）实例变量： 实例变量可以跨任何特定的实例或对象中的方法使用。这意味着，实例变量可以从对象到对象的改变。实例变量在变量名之前放置符号（@）。 【这个不是很理解】\n2.3）类变量：  可以跨不同的对象，(同般) 类变量在变量名之前放置符号（@@）。\n2.4）全局变量：类变量不可以跨类使用， 全局变量可以，全局变量总是以美元符号（$）开始。\n\n3）Ruby 类中的成员函数，函数被称为方法。每个方法是以关键字 def 开始，后跟方法名。\n```\nclass Sample\n   def function\n      statement 1\n      statement 2\n   end\nend\n```\n不错的例子：\n```\n#!/usr/bin/ruby\n\nclass Customer\n   @@no_of_customers=0\n   def initialize(id, name, addr)\n      @cust_id=id\n      @cust_name=name\n      @cust_addr=addr\n   end\n   def display_details()\n      puts \"Customer id #@cust_id\"\n      puts \"Customer name #@cust_name\"\n      puts \"Customer address #@cust_addr\"\n   end\n   def total_no_of_customers()\n      @@no_of_customers += 1\n      puts \"Total number of customers: #@@no_of_customers\"\n   end\nend\n\n# 创建对象\ncust1=Customer.new(\"1\", \"John\", \"Wisdom Apartments, Ludhiya\")\ncust2=Customer.new(\"2\", \"Poul\", \"New Empire road, Khandala\")\n\n# 调用方法\ncust1.display_details()\ncust1.total_no_of_customers()\ncust2.display_details()\ncust2.total_no_of_customers()\n```\n\n\n>变量、运算符、注释、条件判断、循环、方法（略） 【这些都是略过的内容】\n\n8、ruby中的 块\n* 块由大量的代码组成。\n* 您需要给块取个名称。\n* 块中的代码总是包含在大括号 {} 内。\n* 块总是从与其具有相同名称的函数调用。<font color=red>这意味着如果您的块名称为 test，那么您要使用函数 test 来调用这个块。</font>\n* 您可以使用 yield 语句来调用块。\n\n```\nblock_name{\n   statement1\n   statement2\n   ..........\n}\n```\n\n1)\n```\n这样的一个例子：\n#!/usr/bin/ruby\n# -*- coding: UTF-8 -*-\n\ndef test\n   puts \"在 test 方法内\"\n   yield\n   puts \"你又回到了 test 方法内\"\n   yield\nend\ntest {puts \"块内代码执行\"}\n\n|| 上面这个例子，如果将类名字改为test1 ，将会出现错误，或者同时将块的名字test改为test1.\n\n```\n2)\n```\n带有参数：\n#!/usr/bin/ruby\n# -*- coding: UTF-8 -*-\n\ndef test\n   yield 5\n   puts \"在 test 方法内\"\n   yield 100\nend\ntest {|i| puts \"你在块 #{i} 内\"}\n|| yield 语句后跟着参数。您甚至可以传递多个参数。在块中，您可以在两个竖线之间放置一个变量来接受参数。\n|| yield a, b   # 多个参数传递的方式\n   test {|a, b| statement}\n```\n3)块和方法 ：通常使用 yield 语句从与其具有相同名称的方法调用块\n* 如果方法的最后一个参数前带有 &，将向该方法传递一个块，且这个块可被赋给最后一个参数。如果 * 和 & 同时出现在参数列表中，& 应放在后面。\n\n```\n#!/usr/bin/ruby\n\ndef test(&block)\n   block.call\nend\ntest { puts \"Hello World!\"}\n```\n\nps: 块的概念 ——> 代码块(函数的方式调用) ———>  无参数、参数、取地址的方式\n\n9、字符串（略）有关查询可以到菜鸟教程里面\n\n10、数组、哈希、日期、范围（略)\n\n11、迭代器\n\n12、文件的输入和输出\n\n13、file类和方法\n\n14、Dir类和方法\n\n15、异常\n\n<h3>高级内容</h3>\n\n16、面向对象 （基本上看了，但是还没有所有的都理解执行了，明天回来再看一遍）\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/ruby-语言基础.md","raw":"---\ntitle: ruby 语言基础\ndate: 2019-03-03 03:43:27\ntags: ruby\ncategories: 编程语言\n---\n\n\n\n\n【基本的语法复习完成即可(对于web的项目也可以去实现看接下来的安排)】\n\n<h2> 一、ruby语言基础复习 </h2>\n[教程的地址【H看】](http://www.runoob.com/ruby/ruby-tutorial.html)\n\n1、略过  ruby安装不同的平台等环境以及步骤。\n2、中文编码问题,（有可能有些安装环境并没有支持中文编码）\n>可能出现的问题： invalid multibyte char (US-ASCII) \n\nPS： \n>1）设置utf-8解析源码\n2）设置文件编码为utf-8 保存\n```\n#!/usr/bin/ruby -w\n# -*- coding: UTF-8 -*- #  多了上面这一行\nputs \"你好，世界！ssss\";\n```\n3、ruby命令行 【也就是指定ruby脚本可以添加的一些参数】 \n其实和其他命令没有什么差别， \n>ruby [ options ] [.] [ programfile ] [ arguments ... ]\n\n> man ruby  || ruby -h\n\n下面是对应的饿命令参数：\n>-w              turn warnings on for your script [显示出警告的内容]\n\n4、环境变量 env\n> 含义： 环境变量是用来控制ruby解释器来控制它的行为。\n\n终端上输入： env 即可查看当前编译器设置的环境变量列表\n\n5、基本语法（基本约定）：\n1）\n1、1） 空白字符（空格、制表符）【同般】\n1、2）有时用来解释模棱两可的语句 ，启用 -w 会出现警告\n>eg：\na + b 被解释为 a+b （这是一个局部变量）\na  +b 被解释为 a(+b) （这是一个方法调用）\n\n2） ruby 行尾\n2、1）分号和换行 【同般】\n2、2）运算符；eg：+、- 、反斜杠 表示语句延续\n\n3）标示符\n3.1）【同般】 （同一班的语言）大小写敏感\n\n4）保留字\nBEGIN\tdo\t\tnext\t\tthen\nEND\t\telse\t\tnil\t\ttrue\nalias\telsif\t\tnot\t\tundef\nand\t\tend\t\tor\t\tunless\nbegin\tensure\tredo\tuntil\nbreak\tfalse\trescuse\twhen\ncase\tfor\t\tretry\twhile\nclass\tif\t\treturn\twhile\ndef\t\tin \t\tself\t\t__FILE__\ndefined? module\tsuper\t__LINE__\t\n\n5)ruby 中here document（以前没有的概念） ——> 建立多行字符串\n```\nprint <<EOF\n    这是第一种方式创建here document 。\n    多行字符串。\nEOF\n```\n<< 之后，可以制定一个字符串或者标示符来终止， 上面； EOF， \nEOF所有行的字符串就是我们要的值。\n请注意<< 和终止符之间必须没有空格。\n\n6) BEGIN、END 语句\nBEGIN：程序在运行之前被调用\nEND：程序在运行结尾调用\n```\n#!/usr/bin/ruby\nputs \"这是主 Ruby 程序\"\nBEGIN {\n   puts \"初始化 Ruby 程序\"\n}\n\n#!/usr/bin/ruby\n \nputs \"这是主 Ruby 程序\"\n \nEND {\n   puts \"停止 Ruby 程序\"\n}\nBEGIN {\n   puts \"初始化 Ruby 程序\"\n}\n```\n\n8)ruby注释\n【同般】 #开头\n\n6、数据类型 （略过）\n\n7、类和对象 以及类案例   \nruby是完美的面向对象语言\n特征：\n* 数据封装\n* 数据抽象\n* 多态性\n* 继承\n\n\n1)类定义： （同般）\n```\nclass Customer\n.......\n\nend\n```\n\n2）类中变量 （4种）\n2.1）局部变量： 方法中定义的变量，局部变量以小写字母或 _ 开始。（同般）\n2.2）实例变量： 实例变量可以跨任何特定的实例或对象中的方法使用。这意味着，实例变量可以从对象到对象的改变。实例变量在变量名之前放置符号（@）。 【这个不是很理解】\n2.3）类变量：  可以跨不同的对象，(同般) 类变量在变量名之前放置符号（@@）。\n2.4）全局变量：类变量不可以跨类使用， 全局变量可以，全局变量总是以美元符号（$）开始。\n\n3）Ruby 类中的成员函数，函数被称为方法。每个方法是以关键字 def 开始，后跟方法名。\n```\nclass Sample\n   def function\n      statement 1\n      statement 2\n   end\nend\n```\n不错的例子：\n```\n#!/usr/bin/ruby\n\nclass Customer\n   @@no_of_customers=0\n   def initialize(id, name, addr)\n      @cust_id=id\n      @cust_name=name\n      @cust_addr=addr\n   end\n   def display_details()\n      puts \"Customer id #@cust_id\"\n      puts \"Customer name #@cust_name\"\n      puts \"Customer address #@cust_addr\"\n   end\n   def total_no_of_customers()\n      @@no_of_customers += 1\n      puts \"Total number of customers: #@@no_of_customers\"\n   end\nend\n\n# 创建对象\ncust1=Customer.new(\"1\", \"John\", \"Wisdom Apartments, Ludhiya\")\ncust2=Customer.new(\"2\", \"Poul\", \"New Empire road, Khandala\")\n\n# 调用方法\ncust1.display_details()\ncust1.total_no_of_customers()\ncust2.display_details()\ncust2.total_no_of_customers()\n```\n\n\n>变量、运算符、注释、条件判断、循环、方法（略） 【这些都是略过的内容】\n\n8、ruby中的 块\n* 块由大量的代码组成。\n* 您需要给块取个名称。\n* 块中的代码总是包含在大括号 {} 内。\n* 块总是从与其具有相同名称的函数调用。<font color=red>这意味着如果您的块名称为 test，那么您要使用函数 test 来调用这个块。</font>\n* 您可以使用 yield 语句来调用块。\n\n```\nblock_name{\n   statement1\n   statement2\n   ..........\n}\n```\n\n1)\n```\n这样的一个例子：\n#!/usr/bin/ruby\n# -*- coding: UTF-8 -*-\n\ndef test\n   puts \"在 test 方法内\"\n   yield\n   puts \"你又回到了 test 方法内\"\n   yield\nend\ntest {puts \"块内代码执行\"}\n\n|| 上面这个例子，如果将类名字改为test1 ，将会出现错误，或者同时将块的名字test改为test1.\n\n```\n2)\n```\n带有参数：\n#!/usr/bin/ruby\n# -*- coding: UTF-8 -*-\n\ndef test\n   yield 5\n   puts \"在 test 方法内\"\n   yield 100\nend\ntest {|i| puts \"你在块 #{i} 内\"}\n|| yield 语句后跟着参数。您甚至可以传递多个参数。在块中，您可以在两个竖线之间放置一个变量来接受参数。\n|| yield a, b   # 多个参数传递的方式\n   test {|a, b| statement}\n```\n3)块和方法 ：通常使用 yield 语句从与其具有相同名称的方法调用块\n* 如果方法的最后一个参数前带有 &，将向该方法传递一个块，且这个块可被赋给最后一个参数。如果 * 和 & 同时出现在参数列表中，& 应放在后面。\n\n```\n#!/usr/bin/ruby\n\ndef test(&block)\n   block.call\nend\ntest { puts \"Hello World!\"}\n```\n\nps: 块的概念 ——> 代码块(函数的方式调用) ———>  无参数、参数、取地址的方式\n\n9、字符串（略）有关查询可以到菜鸟教程里面\n\n10、数组、哈希、日期、范围（略)\n\n11、迭代器\n\n12、文件的输入和输出\n\n13、file类和方法\n\n14、Dir类和方法\n\n15、异常\n\n<h3>高级内容</h3>\n\n16、面向对象 （基本上看了，但是还没有所有的都理解执行了，明天回来再看一遍）\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"ruby-语言基础","published":1,"updated":"2019-03-06T04:38:24.158Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcll001hqioj9tle3b7c","content":"<p>【基本的语法复习完成即可(对于web的项目也可以去实现看接下来的安排)】</p>\n<p></p><h2> 一、ruby语言基础复习 </h2><br><a href=\"http://www.runoob.com/ruby/ruby-tutorial.html\" target=\"_blank\" rel=\"noopener\">教程的地址【H看】</a><p></p>\n<p>1、略过  ruby安装不同的平台等环境以及步骤。<br>2、中文编码问题,（有可能有些安装环境并没有支持中文编码）</p>\n<blockquote>\n<p>可能出现的问题： invalid multibyte char (US-ASCII) </p>\n</blockquote>\n<p>PS： </p>\n<blockquote>\n<p>1）设置utf-8解析源码<br>2）设置文件编码为utf-8 保存<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/ruby -w</span><br><span class=\"line\"># -*- coding: UTF-8 -*- #  多了上面这一行</span><br><span class=\"line\">puts &quot;你好，世界！ssss&quot;;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>3、ruby命令行 【也就是指定ruby脚本可以添加的一些参数】<br>其实和其他命令没有什么差别， </p>\n<blockquote>\n<p>ruby [ options ] [.] [ programfile ] [ arguments … ]</p>\n</blockquote>\n<blockquote>\n<p>man ruby  || ruby -h</p>\n</blockquote>\n<p>下面是对应的饿命令参数：</p>\n<blockquote>\n<p>-w              turn warnings on for your script [显示出警告的内容]</p>\n</blockquote>\n<p>4、环境变量 env</p>\n<blockquote>\n<p>含义： 环境变量是用来控制ruby解释器来控制它的行为。</p>\n</blockquote>\n<p>终端上输入： env 即可查看当前编译器设置的环境变量列表</p>\n<p>5、基本语法（基本约定）：<br>1）<br>1、1） 空白字符（空格、制表符）【同般】<br>1、2）有时用来解释模棱两可的语句 ，启用 -w 会出现警告</p>\n<blockquote>\n<p>eg：<br>a + b 被解释为 a+b （这是一个局部变量）<br>a  +b 被解释为 a(+b) （这是一个方法调用）</p>\n</blockquote>\n<p>2） ruby 行尾<br>2、1）分号和换行 【同般】<br>2、2）运算符；eg：+、- 、反斜杠 表示语句延续</p>\n<p>3）标示符<br>3.1）【同般】 （同一班的语言）大小写敏感</p>\n<p>4）保留字<br>BEGIN    do        next        then<br>END        else        nil        true<br>alias    elsif        not        undef<br>and        end        or        unless<br>begin    ensure    redo    until<br>break    false    rescuse    when<br>case    for        retry    while<br>class    if        return    while<br>def        in         self        <strong>FILE</strong><br>defined? module    super    <strong>LINE</strong>    </p>\n<p>5)ruby 中here document（以前没有的概念） ——&gt; 建立多行字符串<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print &lt;&lt;EOF</span><br><span class=\"line\">    这是第一种方式创建here document 。</span><br><span class=\"line\">    多行字符串。</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p>&lt;&lt; 之后，可以制定一个字符串或者标示符来终止， 上面； EOF，<br>EOF所有行的字符串就是我们要的值。<br>请注意&lt;&lt; 和终止符之间必须没有空格。</p>\n<p>6) BEGIN、END 语句<br>BEGIN：程序在运行之前被调用<br>END：程序在运行结尾调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\">puts &quot;这是主 Ruby 程序&quot;</span><br><span class=\"line\">BEGIN &#123;</span><br><span class=\"line\">   puts &quot;初始化 Ruby 程序&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\"> </span><br><span class=\"line\">puts &quot;这是主 Ruby 程序&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\">END &#123;</span><br><span class=\"line\">   puts &quot;停止 Ruby 程序&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">BEGIN &#123;</span><br><span class=\"line\">   puts &quot;初始化 Ruby 程序&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>8)ruby注释<br>【同般】 #开头</p>\n<p>6、数据类型 （略过）</p>\n<p>7、类和对象 以及类案例<br>ruby是完美的面向对象语言<br>特征：</p>\n<ul>\n<li>数据封装</li>\n<li>数据抽象</li>\n<li>多态性</li>\n<li>继承</li>\n</ul>\n<p>1)类定义： （同般）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Customer</span><br><span class=\"line\">.......</span><br><span class=\"line\"></span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure></p>\n<p>2）类中变量 （4种）<br>2.1）局部变量： 方法中定义的变量，局部变量以小写字母或 _ 开始。（同般）<br>2.2）实例变量： 实例变量可以跨任何特定的实例或对象中的方法使用。这意味着，实例变量可以从对象到对象的改变。实例变量在变量名之前放置符号（@）。 【这个不是很理解】<br>2.3）类变量：  可以跨不同的对象，(同般) 类变量在变量名之前放置符号（@@）。<br>2.4）全局变量：类变量不可以跨类使用， 全局变量可以，全局变量总是以美元符号（$）开始。</p>\n<p>3）Ruby 类中的成员函数，函数被称为方法。每个方法是以关键字 def 开始，后跟方法名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Sample</span><br><span class=\"line\">   def function</span><br><span class=\"line\">      statement 1</span><br><span class=\"line\">      statement 2</span><br><span class=\"line\">   end</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure></p>\n<p>不错的例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\"></span><br><span class=\"line\">class Customer</span><br><span class=\"line\">   @@no_of_customers=0</span><br><span class=\"line\">   def initialize(id, name, addr)</span><br><span class=\"line\">      @cust_id=id</span><br><span class=\"line\">      @cust_name=name</span><br><span class=\"line\">      @cust_addr=addr</span><br><span class=\"line\">   end</span><br><span class=\"line\">   def display_details()</span><br><span class=\"line\">      puts &quot;Customer id #@cust_id&quot;</span><br><span class=\"line\">      puts &quot;Customer name #@cust_name&quot;</span><br><span class=\"line\">      puts &quot;Customer address #@cust_addr&quot;</span><br><span class=\"line\">   end</span><br><span class=\"line\">   def total_no_of_customers()</span><br><span class=\"line\">      @@no_of_customers += 1</span><br><span class=\"line\">      puts &quot;Total number of customers: #@@no_of_customers&quot;</span><br><span class=\"line\">   end</span><br><span class=\"line\">end</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建对象</span><br><span class=\"line\">cust1=Customer.new(&quot;1&quot;, &quot;John&quot;, &quot;Wisdom Apartments, Ludhiya&quot;)</span><br><span class=\"line\">cust2=Customer.new(&quot;2&quot;, &quot;Poul&quot;, &quot;New Empire road, Khandala&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 调用方法</span><br><span class=\"line\">cust1.display_details()</span><br><span class=\"line\">cust1.total_no_of_customers()</span><br><span class=\"line\">cust2.display_details()</span><br><span class=\"line\">cust2.total_no_of_customers()</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>变量、运算符、注释、条件判断、循环、方法（略） 【这些都是略过的内容】</p>\n</blockquote>\n<p>8、ruby中的 块</p>\n<ul>\n<li>块由大量的代码组成。</li>\n<li>您需要给块取个名称。</li>\n<li>块中的代码总是包含在大括号 {} 内。</li>\n<li>块总是从与其具有相同名称的函数调用。<font color=\"red\">这意味着如果您的块名称为 test，那么您要使用函数 test 来调用这个块。</font></li>\n<li>您可以使用 yield 语句来调用块。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">block_name&#123;</span><br><span class=\"line\">   statement1</span><br><span class=\"line\">   statement2</span><br><span class=\"line\">   ..........</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>1)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这样的一个例子：</span><br><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\"># -*- coding: UTF-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">def test</span><br><span class=\"line\">   puts &quot;在 test 方法内&quot;</span><br><span class=\"line\">   yield</span><br><span class=\"line\">   puts &quot;你又回到了 test 方法内&quot;</span><br><span class=\"line\">   yield</span><br><span class=\"line\">end</span><br><span class=\"line\">test &#123;puts &quot;块内代码执行&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">|| 上面这个例子，如果将类名字改为test1 ，将会出现错误，或者同时将块的名字test改为test1.</span><br></pre></td></tr></table></figure></p>\n<p>2)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">带有参数：</span><br><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\"># -*- coding: UTF-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">def test</span><br><span class=\"line\">   yield 5</span><br><span class=\"line\">   puts &quot;在 test 方法内&quot;</span><br><span class=\"line\">   yield 100</span><br><span class=\"line\">end</span><br><span class=\"line\">test &#123;|i| puts &quot;你在块 #&#123;i&#125; 内&quot;&#125;</span><br><span class=\"line\">|| yield 语句后跟着参数。您甚至可以传递多个参数。在块中，您可以在两个竖线之间放置一个变量来接受参数。</span><br><span class=\"line\">|| yield a, b   # 多个参数传递的方式</span><br><span class=\"line\">   test &#123;|a, b| statement&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3)块和方法 ：通常使用 yield 语句从与其具有相同名称的方法调用块</p>\n<ul>\n<li>如果方法的最后一个参数前带有 &amp;，将向该方法传递一个块，且这个块可被赋给最后一个参数。如果 * 和 &amp; 同时出现在参数列表中，&amp; 应放在后面。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\"></span><br><span class=\"line\">def test(&amp;block)</span><br><span class=\"line\">   block.call</span><br><span class=\"line\">end</span><br><span class=\"line\">test &#123; puts &quot;Hello World!&quot;&#125;</span><br></pre></td></tr></table></figure>\n<p>ps: 块的概念 ——&gt; 代码块(函数的方式调用) ———&gt;  无参数、参数、取地址的方式</p>\n<p>9、字符串（略）有关查询可以到菜鸟教程里面</p>\n<p>10、数组、哈希、日期、范围（略)</p>\n<p>11、迭代器</p>\n<p>12、文件的输入和输出</p>\n<p>13、file类和方法</p>\n<p>14、Dir类和方法</p>\n<p>15、异常</p>\n<h3>高级内容</h3>\n\n<p>16、面向对象 （基本上看了，但是还没有所有的都理解执行了，明天回来再看一遍）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>【基本的语法复习完成即可(对于web的项目也可以去实现看接下来的安排)】</p>\n<p></p><h2> 一、ruby语言基础复习 </h2><br><a href=\"http://www.runoob.com/ruby/ruby-tutorial.html\" target=\"_blank\" rel=\"noopener\">教程的地址【H看】</a><p></p>\n<p>1、略过  ruby安装不同的平台等环境以及步骤。<br>2、中文编码问题,（有可能有些安装环境并没有支持中文编码）</p>\n<blockquote>\n<p>可能出现的问题： invalid multibyte char (US-ASCII) </p>\n</blockquote>\n<p>PS： </p>\n<blockquote>\n<p>1）设置utf-8解析源码<br>2）设置文件编码为utf-8 保存<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/ruby -w</span><br><span class=\"line\"># -*- coding: UTF-8 -*- #  多了上面这一行</span><br><span class=\"line\">puts &quot;你好，世界！ssss&quot;;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>3、ruby命令行 【也就是指定ruby脚本可以添加的一些参数】<br>其实和其他命令没有什么差别， </p>\n<blockquote>\n<p>ruby [ options ] [.] [ programfile ] [ arguments … ]</p>\n</blockquote>\n<blockquote>\n<p>man ruby  || ruby -h</p>\n</blockquote>\n<p>下面是对应的饿命令参数：</p>\n<blockquote>\n<p>-w              turn warnings on for your script [显示出警告的内容]</p>\n</blockquote>\n<p>4、环境变量 env</p>\n<blockquote>\n<p>含义： 环境变量是用来控制ruby解释器来控制它的行为。</p>\n</blockquote>\n<p>终端上输入： env 即可查看当前编译器设置的环境变量列表</p>\n<p>5、基本语法（基本约定）：<br>1）<br>1、1） 空白字符（空格、制表符）【同般】<br>1、2）有时用来解释模棱两可的语句 ，启用 -w 会出现警告</p>\n<blockquote>\n<p>eg：<br>a + b 被解释为 a+b （这是一个局部变量）<br>a  +b 被解释为 a(+b) （这是一个方法调用）</p>\n</blockquote>\n<p>2） ruby 行尾<br>2、1）分号和换行 【同般】<br>2、2）运算符；eg：+、- 、反斜杠 表示语句延续</p>\n<p>3）标示符<br>3.1）【同般】 （同一班的语言）大小写敏感</p>\n<p>4）保留字<br>BEGIN    do        next        then<br>END        else        nil        true<br>alias    elsif        not        undef<br>and        end        or        unless<br>begin    ensure    redo    until<br>break    false    rescuse    when<br>case    for        retry    while<br>class    if        return    while<br>def        in         self        <strong>FILE</strong><br>defined? module    super    <strong>LINE</strong>    </p>\n<p>5)ruby 中here document（以前没有的概念） ——&gt; 建立多行字符串<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print &lt;&lt;EOF</span><br><span class=\"line\">    这是第一种方式创建here document 。</span><br><span class=\"line\">    多行字符串。</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p>&lt;&lt; 之后，可以制定一个字符串或者标示符来终止， 上面； EOF，<br>EOF所有行的字符串就是我们要的值。<br>请注意&lt;&lt; 和终止符之间必须没有空格。</p>\n<p>6) BEGIN、END 语句<br>BEGIN：程序在运行之前被调用<br>END：程序在运行结尾调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\">puts &quot;这是主 Ruby 程序&quot;</span><br><span class=\"line\">BEGIN &#123;</span><br><span class=\"line\">   puts &quot;初始化 Ruby 程序&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\"> </span><br><span class=\"line\">puts &quot;这是主 Ruby 程序&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\">END &#123;</span><br><span class=\"line\">   puts &quot;停止 Ruby 程序&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">BEGIN &#123;</span><br><span class=\"line\">   puts &quot;初始化 Ruby 程序&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>8)ruby注释<br>【同般】 #开头</p>\n<p>6、数据类型 （略过）</p>\n<p>7、类和对象 以及类案例<br>ruby是完美的面向对象语言<br>特征：</p>\n<ul>\n<li>数据封装</li>\n<li>数据抽象</li>\n<li>多态性</li>\n<li>继承</li>\n</ul>\n<p>1)类定义： （同般）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Customer</span><br><span class=\"line\">.......</span><br><span class=\"line\"></span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure></p>\n<p>2）类中变量 （4种）<br>2.1）局部变量： 方法中定义的变量，局部变量以小写字母或 _ 开始。（同般）<br>2.2）实例变量： 实例变量可以跨任何特定的实例或对象中的方法使用。这意味着，实例变量可以从对象到对象的改变。实例变量在变量名之前放置符号（@）。 【这个不是很理解】<br>2.3）类变量：  可以跨不同的对象，(同般) 类变量在变量名之前放置符号（@@）。<br>2.4）全局变量：类变量不可以跨类使用， 全局变量可以，全局变量总是以美元符号（$）开始。</p>\n<p>3）Ruby 类中的成员函数，函数被称为方法。每个方法是以关键字 def 开始，后跟方法名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Sample</span><br><span class=\"line\">   def function</span><br><span class=\"line\">      statement 1</span><br><span class=\"line\">      statement 2</span><br><span class=\"line\">   end</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure></p>\n<p>不错的例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\"></span><br><span class=\"line\">class Customer</span><br><span class=\"line\">   @@no_of_customers=0</span><br><span class=\"line\">   def initialize(id, name, addr)</span><br><span class=\"line\">      @cust_id=id</span><br><span class=\"line\">      @cust_name=name</span><br><span class=\"line\">      @cust_addr=addr</span><br><span class=\"line\">   end</span><br><span class=\"line\">   def display_details()</span><br><span class=\"line\">      puts &quot;Customer id #@cust_id&quot;</span><br><span class=\"line\">      puts &quot;Customer name #@cust_name&quot;</span><br><span class=\"line\">      puts &quot;Customer address #@cust_addr&quot;</span><br><span class=\"line\">   end</span><br><span class=\"line\">   def total_no_of_customers()</span><br><span class=\"line\">      @@no_of_customers += 1</span><br><span class=\"line\">      puts &quot;Total number of customers: #@@no_of_customers&quot;</span><br><span class=\"line\">   end</span><br><span class=\"line\">end</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建对象</span><br><span class=\"line\">cust1=Customer.new(&quot;1&quot;, &quot;John&quot;, &quot;Wisdom Apartments, Ludhiya&quot;)</span><br><span class=\"line\">cust2=Customer.new(&quot;2&quot;, &quot;Poul&quot;, &quot;New Empire road, Khandala&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 调用方法</span><br><span class=\"line\">cust1.display_details()</span><br><span class=\"line\">cust1.total_no_of_customers()</span><br><span class=\"line\">cust2.display_details()</span><br><span class=\"line\">cust2.total_no_of_customers()</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>变量、运算符、注释、条件判断、循环、方法（略） 【这些都是略过的内容】</p>\n</blockquote>\n<p>8、ruby中的 块</p>\n<ul>\n<li>块由大量的代码组成。</li>\n<li>您需要给块取个名称。</li>\n<li>块中的代码总是包含在大括号 {} 内。</li>\n<li>块总是从与其具有相同名称的函数调用。<font color=\"red\">这意味着如果您的块名称为 test，那么您要使用函数 test 来调用这个块。</font></li>\n<li>您可以使用 yield 语句来调用块。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">block_name&#123;</span><br><span class=\"line\">   statement1</span><br><span class=\"line\">   statement2</span><br><span class=\"line\">   ..........</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>1)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这样的一个例子：</span><br><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\"># -*- coding: UTF-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">def test</span><br><span class=\"line\">   puts &quot;在 test 方法内&quot;</span><br><span class=\"line\">   yield</span><br><span class=\"line\">   puts &quot;你又回到了 test 方法内&quot;</span><br><span class=\"line\">   yield</span><br><span class=\"line\">end</span><br><span class=\"line\">test &#123;puts &quot;块内代码执行&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">|| 上面这个例子，如果将类名字改为test1 ，将会出现错误，或者同时将块的名字test改为test1.</span><br></pre></td></tr></table></figure></p>\n<p>2)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">带有参数：</span><br><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\"># -*- coding: UTF-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">def test</span><br><span class=\"line\">   yield 5</span><br><span class=\"line\">   puts &quot;在 test 方法内&quot;</span><br><span class=\"line\">   yield 100</span><br><span class=\"line\">end</span><br><span class=\"line\">test &#123;|i| puts &quot;你在块 #&#123;i&#125; 内&quot;&#125;</span><br><span class=\"line\">|| yield 语句后跟着参数。您甚至可以传递多个参数。在块中，您可以在两个竖线之间放置一个变量来接受参数。</span><br><span class=\"line\">|| yield a, b   # 多个参数传递的方式</span><br><span class=\"line\">   test &#123;|a, b| statement&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3)块和方法 ：通常使用 yield 语句从与其具有相同名称的方法调用块</p>\n<ul>\n<li>如果方法的最后一个参数前带有 &amp;，将向该方法传递一个块，且这个块可被赋给最后一个参数。如果 * 和 &amp; 同时出现在参数列表中，&amp; 应放在后面。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/ruby</span><br><span class=\"line\"></span><br><span class=\"line\">def test(&amp;block)</span><br><span class=\"line\">   block.call</span><br><span class=\"line\">end</span><br><span class=\"line\">test &#123; puts &quot;Hello World!&quot;&#125;</span><br></pre></td></tr></table></figure>\n<p>ps: 块的概念 ——&gt; 代码块(函数的方式调用) ———&gt;  无参数、参数、取地址的方式</p>\n<p>9、字符串（略）有关查询可以到菜鸟教程里面</p>\n<p>10、数组、哈希、日期、范围（略)</p>\n<p>11、迭代器</p>\n<p>12、文件的输入和输出</p>\n<p>13、file类和方法</p>\n<p>14、Dir类和方法</p>\n<p>15、异常</p>\n<h3>高级内容</h3>\n\n<p>16、面向对象 （基本上看了，但是还没有所有的都理解执行了，明天回来再看一遍）</p>\n"},{"title":"runloop 自解","date":"2019-02-20T08:50:02.000Z","_content":"\n[官方源代码链接](https://opensource.apple.com/tarballs/libdispatch/)\n[自己注释的代码目录下的runloop](https://github.com/helinyu/helinyu.github.io/tree/master/source/codesource/oc_workspace/RunloopWorkspace)\n\n\n\n\n\n\n","source":"_posts/runloop-自解.md","raw":"---\ntitle: runloop 自解\ndate: 2019-02-20 16:50:02\ntags: OC\ncategories: OC\n---\n\n[官方源代码链接](https://opensource.apple.com/tarballs/libdispatch/)\n[自己注释的代码目录下的runloop](https://github.com/helinyu/helinyu.github.io/tree/master/source/codesource/oc_workspace/RunloopWorkspace)\n\n\n\n\n\n\n","slug":"runloop-自解","published":1,"updated":"2019-02-20T11:09:24.749Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppcln001kqiojlle4eppk","content":"<p><a href=\"https://opensource.apple.com/tarballs/libdispatch/\" target=\"_blank\" rel=\"noopener\">官方源代码链接</a><br><a href=\"https://github.com/helinyu/helinyu.github.io/tree/master/source/codesource/oc_workspace/RunloopWorkspace\" target=\"_blank\" rel=\"noopener\">自己注释的代码目录下的runloop</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://opensource.apple.com/tarballs/libdispatch/\" target=\"_blank\" rel=\"noopener\">官方源代码链接</a><br><a href=\"https://github.com/helinyu/helinyu.github.io/tree/master/source/codesource/oc_workspace/RunloopWorkspace\" target=\"_blank\" rel=\"noopener\">自己注释的代码目录下的runloop</a></p>\n"},{"title":"ruby on rails 项目","date":"2019-03-03T14:41:18.000Z","_content":"\n项目： 管理自己的阅读图书的系统 ， 这个应该如何进行处理呢？\n\n记录所有图书， 分类， \n状态： 已读， 还没有读的\n\n\n登录系统： （这一部分我们应该如何进行处理的）\n\n是使用API还是直接后台调用就实现html的页面？\n\n\n看看数据库是如何精心设置：\n1、纸质书籍\n2、电子书籍\n3、网络网址\n【2.3 应该都有对应的打开，和继续阅读的功能】\n\n\n\n\n","source":"_posts/ruby-on-rails-项目.md","raw":"---\ntitle: ruby on rails 项目\ndate: 2019-03-03 22:41:18\ntags: ruby\ncategories: 编程语言\n---\n\n项目： 管理自己的阅读图书的系统 ， 这个应该如何进行处理呢？\n\n记录所有图书， 分类， \n状态： 已读， 还没有读的\n\n\n登录系统： （这一部分我们应该如何进行处理的）\n\n是使用API还是直接后台调用就实现html的页面？\n\n\n看看数据库是如何精心设置：\n1、纸质书籍\n2、电子书籍\n3、网络网址\n【2.3 应该都有对应的打开，和继续阅读的功能】\n\n\n\n\n","slug":"ruby-on-rails-项目","published":1,"updated":"2019-03-03T17:21:47.060Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclp001pqioj00cmiulu","content":"<p>项目： 管理自己的阅读图书的系统 ， 这个应该如何进行处理呢？</p>\n<p>记录所有图书， 分类，<br>状态： 已读， 还没有读的</p>\n<p>登录系统： （这一部分我们应该如何进行处理的）</p>\n<p>是使用API还是直接后台调用就实现html的页面？</p>\n<p>看看数据库是如何精心设置：<br>1、纸质书籍<br>2、电子书籍<br>3、网络网址<br>【2.3 应该都有对应的打开，和继续阅读的功能】</p>\n","site":{"data":{}},"excerpt":"","more":"<p>项目： 管理自己的阅读图书的系统 ， 这个应该如何进行处理呢？</p>\n<p>记录所有图书， 分类，<br>状态： 已读， 还没有读的</p>\n<p>登录系统： （这一部分我们应该如何进行处理的）</p>\n<p>是使用API还是直接后台调用就实现html的页面？</p>\n<p>看看数据库是如何精心设置：<br>1、纸质书籍<br>2、电子书籍<br>3、网络网址<br>【2.3 应该都有对应的打开，和继续阅读的功能】</p>\n"},{"title":"有待研究的内容集合","date":"2019-03-04T13:56:31.000Z","_content":"<font size=4 color=green> iOS 开发研究 </font>\n\n1、ios 上面的page container \n1）SwipeTableView\n2）VTMagic\n\n2、如何\n比较block， notification以及delegate消耗的资源， cpu和内存\n\n3、内存缓存数据， 给出开发过程中数据缓存的一般逻辑结构 【开发中要去思考的】\n1、缓存了字符串\n2、缓存了字符串解析之后的对象内容；\n\n4、本地化与国际化\nhttps://www.jianshu.com/p/bcc8c199f32c\n本地化的处理\nhttps://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/Introduction/Introduction.html#//apple_ref/doc/uid/10000171i\n国际化上面处理的本地化 ，文案要处理好；\n\n\n5、 代码统计\nhttps://blog.csdn.net/congqingbin/article/details/78547996\n这个管代码的行数统计\n\n\n6、 代码分析之后出现的问题： （种类主要是看内存）\ndead store 变量赋值，但是没有使用\nlocalizabiliity issue 这个是本地化没有处理\nmemory error  这个是内存问题 \nlogic error \nmemory   \ncore foundation\nAPI misuse (Apple)  api 误用\n\n7、coobjc 阿里巴巴的一个iOS协程库\n[coobjc of github](https://github.com/alibaba/coobjc)\n\n—————————————————————————————————————————————————————————————————————————\n<font size=4 color=green>其他的 </font>\n1、一个wiki的搭建 ， 看一下自己能够搭建出来怎么样的wiki ，或者用于自己的数据库里；\n使用dokuwiki【技术wiki】 来安装一个， 这个就是有关的处理内容； \n[mediawiki 这个使用与其他的]\n\n\n\n\n\n\n\n\n ","source":"_posts/有待研究的内容集合.md","raw":"---\ntitle: 有待研究的内容集合\ndate: 2019-03-04 21:56:31\ntags: 其他\ncategories: 其他\n---\n<font size=4 color=green> iOS 开发研究 </font>\n\n1、ios 上面的page container \n1）SwipeTableView\n2）VTMagic\n\n2、如何\n比较block， notification以及delegate消耗的资源， cpu和内存\n\n3、内存缓存数据， 给出开发过程中数据缓存的一般逻辑结构 【开发中要去思考的】\n1、缓存了字符串\n2、缓存了字符串解析之后的对象内容；\n\n4、本地化与国际化\nhttps://www.jianshu.com/p/bcc8c199f32c\n本地化的处理\nhttps://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/Introduction/Introduction.html#//apple_ref/doc/uid/10000171i\n国际化上面处理的本地化 ，文案要处理好；\n\n\n5、 代码统计\nhttps://blog.csdn.net/congqingbin/article/details/78547996\n这个管代码的行数统计\n\n\n6、 代码分析之后出现的问题： （种类主要是看内存）\ndead store 变量赋值，但是没有使用\nlocalizabiliity issue 这个是本地化没有处理\nmemory error  这个是内存问题 \nlogic error \nmemory   \ncore foundation\nAPI misuse (Apple)  api 误用\n\n7、coobjc 阿里巴巴的一个iOS协程库\n[coobjc of github](https://github.com/alibaba/coobjc)\n\n—————————————————————————————————————————————————————————————————————————\n<font size=4 color=green>其他的 </font>\n1、一个wiki的搭建 ， 看一下自己能够搭建出来怎么样的wiki ，或者用于自己的数据库里；\n使用dokuwiki【技术wiki】 来安装一个， 这个就是有关的处理内容； \n[mediawiki 这个使用与其他的]\n\n\n\n\n\n\n\n\n ","slug":"有待研究的内容集合","published":1,"updated":"2019-03-04T14:46:30.428Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclq001sqiojfpxrwwv1","content":"<font size=\"4\" color=\"green\"> iOS 开发研究 </font>\n\n<p>1、ios 上面的page container<br>1）SwipeTableView<br>2）VTMagic</p>\n<p>2、如何<br>比较block， notification以及delegate消耗的资源， cpu和内存</p>\n<p>3、内存缓存数据， 给出开发过程中数据缓存的一般逻辑结构 【开发中要去思考的】<br>1、缓存了字符串<br>2、缓存了字符串解析之后的对象内容；</p>\n<p>4、本地化与国际化<br><a href=\"https://www.jianshu.com/p/bcc8c199f32c\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/bcc8c199f32c</a><br>本地化的处理<br><a href=\"https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/Introduction/Introduction.html#//apple_ref/doc/uid/10000171i\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/Introduction/Introduction.html#//apple_ref/doc/uid/10000171i</a><br>国际化上面处理的本地化 ，文案要处理好；</p>\n<p>5、 代码统计<br><a href=\"https://blog.csdn.net/congqingbin/article/details/78547996\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/congqingbin/article/details/78547996</a><br>这个管代码的行数统计</p>\n<p>6、 代码分析之后出现的问题： （种类主要是看内存）<br>dead store 变量赋值，但是没有使用<br>localizabiliity issue 这个是本地化没有处理<br>memory error  这个是内存问题<br>logic error<br>memory<br>core foundation<br>API misuse (Apple)  api 误用</p>\n<p>7、coobjc 阿里巴巴的一个iOS协程库<br><a href=\"https://github.com/alibaba/coobjc\" target=\"_blank\" rel=\"noopener\">coobjc of github</a></p>\n<p>—————————————————————————————————————————————————————————————————————————</p>\n<p><font size=\"4\" color=\"green\">其他的 </font><br>1、一个wiki的搭建 ， 看一下自己能够搭建出来怎么样的wiki ，或者用于自己的数据库里；<br>使用dokuwiki【技术wiki】 来安装一个， 这个就是有关的处理内容；<br>[mediawiki 这个使用与其他的]</p>\n","site":{"data":{}},"excerpt":"","more":"<font size=\"4\" color=\"green\"> iOS 开发研究 </font>\n\n<p>1、ios 上面的page container<br>1）SwipeTableView<br>2）VTMagic</p>\n<p>2、如何<br>比较block， notification以及delegate消耗的资源， cpu和内存</p>\n<p>3、内存缓存数据， 给出开发过程中数据缓存的一般逻辑结构 【开发中要去思考的】<br>1、缓存了字符串<br>2、缓存了字符串解析之后的对象内容；</p>\n<p>4、本地化与国际化<br><a href=\"https://www.jianshu.com/p/bcc8c199f32c\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/bcc8c199f32c</a><br>本地化的处理<br><a href=\"https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/Introduction/Introduction.html#//apple_ref/doc/uid/10000171i\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/Introduction/Introduction.html#//apple_ref/doc/uid/10000171i</a><br>国际化上面处理的本地化 ，文案要处理好；</p>\n<p>5、 代码统计<br><a href=\"https://blog.csdn.net/congqingbin/article/details/78547996\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/congqingbin/article/details/78547996</a><br>这个管代码的行数统计</p>\n<p>6、 代码分析之后出现的问题： （种类主要是看内存）<br>dead store 变量赋值，但是没有使用<br>localizabiliity issue 这个是本地化没有处理<br>memory error  这个是内存问题<br>logic error<br>memory<br>core foundation<br>API misuse (Apple)  api 误用</p>\n<p>7、coobjc 阿里巴巴的一个iOS协程库<br><a href=\"https://github.com/alibaba/coobjc\" target=\"_blank\" rel=\"noopener\">coobjc of github</a></p>\n<p>—————————————————————————————————————————————————————————————————————————</p>\n<p><font size=\"4\" color=\"green\">其他的 </font><br>1、一个wiki的搭建 ， 看一下自己能够搭建出来怎么样的wiki ，或者用于自己的数据库里；<br>使用dokuwiki【技术wiki】 来安装一个， 这个就是有关的处理内容；<br>[mediawiki 这个使用与其他的]</p>\n"},{"title":"swift 开源代码","date":"2019-02-25T18:45:40.000Z","_content":"\n[swift源码](https://github.com/apple/swift) [swift 官网地址](https://swift.org/)","source":"_posts/swift-开源代码.md","raw":"---\ntitle: swift 开源代码\ndate: 2019-02-26 02:45:40\ntags: swift\ncategories: iOS\n---\n\n[swift源码](https://github.com/apple/swift) [swift 官网地址](https://swift.org/)","slug":"swift-开源代码","published":1,"updated":"2019-03-02T18:58:50.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclt001wqiojf7ospspd","content":"<p><a href=\"https://github.com/apple/swift\" target=\"_blank\" rel=\"noopener\">swift源码</a> <a href=\"https://swift.org/\" target=\"_blank\" rel=\"noopener\">swift 官网地址</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://github.com/apple/swift\" target=\"_blank\" rel=\"noopener\">swift源码</a> <a href=\"https://swift.org/\" target=\"_blank\" rel=\"noopener\">swift 官网地址</a></p>\n"},{"title":"编译器以及编译语言 01","date":"2019-03-02T18:59:44.000Z","_content":">01 先学习脚本语言以及对应的编译器\n\n\n选择一种脚本语言， shell， python， ruby ，perl等 \n这里选择了ruby，——————(原因)iOS中很多工具都使用了ruby语言 ，这样可以通过ruby语言去看一些有关的开源代码\n\n这里写入了脚本的语言等等 ， 可以先熟悉一种语言， 比如；ruby \n[ruby 复习]()","source":"_posts/编译器以及编译语言-01.md","raw":"---\ntitle: 编译器以及编译语言 01\ndate: 2019-03-03 02:59:44\ntags: ruby\ncategories: 编程语言\n---\n>01 先学习脚本语言以及对应的编译器\n\n\n选择一种脚本语言， shell， python， ruby ，perl等 \n这里选择了ruby，——————(原因)iOS中很多工具都使用了ruby语言 ，这样可以通过ruby语言去看一些有关的开源代码\n\n这里写入了脚本的语言等等 ， 可以先熟悉一种语言， 比如；ruby \n[ruby 复习]()","slug":"编译器以及编译语言-01","published":1,"updated":"2019-03-02T19:47:28.798Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclu001yqiojp82whglo","content":"<blockquote>\n<p>01 先学习脚本语言以及对应的编译器</p>\n</blockquote>\n<p>选择一种脚本语言， shell， python， ruby ，perl等<br>这里选择了ruby，——————(原因)iOS中很多工具都使用了ruby语言 ，这样可以通过ruby语言去看一些有关的开源代码</p>\n<p>这里写入了脚本的语言等等 ， 可以先熟悉一种语言， 比如；ruby<br><a href=\"\">ruby 复习</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>01 先学习脚本语言以及对应的编译器</p>\n</blockquote>\n<p>选择一种脚本语言， shell， python， ruby ，perl等<br>这里选择了ruby，——————(原因)iOS中很多工具都使用了ruby语言 ，这样可以通过ruby语言去看一些有关的开源代码</p>\n<p>这里写入了脚本的语言等等 ， 可以先熟悉一种语言， 比如；ruby<br><a href=\"\">ruby 复习</a></p>\n"},{"title":"图像处理","date":"2018-05-02T15:56:24.000Z","_content":"\n\n内容的处理结果等等\n","source":"_posts/图像处理.md","raw":"---\ntitle: 图像处理\ndate: 2018-05-02 23:56:24\ntags:\ncategories: 图像处理\n---\n\n\n内容的处理结果等等\n","slug":"图像处理","published":1,"updated":"2018-09-18T05:04:21.083Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclw0022qiojb6kamy5z","content":"<p>内容的处理结果等等</p>\n","site":{"data":{}},"excerpt":"","more":"<p>内容的处理结果等等</p>\n"},{"title":"视频文件转FLV","date":"2018-10-11T16:20:25.000Z","_content":"\n从文件标题可以看出，flv并不是视频文件？ \n视频文件： mp4 等\n它也是一种视频文件格式； \n\nflv格式 编辑\nFLV流媒体格式是sorenson公司开发的一种视频格式，全称为Flash Video。它的出现有效地解决了视频文件导入Flash后，使导出的SWF文件体积庞大，不能在网络上很好的使用等缺点。\n\n\nflv在网络的直播与点播场景中【flv也是一种常见的格式】，flv是adobe不发的一种以作为直播也可以作为点播的封装格式。\n格式组成（简单）： 均以FLVTAG的形式存在，并且每个TAG都是独立存在的。\n\n<h2>一、flv 文件的标准格式 </h2>\n<h3>1、文件格式</h3>\n两部分： （1）flv文件头，（2）flv文件内容\n\nflv文件信息如下：\n![flv 文件信息](../../../../asset/Snip20181012_29.png)\n得出： \n1）文件签名占用了 3个字节， 组成： flv \n2）文件版本， 常见为1\n3）接下来文件前5位位0【保留】，接着音频展示设置为1，下一位为0【保留】，再下一位为视频展示，设置为1；\neg：如果是一个音视频都展示为flv文件，那么这个字节会设置为0x05（00000101）\n4）4字节的数据，为flv文件头数据的偏移位置。\n然后可以对flv二进制的文件进行解析，可以使用工具，hex fieid工具；\n\n<h3>2、flv文件内容格式解析 </h3>\n如下面的图：\n![flv 文件信息](../../../../asset/Snip20181012_30.png)\n计算每个TAG的大小， 为11（tag的header） + tag的body的大小；\nflv文件内容的格式为FLVTAG，\nFLVTAG分为两部分：\n1）TAGHeader部分\n2）TAGBody部分\n\n<h3>3、FLVTAG格式解析</h3>\n看下面的图：\n![flv 文件内容1](../../../../asset/Snip20181012_31.png)\n![flv 文件内容2](../../../../asset/Snip20181012_32.png)\n1）保留为占2位， 最大为：11b\n2)滤镜位占用1位，最大为1b\n3）TAG类型占用5位，最大声为11111b常见为：0x08, 0x09, 0x12,处理，和保留、滤镜公用一个字节，一般处理将保留位于滤镜设置为0；\n4）数据大小：24b（3bytes）\n5）时间戳大小：24b（3bytes）；最大：0xffffff（16777215ms）转化为16777s， 279m，4.66h，所以，flv格式可以存储达到4.66小时；\n6）扩展时间8b（1byte），最大为255，扩展时间戳使得flv原有的时间戳得到扩展，所以不仅仅是4.66H，可以到达49.7D；\n7)流ID大小24b（3bytes），最大为0xFFFFFF，不过flv中一直将其存储为0\n8）接下来就是header之后的数据，为TAG的data，大小为flag的Header中DataSize中存储的大小，存储的数据分为视频数据，音频数据，以及脚本数据。\n\n<h3>4、video tag解析</h3>\n如果header的flvType为0x09，则TAG为视频数据TAG，falv支持多种视频格式，说明：\n![flv videotag 0](../../../../asset/Snip20181012_33.png)\n![flv videotag 1](../../../../asset/Snip20181012_34.png)\nDTS： 主要用于视频的解码,在解码阶段使用；Decode Time Stamp。DTS主要是标识读入内存中的ｂｉｔ流在什么时候开始送入解码器中进行解码。\nPTS： 主要用于视频的同步和输出.在display的时候使用； Presentation Time Stamp。PTS主要用于度量解码后的视频帧什么时候被显示出来。\n\n<h3>5、audio tag数据格式解析</h3>\ntagtype = 0x08， 为音频，\n音频可以封装的压缩音频编码可以有很多种；\n![flv audio tag 1](../../../../asset/Snip20181012_35.png)\n![flv audio tag 1](../../../../asset/Snip20181012_36.png)\n\n<h3>6、scriptData 格式解析</h3>\ntagtype = 0x12 ,这个数据为scriptData类型，scriptData常见的展示方式为flv的metadata，里面存储的数据格式一般为AMF数据；\n![flv script data](../../../../asset/Snip20181012_37.png)\n更多解析可以查看官方文档；\n\n<h2>二、ffmpeg转flv参数 </h2>\n执行命令：ffmpeg -i 1519916400.mp4 -c copy -f flv output.flv\n![flv ffmpeg 转flv参数](../../../../asset/Snip20181012_37.png)\n\n\n\n\n","source":"_posts/视频文件转FLV.md","raw":"---\ntitle: 视频文件转FLV\ndate: 2018-10-12 00:20:25\ntags: ffmpeg\ncategories: ffmpeg\n---\n\n从文件标题可以看出，flv并不是视频文件？ \n视频文件： mp4 等\n它也是一种视频文件格式； \n\nflv格式 编辑\nFLV流媒体格式是sorenson公司开发的一种视频格式，全称为Flash Video。它的出现有效地解决了视频文件导入Flash后，使导出的SWF文件体积庞大，不能在网络上很好的使用等缺点。\n\n\nflv在网络的直播与点播场景中【flv也是一种常见的格式】，flv是adobe不发的一种以作为直播也可以作为点播的封装格式。\n格式组成（简单）： 均以FLVTAG的形式存在，并且每个TAG都是独立存在的。\n\n<h2>一、flv 文件的标准格式 </h2>\n<h3>1、文件格式</h3>\n两部分： （1）flv文件头，（2）flv文件内容\n\nflv文件信息如下：\n![flv 文件信息](../../../../asset/Snip20181012_29.png)\n得出： \n1）文件签名占用了 3个字节， 组成： flv \n2）文件版本， 常见为1\n3）接下来文件前5位位0【保留】，接着音频展示设置为1，下一位为0【保留】，再下一位为视频展示，设置为1；\neg：如果是一个音视频都展示为flv文件，那么这个字节会设置为0x05（00000101）\n4）4字节的数据，为flv文件头数据的偏移位置。\n然后可以对flv二进制的文件进行解析，可以使用工具，hex fieid工具；\n\n<h3>2、flv文件内容格式解析 </h3>\n如下面的图：\n![flv 文件信息](../../../../asset/Snip20181012_30.png)\n计算每个TAG的大小， 为11（tag的header） + tag的body的大小；\nflv文件内容的格式为FLVTAG，\nFLVTAG分为两部分：\n1）TAGHeader部分\n2）TAGBody部分\n\n<h3>3、FLVTAG格式解析</h3>\n看下面的图：\n![flv 文件内容1](../../../../asset/Snip20181012_31.png)\n![flv 文件内容2](../../../../asset/Snip20181012_32.png)\n1）保留为占2位， 最大为：11b\n2)滤镜位占用1位，最大为1b\n3）TAG类型占用5位，最大声为11111b常见为：0x08, 0x09, 0x12,处理，和保留、滤镜公用一个字节，一般处理将保留位于滤镜设置为0；\n4）数据大小：24b（3bytes）\n5）时间戳大小：24b（3bytes）；最大：0xffffff（16777215ms）转化为16777s， 279m，4.66h，所以，flv格式可以存储达到4.66小时；\n6）扩展时间8b（1byte），最大为255，扩展时间戳使得flv原有的时间戳得到扩展，所以不仅仅是4.66H，可以到达49.7D；\n7)流ID大小24b（3bytes），最大为0xFFFFFF，不过flv中一直将其存储为0\n8）接下来就是header之后的数据，为TAG的data，大小为flag的Header中DataSize中存储的大小，存储的数据分为视频数据，音频数据，以及脚本数据。\n\n<h3>4、video tag解析</h3>\n如果header的flvType为0x09，则TAG为视频数据TAG，falv支持多种视频格式，说明：\n![flv videotag 0](../../../../asset/Snip20181012_33.png)\n![flv videotag 1](../../../../asset/Snip20181012_34.png)\nDTS： 主要用于视频的解码,在解码阶段使用；Decode Time Stamp。DTS主要是标识读入内存中的ｂｉｔ流在什么时候开始送入解码器中进行解码。\nPTS： 主要用于视频的同步和输出.在display的时候使用； Presentation Time Stamp。PTS主要用于度量解码后的视频帧什么时候被显示出来。\n\n<h3>5、audio tag数据格式解析</h3>\ntagtype = 0x08， 为音频，\n音频可以封装的压缩音频编码可以有很多种；\n![flv audio tag 1](../../../../asset/Snip20181012_35.png)\n![flv audio tag 1](../../../../asset/Snip20181012_36.png)\n\n<h3>6、scriptData 格式解析</h3>\ntagtype = 0x12 ,这个数据为scriptData类型，scriptData常见的展示方式为flv的metadata，里面存储的数据格式一般为AMF数据；\n![flv script data](../../../../asset/Snip20181012_37.png)\n更多解析可以查看官方文档；\n\n<h2>二、ffmpeg转flv参数 </h2>\n执行命令：ffmpeg -i 1519916400.mp4 -c copy -f flv output.flv\n![flv ffmpeg 转flv参数](../../../../asset/Snip20181012_37.png)\n\n\n\n\n","slug":"视频文件转FLV","published":1,"updated":"2018-10-28T08:35:00.475Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjswppclx0024qioj24ycnjy6","content":"<p>从文件标题可以看出，flv并不是视频文件？<br>视频文件： mp4 等<br>它也是一种视频文件格式； </p>\n<p>flv格式 编辑<br>FLV流媒体格式是sorenson公司开发的一种视频格式，全称为Flash Video。它的出现有效地解决了视频文件导入Flash后，使导出的SWF文件体积庞大，不能在网络上很好的使用等缺点。</p>\n<p>flv在网络的直播与点播场景中【flv也是一种常见的格式】，flv是adobe不发的一种以作为直播也可以作为点播的封装格式。<br>格式组成（简单）： 均以FLVTAG的形式存在，并且每个TAG都是独立存在的。</p>\n<p></p><h2>一、flv 文件的标准格式 </h2><p></p>\n<p></p><h3>1、文件格式</h3><br>两部分： （1）flv文件头，（2）flv文件内容<p></p>\n<p>flv文件信息如下：<br><img src=\"../../../../asset/Snip20181012_29.png\" alt=\"flv 文件信息\"><br>得出：<br>1）文件签名占用了 3个字节， 组成： flv<br>2）文件版本， 常见为1<br>3）接下来文件前5位位0【保留】，接着音频展示设置为1，下一位为0【保留】，再下一位为视频展示，设置为1；<br>eg：如果是一个音视频都展示为flv文件，那么这个字节会设置为0x05（00000101）<br>4）4字节的数据，为flv文件头数据的偏移位置。<br>然后可以对flv二进制的文件进行解析，可以使用工具，hex fieid工具；</p>\n<p></p><h3>2、flv文件内容格式解析 </h3><br>如下面的图：<br><img src=\"../../../../asset/Snip20181012_30.png\" alt=\"flv 文件信息\"><br>计算每个TAG的大小， 为11（tag的header） + tag的body的大小；<br>flv文件内容的格式为FLVTAG，<br>FLVTAG分为两部分：<br>1）TAGHeader部分<br>2）TAGBody部分<p></p>\n<p></p><h3>3、FLVTAG格式解析</h3><br>看下面的图：<br><img src=\"../../../../asset/Snip20181012_31.png\" alt=\"flv 文件内容1\"><br><img src=\"../../../../asset/Snip20181012_32.png\" alt=\"flv 文件内容2\"><br>1）保留为占2位， 最大为：11b<br>2)滤镜位占用1位，最大为1b<br>3）TAG类型占用5位，最大声为11111b常见为：0x08, 0x09, 0x12,处理，和保留、滤镜公用一个字节，一般处理将保留位于滤镜设置为0；<br>4）数据大小：24b（3bytes）<br>5）时间戳大小：24b（3bytes）；最大：0xffffff（16777215ms）转化为16777s， 279m，4.66h，所以，flv格式可以存储达到4.66小时；<br>6）扩展时间8b（1byte），最大为255，扩展时间戳使得flv原有的时间戳得到扩展，所以不仅仅是4.66H，可以到达49.7D；<br>7)流ID大小24b（3bytes），最大为0xFFFFFF，不过flv中一直将其存储为0<br>8）接下来就是header之后的数据，为TAG的data，大小为flag的Header中DataSize中存储的大小，存储的数据分为视频数据，音频数据，以及脚本数据。<p></p>\n<p></p><h3>4、video tag解析</h3><br>如果header的flvType为0x09，则TAG为视频数据TAG，falv支持多种视频格式，说明：<br><img src=\"../../../../asset/Snip20181012_33.png\" alt=\"flv videotag 0\"><br><img src=\"../../../../asset/Snip20181012_34.png\" alt=\"flv videotag 1\"><br>DTS： 主要用于视频的解码,在解码阶段使用；Decode Time Stamp。DTS主要是标识读入内存中的ｂｉｔ流在什么时候开始送入解码器中进行解码。<br>PTS： 主要用于视频的同步和输出.在display的时候使用； Presentation Time Stamp。PTS主要用于度量解码后的视频帧什么时候被显示出来。<p></p>\n<p></p><h3>5、audio tag数据格式解析</h3><br>tagtype = 0x08， 为音频，<br>音频可以封装的压缩音频编码可以有很多种；<br><img src=\"../../../../asset/Snip20181012_35.png\" alt=\"flv audio tag 1\"><br><img src=\"../../../../asset/Snip20181012_36.png\" alt=\"flv audio tag 1\"><p></p>\n<p></p><h3>6、scriptData 格式解析</h3><br>tagtype = 0x12 ,这个数据为scriptData类型，scriptData常见的展示方式为flv的metadata，里面存储的数据格式一般为AMF数据；<br><img src=\"../../../../asset/Snip20181012_37.png\" alt=\"flv script data\"><br>更多解析可以查看官方文档；<p></p>\n<p></p><h2>二、ffmpeg转flv参数 </h2><br>执行命令：ffmpeg -i 1519916400.mp4 -c copy -f flv output.flv<br><img src=\"../../../../asset/Snip20181012_37.png\" alt=\"flv ffmpeg 转flv参数\"><p></p>\n","site":{"data":{}},"excerpt":"","more":"<p>从文件标题可以看出，flv并不是视频文件？<br>视频文件： mp4 等<br>它也是一种视频文件格式； </p>\n<p>flv格式 编辑<br>FLV流媒体格式是sorenson公司开发的一种视频格式，全称为Flash Video。它的出现有效地解决了视频文件导入Flash后，使导出的SWF文件体积庞大，不能在网络上很好的使用等缺点。</p>\n<p>flv在网络的直播与点播场景中【flv也是一种常见的格式】，flv是adobe不发的一种以作为直播也可以作为点播的封装格式。<br>格式组成（简单）： 均以FLVTAG的形式存在，并且每个TAG都是独立存在的。</p>\n<p></p><h2>一、flv 文件的标准格式 </h2><p></p>\n<p></p><h3>1、文件格式</h3><br>两部分： （1）flv文件头，（2）flv文件内容<p></p>\n<p>flv文件信息如下：<br><img src=\"../../../../asset/Snip20181012_29.png\" alt=\"flv 文件信息\"><br>得出：<br>1）文件签名占用了 3个字节， 组成： flv<br>2）文件版本， 常见为1<br>3）接下来文件前5位位0【保留】，接着音频展示设置为1，下一位为0【保留】，再下一位为视频展示，设置为1；<br>eg：如果是一个音视频都展示为flv文件，那么这个字节会设置为0x05（00000101）<br>4）4字节的数据，为flv文件头数据的偏移位置。<br>然后可以对flv二进制的文件进行解析，可以使用工具，hex fieid工具；</p>\n<p></p><h3>2、flv文件内容格式解析 </h3><br>如下面的图：<br><img src=\"../../../../asset/Snip20181012_30.png\" alt=\"flv 文件信息\"><br>计算每个TAG的大小， 为11（tag的header） + tag的body的大小；<br>flv文件内容的格式为FLVTAG，<br>FLVTAG分为两部分：<br>1）TAGHeader部分<br>2）TAGBody部分<p></p>\n<p></p><h3>3、FLVTAG格式解析</h3><br>看下面的图：<br><img src=\"../../../../asset/Snip20181012_31.png\" alt=\"flv 文件内容1\"><br><img src=\"../../../../asset/Snip20181012_32.png\" alt=\"flv 文件内容2\"><br>1）保留为占2位， 最大为：11b<br>2)滤镜位占用1位，最大为1b<br>3）TAG类型占用5位，最大声为11111b常见为：0x08, 0x09, 0x12,处理，和保留、滤镜公用一个字节，一般处理将保留位于滤镜设置为0；<br>4）数据大小：24b（3bytes）<br>5）时间戳大小：24b（3bytes）；最大：0xffffff（16777215ms）转化为16777s， 279m，4.66h，所以，flv格式可以存储达到4.66小时；<br>6）扩展时间8b（1byte），最大为255，扩展时间戳使得flv原有的时间戳得到扩展，所以不仅仅是4.66H，可以到达49.7D；<br>7)流ID大小24b（3bytes），最大为0xFFFFFF，不过flv中一直将其存储为0<br>8）接下来就是header之后的数据，为TAG的data，大小为flag的Header中DataSize中存储的大小，存储的数据分为视频数据，音频数据，以及脚本数据。<p></p>\n<p></p><h3>4、video tag解析</h3><br>如果header的flvType为0x09，则TAG为视频数据TAG，falv支持多种视频格式，说明：<br><img src=\"../../../../asset/Snip20181012_33.png\" alt=\"flv videotag 0\"><br><img src=\"../../../../asset/Snip20181012_34.png\" alt=\"flv videotag 1\"><br>DTS： 主要用于视频的解码,在解码阶段使用；Decode Time Stamp。DTS主要是标识读入内存中的ｂｉｔ流在什么时候开始送入解码器中进行解码。<br>PTS： 主要用于视频的同步和输出.在display的时候使用； Presentation Time Stamp。PTS主要用于度量解码后的视频帧什么时候被显示出来。<p></p>\n<p></p><h3>5、audio tag数据格式解析</h3><br>tagtype = 0x08， 为音频，<br>音频可以封装的压缩音频编码可以有很多种；<br><img src=\"../../../../asset/Snip20181012_35.png\" alt=\"flv audio tag 1\"><br><img src=\"../../../../asset/Snip20181012_36.png\" alt=\"flv audio tag 1\"><p></p>\n<p></p><h3>6、scriptData 格式解析</h3><br>tagtype = 0x12 ,这个数据为scriptData类型，scriptData常见的展示方式为flv的metadata，里面存储的数据格式一般为AMF数据；<br><img src=\"../../../../asset/Snip20181012_37.png\" alt=\"flv script data\"><br>更多解析可以查看官方文档；<p></p>\n<p></p><h2>二、ffmpeg转flv参数 </h2><br>执行命令：ffmpeg -i 1519916400.mp4 -c copy -f flv output.flv<br><img src=\"../../../../asset/Snip20181012_37.png\" alt=\"flv ffmpeg 转flv参数\"><p></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjswppck50000qioju6noflwr","category_id":"cjswppckh0003qiojht992xsg","_id":"cjswppckx000eqioj0lmm08hb"},{"post_id":"cjswppcke0002qioji3e6fjak","category_id":"cjswppckh0003qiojht992xsg","_id":"cjswppcl2000jqiojbeof3o9h"},{"post_id":"cjswppckk0005qiojtv2qzm3a","category_id":"cjswppckx000dqioj7xlvz1bi","_id":"cjswppcl7000qqiojf3az29to"},{"post_id":"cjswppckn0006qiojuwwuxmg4","category_id":"cjswppckx000dqioj7xlvz1bi","_id":"cjswppcla000vqiojfuox6sih"},{"post_id":"cjswppcko0007qiojijj43rt3","category_id":"cjswppcl7000pqiojfotd3b4x","_id":"cjswppcld0011qiojc02rqmha"},{"post_id":"cjswppckt000bqiojpjj6lmp1","category_id":"cjswppcla000wqiojxno8rvil","_id":"cjswppclh0017qioj1rq2uxxh"},{"post_id":"cjswppckv000cqiojwwl738o4","category_id":"cjswppcld0012qiojo12hahem","_id":"cjswppcll001eqiojbp4jv0jc"},{"post_id":"cjswppclh0018qiojwu322hoi","category_id":"cjswppcl7000pqiojfotd3b4x","_id":"cjswppclm001iqiojf68oqpjh"},{"post_id":"cjswppcky000hqiojqwpet5hv","category_id":"cjswppcli0019qioj6jvhmwgl","_id":"cjswppclo001mqiojefepbvoe"},{"post_id":"cjswppclk001dqioj6dfwj0xi","category_id":"cjswppcl7000pqiojfotd3b4x","_id":"cjswppclq001qqiojdhplmuud"},{"post_id":"cjswppcl1000iqiojgulhch61","category_id":"cjswppcll001fqiojum945oe1","_id":"cjswppcls001uqiojdd165u7q"},{"post_id":"cjswppcl4000mqiojadgrcoug","category_id":"cjswppcld0012qiojo12hahem","_id":"cjswppclv001zqiojw1x9qtyy"},{"post_id":"cjswppclt001wqiojf7ospspd","category_id":"cjswppcl7000pqiojfotd3b4x","_id":"cjswppcly0025qioj0hsc06ew"},{"post_id":"cjswppcl6000oqiojdtagun2g","category_id":"cjswppcls001tqioji7l1g7rw","_id":"cjswppclz0027qioj2d71o88p"},{"post_id":"cjswppcl8000sqioj40s08l6g","category_id":"cjswppcld0012qiojo12hahem","_id":"cjswppcm2002cqiojpq48zfgi"},{"post_id":"cjswppclx0024qioj24ycnjy6","category_id":"cjswppcld0012qiojo12hahem","_id":"cjswppcm2002eqioj5fnd1m4s"},{"post_id":"cjswppclc0010qioj1xighvci","category_id":"cjswppcli0019qioj6jvhmwgl","_id":"cjswppcm3002hqiojb65p094t"},{"post_id":"cjswppcle0014qiojb07ge8tx","category_id":"cjswppcli0019qioj6jvhmwgl","_id":"cjswppcm4002lqiojhibx2qcf"},{"post_id":"cjswppclg0016qiojl9bxd4i2","category_id":"cjswppcli0019qioj6jvhmwgl","_id":"cjswppcm5002oqiojrybfzygs"},{"post_id":"cjswppcli001cqiojwqulmhc4","category_id":"cjswppcm4002kqiojte3ceq1t","_id":"cjswppcm5002sqiojeu08jqfg"},{"post_id":"cjswppcll001hqioj9tle3b7c","category_id":"cjswppcm5002pqiojl6d03ee8","_id":"cjswppcm6002wqioj9vmy9lkp"},{"post_id":"cjswppcln001kqiojlle4eppk","category_id":"cjswppcm5002tqioj5xozj0jy","_id":"cjswppcm80031qioj3w3iu518"},{"post_id":"cjswppclp001pqioj00cmiulu","category_id":"cjswppcm5002pqiojl6d03ee8","_id":"cjswppcm90034qiojiamv34uo"},{"post_id":"cjswppclq001sqiojfpxrwwv1","category_id":"cjswppcm80030qiojehttqkuj","_id":"cjswppcma0039qioj9rrtdbzk"},{"post_id":"cjswppclu001yqiojp82whglo","category_id":"cjswppcm5002pqiojl6d03ee8","_id":"cjswppcma003cqiojp7ocd1y3"},{"post_id":"cjswppclw0022qiojb6kamy5z","category_id":"cjswppcma0038qiojz8w84o6c","_id":"cjswppcmb003eqioj7wk1iagd"}],"PostTag":[{"post_id":"cjswppck50000qioju6noflwr","tag_id":"cjswppckk0004qiojgd246773","_id":"cjswppcks000aqiojrkdshdoi"},{"post_id":"cjswppcke0002qioji3e6fjak","tag_id":"cjswppckk0004qiojgd246773","_id":"cjswppcky000gqiojn563l1iw"},{"post_id":"cjswppckk0005qiojtv2qzm3a","tag_id":"cjswppcky000fqiojmx3neefp","_id":"cjswppcl5000nqioj5459do0r"},{"post_id":"cjswppckn0006qiojuwwuxmg4","tag_id":"cjswppcky000fqiojmx3neefp","_id":"cjswppcl8000tqiojzmhe6e03"},{"post_id":"cjswppcko0007qiojijj43rt3","tag_id":"cjswppcl7000rqiojhaizwtqm","_id":"cjswppclb000zqioj1eso7ake"},{"post_id":"cjswppckt000bqiojpjj6lmp1","tag_id":"cjswppcla000xqioj8i2vopl4","_id":"cjswppclg0015qiojxb1qhxqe"},{"post_id":"cjswppckv000cqiojwwl738o4","tag_id":"cjswppcle0013qioj30qj2m4t","_id":"cjswppcli001bqiojjxof0w1i"},{"post_id":"cjswppcky000hqiojqwpet5hv","tag_id":"cjswppcli001aqiojk55odxig","_id":"cjswppclm001jqioj0hyka07r"},{"post_id":"cjswppclk001dqioj6dfwj0xi","tag_id":"cjswppcl7000rqiojhaizwtqm","_id":"cjswppclo001lqiojtvveccu3"},{"post_id":"cjswppcl1000iqiojgulhch61","tag_id":"cjswppcll001gqiojayw6p8rt","_id":"cjswppclq001rqiojlon38rhl"},{"post_id":"cjswppcl6000oqiojdtagun2g","tag_id":"cjswppclo001oqioj99f8rfun","_id":"cjswppclu001xqiojarpfd3tv"},{"post_id":"cjswppcl8000sqioj40s08l6g","tag_id":"cjswppcle0013qioj30qj2m4t","_id":"cjswppclx0023qiojzw6lx79d"},{"post_id":"cjswppclx0024qioj24ycnjy6","tag_id":"cjswppcle0013qioj30qj2m4t","_id":"cjswppcm10029qiojaip9zzoi"},{"post_id":"cjswppclc0010qioj1xighvci","tag_id":"cjswppclw0021qioj5y9s02rt","_id":"cjswppcm1002aqiojyh00s5rp"},{"post_id":"cjswppcle0014qiojb07ge8tx","tag_id":"cjswppcm00028qioj03b8avhm","_id":"cjswppcm2002fqiojzar5r57c"},{"post_id":"cjswppclg0016qiojl9bxd4i2","tag_id":"cjswppcm2002dqiojs1chlezd","_id":"cjswppcm4002jqiojron054p7"},{"post_id":"cjswppclh0018qiojwu322hoi","tag_id":"cjswppcli001aqiojk55odxig","_id":"cjswppcm5002nqiojg8c42jsk"},{"post_id":"cjswppcli001cqiojwqulmhc4","tag_id":"cjswppcm4002mqiojebdobryo","_id":"cjswppcm5002rqioj838pk4e5"},{"post_id":"cjswppcll001hqioj9tle3b7c","tag_id":"cjswppcm5002qqiojlr01uhh5","_id":"cjswppcm6002vqioj5gix9m29"},{"post_id":"cjswppcln001kqiojlle4eppk","tag_id":"cjswppcm6002uqioji5fumg2o","_id":"cjswppcm8002zqiojprzlws73"},{"post_id":"cjswppclp001pqioj00cmiulu","tag_id":"cjswppcm5002qqiojlr01uhh5","_id":"cjswppcm90033qiojvb8h59ag"},{"post_id":"cjswppclq001sqiojfpxrwwv1","tag_id":"cjswppcm80032qiojdyw3ulrt","_id":"cjswppcm90037qioj556cpeww"},{"post_id":"cjswppclt001wqiojf7ospspd","tag_id":"cjswppcm90036qioj4r1c2wnm","_id":"cjswppcma003bqioj07yqnwq4"},{"post_id":"cjswppclu001yqiojp82whglo","tag_id":"cjswppcm5002qqiojlr01uhh5","_id":"cjswppcmb003dqioj5fruromm"}],"Tag":[{"name":"AR","_id":"cjswppckk0004qiojgd246773"},{"name":"C","_id":"cjswppcky000fqiojmx3neefp"},{"name":"oc","_id":"cjswppcl7000rqiojhaizwtqm"},{"name":"计算机网络","_id":"cjswppcla000xqioj8i2vopl4"},{"name":"ffmpeg","_id":"cjswppcle0013qioj30qj2m4t"},{"name":"iOS","_id":"cjswppcli001aqiojk55odxig"},{"name":"tool","_id":"cjswppcll001gqiojayw6p8rt"},{"name":"unity","_id":"cjswppclo001oqioj99f8rfun"},{"name":"iOS基础知识 通知","_id":"cjswppclw0021qioj5y9s02rt"},{"name":"ios 杂烩","_id":"cjswppcm00028qioj03b8avhm"},{"name":"iOS 启动页面 开屏广告","_id":"cjswppcm2002dqiojs1chlezd"},{"name":"ios oc 面试","_id":"cjswppcm4002mqiojebdobryo"},{"name":"ruby","_id":"cjswppcm5002qqiojlr01uhh5"},{"name":"OC","_id":"cjswppcm6002uqioji5fumg2o"},{"name":"其他","_id":"cjswppcm80032qiojdyw3ulrt"},{"name":"swift","_id":"cjswppcm90036qioj4r1c2wnm"}]}}